{"version":3,"file":"login.js","names":["LoginAuth","passAuth","passAuthButton","socialAuth","socialAuthButton","form","submitButton","errorAlert","errorHead","errorBody","validator","setActiveButton","activeButton","buttons","forEach","button","classList","add","remove","toggleForm","forms","formElement","init","document","querySelector","addEventListener","e","preventDefault","FormValidation","formValidation","fields","login","validators","notEmpty","message","password","plugins","trigger","Trigger","bootstrap","Bootstrap5","rowSelector","eleInvalidClass","eleValidClass","validate","then","status","setAttribute","disabled","axios","post","value","response","removeAttribute","data","console","error","location","href","traces","error_head","innerHTML","catch","Util","onDOMContentLoaded"],"sources":["my/authentication/login.js"],"mappings":"AAAA,aAEA,IAAIA,UAAY,WACZ,IAAIC,EACAC,EAEAC,EACAC,EAEAC,EACAC,EAEAC,EACAC,EACAC,EAEAC,EA2GAC,EAAkB,SAAUC,EAAcC,GAC1CA,EAAQC,SAAQC,IACRA,IAAWH,EACXG,EAAOC,UAAUC,IAAI,UAErBF,EAAOC,UAAUE,OAAO,SAC5B,GAER,EAEIC,EAAa,SAAUd,EAAMe,GAC7BA,EAAMN,SAAQO,IACNA,IAAgBhB,EAChBgB,EAAYL,UAAUE,OAAO,UAE7BG,EAAYL,UAAUC,IAAI,SAC9B,GAER,EAGA,MAAO,CAEHK,KAAM,WACFpB,EAAiBqB,SAASC,cAAc,uBACxCpB,EAAmBmB,SAASC,cAAc,qBAE1CvB,EAAWsB,SAASC,cAAc,kBAClCrB,EAAaoB,SAASC,cAAc,gBAEpCnB,EAAOkB,SAASC,cAAc,eAC9BlB,EAAeiB,SAASC,cAAc,iBAEtCjB,EAAagB,SAASC,cAAc,gBACpChB,EAAYe,SAASC,cAAc,eACnCf,EAAYc,SAASC,cAAc,eAjDvCtB,EAAeuB,iBAAiB,SAAS,SAAUC,GAC/CA,EAAEC,iBACFhB,EAAgBT,EAAgB,CAACA,EAAgBE,IACjDe,EAAWlB,EAAU,CAACA,EAAUE,GACpC,IAGAC,EAAiBqB,iBAAiB,SAAS,SAAUC,GACjDA,EAAEC,iBACFhB,EAAgBP,EAAkB,CAACF,EAAgBE,IACnDe,EAAWhB,EAAY,CAACF,EAAUE,GACtC,IArGAO,EAAYkB,eAAeC,eAAexB,EAAM,CAC5CyB,OAAQ,CACJC,MAAO,CACHC,WAAY,CAKRC,SAAU,CACNC,QAAS,sBAIrBC,SAAU,CACNH,WAAY,CACRC,SAAU,CACNC,QAAS,wBAKzBE,QAAS,CACLC,QAAS,IAAIT,eAAeQ,QAAQE,QACpCC,UAAW,IAAIX,eAAeQ,QAAQI,WAAW,CAC7CC,YAAa,UACbC,gBAAiB,GACjBC,cAAe,QAO3BrC,EAAamB,iBAAiB,SAAS,SAAWC,GAC9CA,EAAEC,iBAEFjB,EAAUkC,WAAWC,MAAK,SAAUC,GACjB,UAAXA,GACAxC,EAAayC,aAAa,iBAAkB,MAC5CzC,EAAa0C,UAAW,EAGxBC,MAAMC,KACF,SAAU,CACVnB,MAAO1B,EAAKmB,cAAc,kBAAkB2B,MAC5ChB,SAAU9B,EAAKmB,cAAc,qBAAqB2B,QAEpDN,MAAK,SAAUO,GACb9C,EAAa+C,gBAAgB,kBAC7B/C,EAAa0C,UAAW,EAEpBI,EAASE,MAAgC,KAAxBF,EAASE,KAAKR,QAC/BS,QAAQC,MAAMJ,GACd/C,EAAKmB,cAAc,kBAAkB2B,MAAQ,GAC7C9C,EAAKmB,cAAc,qBAAqB2B,MAAQ,GAEhDM,SAASC,KAAO,MAEhBH,QAAQC,MAAMJ,EAASE,KAAKE,MAAOJ,EAASE,KAAKK,QAE7CP,EAASE,KAAKM,aACdpD,EAAUqD,UAAYT,EAASE,KAAKM,YAGpCR,EAASE,KAAKE,QACd/C,EAAUoD,UAAYT,EAASE,KAAKE,OAGxCjD,EAAWS,UAAUE,OAAO,UAEpC,IAAG4C,OAAM,SAAUN,GACfD,QAAQC,MAAMJ,UACd9C,EAAa+C,gBAAgB,kBAC7B/C,EAAa0C,UAAW,EAExBxC,EAAUqD,UAAY,0BACtBpD,EAAUoD,UAAY,mEACtBtD,EAAWS,UAAUE,OAAO,SAChC,MAEAV,EAAUqD,UAAY,iBACtBpD,EAAUoD,UAAY,6BACtBtD,EAAWS,UAAUE,OAAO,UAEpC,GACH,GA2DD,EAER,CAnKgB,GAsKhB6C,KAAKC,oBAAmB,WACpBhE,UAAUsB,MACd","sourcesContent":["\"use strict\";\r\n\r\nvar LoginAuth = function () {\r\n    var passAuth;\r\n    var passAuthButton;\r\n\r\n    var socialAuth;\r\n    var socialAuthButton;\r\n\r\n    var form;\r\n    var submitButton;\r\n\r\n    var errorAlert;\r\n    var errorHead;\r\n    var errorBody;\r\n\r\n    var validator;\r\n\r\n    var handleValidation = function (e) {\r\n        validator = FormValidation.formValidation(form, {\r\n            fields: {\r\n                login: {\r\n                    validators: {\r\n                        // regexp: {\r\n                        //     regexp: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                        //     message: \"The value is not a valid email address\"\r\n                        // },\r\n                        notEmpty: {\r\n                            message: \"Логин обязателен\"\r\n                        }\r\n                    }\r\n                },\r\n                password: {\r\n                    validators: {\r\n                        notEmpty: {\r\n                            message: \"Пароль обязателен\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            plugins: {\r\n                trigger: new FormValidation.plugins.Trigger,\r\n                bootstrap: new FormValidation.plugins.Bootstrap5({\r\n                    rowSelector: \".fv-row\",\r\n                    eleInvalidClass: \"\",\r\n                    eleValidClass: \"\"\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    var handleSubmit = function (e) {\r\n        submitButton.addEventListener(\"click\", (function (e) {\r\n            e.preventDefault();\r\n            \r\n            validator.validate().then(function (status) {\r\n                if (status === 'Valid') {\r\n                    submitButton.setAttribute(\"data-indicator\", \"on\");\r\n                    submitButton.disabled = true;\r\n\r\n                    // Check axios library docs: https://axios-http.com/docs/intro\r\n                    axios.post(\r\n                        '/login', {\r\n                        login: form.querySelector('[name=\"login\"]').value,\r\n                        password: form.querySelector('[name=\"password\"]').value\r\n                    }\r\n                    ).then(function (response) {\r\n                        submitButton.removeAttribute(\"data-indicator\");\r\n                        submitButton.disabled = false;\r\n\r\n                        if (response.data && response.data.status == 200) {\r\n                            console.error(response)\r\n                            form.querySelector('[name=\"login\"]').value = \"\";\r\n                            form.querySelector('[name=\"password\"]').value = \"\";\r\n\r\n                            location.href = \"/\";\r\n                        } else {\r\n                            console.error(response.data.error, response.data.traces)\r\n\r\n                            if (response.data.error_head) {\r\n                                errorHead.innerHTML = response.data.error_head;\r\n                            }\r\n\r\n                            if (response.data.error) {\r\n                                errorBody.innerHTML = response.data.error\r\n                            }\r\n\r\n                            errorAlert.classList.remove(\"d-none\");\r\n                        }\r\n                    }).catch(function (error) {\r\n                        console.error(response)\r\n                        submitButton.removeAttribute(\"data-indicator\");\r\n                        submitButton.disabled = false;\r\n\r\n                        errorHead.innerHTML = \"Ошибка связи с сервером\";\r\n                        errorBody.innerHTML = \"Проверьте соединение с интернетом или обратитесь к администрации\"\r\n                        errorAlert.classList.remove(\"d-none\");\r\n                    });\r\n                } else {\r\n                    errorHead.innerHTML = \"Ошибка запроса\";\r\n                    errorBody.innerHTML = \"Проверьте введённые данные\"\r\n                    errorAlert.classList.remove(\"d-none\");\r\n                }\r\n            });\r\n        }));\r\n    }\r\n\r\n    var handleModes = function (e) {\r\n        // Вход по паролю\r\n        passAuthButton.addEventListener(\"click\", function (e) {\r\n            e.preventDefault();\r\n            setActiveButton(passAuthButton, [passAuthButton, socialAuthButton]);\r\n            toggleForm(passAuth, [passAuth, socialAuth]);\r\n        });\r\n\r\n        // Вход через социальные сети\r\n        socialAuthButton.addEventListener(\"click\", function (e) {\r\n            e.preventDefault();\r\n            setActiveButton(socialAuthButton, [passAuthButton, socialAuthButton]);\r\n            toggleForm(socialAuth, [passAuth, socialAuth]);\r\n        });\r\n    }\r\n\r\n    var setActiveButton = function (activeButton, buttons) {\r\n        buttons.forEach(button => {\r\n            if (button === activeButton) {\r\n                button.classList.add(\"active\");\r\n            } else {\r\n                button.classList.remove(\"active\");\r\n            }\r\n        });\r\n    }\r\n\r\n    var toggleForm = function (form, forms) {\r\n        forms.forEach(formElement => {\r\n            if (formElement === form) {\r\n                formElement.classList.remove(\"d-none\");\r\n            } else {\r\n                formElement.classList.add(\"d-none\");\r\n            }\r\n        });\r\n    }\r\n\r\n    // Public functions\r\n    return {\r\n        // Initialization\r\n        init: function () {\r\n            passAuthButton = document.querySelector('#password-auth-icon');\r\n            socialAuthButton = document.querySelector('#social-auth-icon');\r\n\r\n            passAuth = document.querySelector('#password-auth');\r\n            socialAuth = document.querySelector('#social-auth');\r\n\r\n            form = document.querySelector('#login_form');\r\n            submitButton = document.querySelector('#login_submit');\r\n\r\n            errorAlert = document.querySelector('#error-alert');\r\n            errorHead = document.querySelector('#error-head');\r\n            errorBody = document.querySelector('#error-body');\r\n\r\n            handleModes();\r\n            handleValidation();\r\n            handleSubmit();\r\n        }\r\n    };\r\n}();\r\n\r\n// При загрузке документа\r\nUtil.onDOMContentLoaded(function () {\r\n    LoginAuth.init();\r\n});\r\n"]}