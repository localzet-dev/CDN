{"version":3,"file":"update-role.js","names":["UsersUpdateRole","element","document","getElementById","form","querySelector","modal","bootstrap","Modal","init","addEventListener","e","preventDefault","Swal","fire","text","icon","showCancelButton","buttonsStyling","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","then","result","value","reset","hide","dismiss","submitButton","setAttribute","disabled","setTimeout","removeAttribute","isConfirmed","initUpdateRole","Util","onDOMContentLoaded"],"sources":["my/apps/user-management/users/view/update-role.js"],"mappings":"AAAA,aAGA,IAAIA,gBAAkB,WAElB,MAAMC,EAAUC,SAASC,eAAe,qBAClCC,EAAOH,EAAQI,cAAc,2BAC7BC,EAAQ,IAAIC,UAAUC,MAAMP,GAiHlC,MAAO,CAEHQ,KAAM,WAhHW,MAGGR,EAAQI,cAAc,qCAC9BK,iBAAiB,SAASC,IAClCA,EAAEC,iBAEFC,KAAKC,KAAK,CACNC,KAAM,yCACNC,KAAM,UACNC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAmB,kBACnBC,iBAAkB,aAClBC,YAAa,CACTC,cAAe,kBACfC,aAAc,0BAEnBC,MAAK,SAAUC,GACVA,EAAOC,OACPtB,EAAKuB,QACLrB,EAAMsB,QACoB,WAAnBH,EAAOI,SACdhB,KAAKC,KAAK,CACNC,KAAM,qCACNC,KAAM,QACNE,gBAAgB,EAChBC,kBAAmB,cACnBE,YAAa,CACTC,cAAe,oBAI/B,GAAE,IAIerB,EAAQI,cAAc,sCAC9BK,iBAAiB,SAASC,IACnCA,EAAEC,iBAEFC,KAAKC,KAAK,CACNC,KAAM,yCACNC,KAAM,UACNC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAmB,kBACnBC,iBAAkB,aAClBC,YAAa,CACTC,cAAe,kBACfC,aAAc,0BAEnBC,MAAK,SAAUC,GACVA,EAAOC,OACPtB,EAAKuB,QACLrB,EAAMsB,QACoB,WAAnBH,EAAOI,SACdhB,KAAKC,KAAK,CACNC,KAAM,qCACNC,KAAM,QACNE,gBAAgB,EAChBC,kBAAmB,cACnBE,YAAa,CACTC,cAAe,oBAI/B,GAAE,IAIN,MAAMQ,EAAe7B,EAAQI,cAAc,sCAC3CyB,EAAapB,iBAAiB,SAAS,SAAUC,GAE7CA,EAAEC,iBAGFkB,EAAaC,aAAa,iBAAkB,MAG5CD,EAAaE,UAAW,EAGxBC,YAAW,WAEPH,EAAaI,gBAAgB,kBAG7BJ,EAAaE,UAAW,EAGxBnB,KAAKC,KAAK,CACNC,KAAM,wCACNC,KAAM,UACNE,gBAAgB,EAChBC,kBAAmB,cACnBE,YAAa,CACTC,cAAe,qBAEpBE,MAAK,SAAUC,GACVA,EAAOU,aACP7B,EAAMsB,MAEd,GAGJ,GAAG,IACP,GAAE,EAMEQ,EACJ,EAER,CA3HsB,GA8HtBC,KAAKC,oBAAmB,WACpBtC,gBAAgBS,MACpB","sourcesContent":["\"use strict\";\r\n\r\n// Определение класса\r\nvar UsersUpdateRole = function () {\r\n    // Shared variables\r\n    const element = document.getElementById('modal_update_role');\r\n    const form = element.querySelector('#modal_update_role_form');\r\n    const modal = new bootstrap.Modal(element);\r\n\r\n    // Init add schedule modal\r\n    var initUpdateRole = () => {\r\n\r\n        // Close button handler\r\n        const closeButton = element.querySelector('[data-users-modal-action=\"close\"]');\r\n        closeButton.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            Swal.fire({\r\n                text: \"Are you sure you would like to cancel?\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                buttonsStyling: false,\r\n                confirmButtonText: \"Yes, cancel it!\",\r\n                cancelButtonText: \"No, return\",\r\n                customClass: {\r\n                    confirmButton: \"btn btn-primary\",\r\n                    cancelButton: \"btn btn-active-light\"\r\n                }\r\n            }).then(function (result) {\r\n                if (result.value) {\r\n                    form.reset(); // Reset form\t\r\n                    modal.hide(); // Hide modal\t\t\t\t\r\n                } else if (result.dismiss === 'cancel') {\r\n                    Swal.fire({\r\n                        text: \"Your form has not been cancelled!.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn btn-primary\",\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        // Cancel button handler\r\n        const cancelButton = element.querySelector('[data-users-modal-action=\"cancel\"]');\r\n        cancelButton.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            Swal.fire({\r\n                text: \"Are you sure you would like to cancel?\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                buttonsStyling: false,\r\n                confirmButtonText: \"Yes, cancel it!\",\r\n                cancelButtonText: \"No, return\",\r\n                customClass: {\r\n                    confirmButton: \"btn btn-primary\",\r\n                    cancelButton: \"btn btn-active-light\"\r\n                }\r\n            }).then(function (result) {\r\n                if (result.value) {\r\n                    form.reset(); // Reset form\t\r\n                    modal.hide(); // Hide modal\t\t\t\t\r\n                } else if (result.dismiss === 'cancel') {\r\n                    Swal.fire({\r\n                        text: \"Your form has not been cancelled!.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn btn-primary\",\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        // Submit button handler\r\n        const submitButton = element.querySelector('[data-users-modal-action=\"submit\"]');\r\n        submitButton.addEventListener('click', function (e) {\r\n            // Prevent default button action\r\n            e.preventDefault();\r\n\r\n            // Show loading indication\r\n            submitButton.setAttribute('data-indicator', 'on');\r\n\r\n            // Disable button to avoid multiple click \r\n            submitButton.disabled = true;\r\n\r\n            // Simulate form submission. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n            setTimeout(function () {\r\n                // Remove loading indication\r\n                submitButton.removeAttribute('data-indicator');\r\n\r\n                // Enable button\r\n                submitButton.disabled = false;\r\n\r\n                // Show popup confirmation \r\n                Swal.fire({\r\n                    text: \"Form has been successfully submitted!\",\r\n                    icon: \"success\",\r\n                    buttonsStyling: false,\r\n                    confirmButtonText: \"Ok, got it!\",\r\n                    customClass: {\r\n                        confirmButton: \"btn btn-primary\"\r\n                    }\r\n                }).then(function (result) {\r\n                    if (result.isConfirmed) {\r\n                        modal.hide();\r\n                    }\r\n                });\r\n\r\n                //form.submit(); // Submit form\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    return {\r\n        // Public functions\r\n        init: function () {\r\n            initUpdateRole();\r\n        }\r\n    };\r\n}();\r\n\r\n// При загрузке документа\r\nUtil.onDOMContentLoaded(function () {\r\n    UsersUpdateRole.init();\r\n});"]}