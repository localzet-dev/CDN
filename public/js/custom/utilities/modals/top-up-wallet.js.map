{"version":3,"file":"top-up-wallet.js","names":["KTModalTopUpWallet","modal","modalEl","stepper","form","formSubmitButton","formContinueButton","stepperObj","validations","init","document","querySelector","bootstrap","Modal","KTStepper","on","getCurrentStepIndex","classList","remove","add","console","log","validator","validate","then","status","goNext","Swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","KTUtil","scrollTop","goPrevious","addEventListener","e","preventDefault","disabled","setAttribute","setTimeout","removeAttribute","currencyTypes","querySelectorAll","targets","value","forEach","currency","target","getAttribute","reset","goTo","initForm","push","FormValidation","formValidation","fields","top_up_amount","validators","notEmpty","message","plugins","trigger","Trigger","Bootstrap5","rowSelector","eleInvalidClass","eleValidClass","payment_methods","top_up_password","cancelAction","showCancelButton","cancelButtonText","cancelButton","result","hide","dismiss","handleCancelAction","onDOMContentLoaded"],"sources":["utilities/modals/top-up-wallet.js"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTModalTopUpWallet = function () {\r\n\t// Elements\r\n\tvar modal;\r\n\tvar modalEl;\r\n\r\n\tvar stepper;\r\n\tvar form;\r\n\tvar formSubmitButton;\r\n\tvar formContinueButton;\r\n\r\n\t// Variables\r\n\tvar stepperObj;\r\n\tvar validations = [];\r\n\r\n\t// Private Functions\r\n\tvar initStepper = function () {\r\n\t\t// Initialize Stepper\r\n\t\tstepperObj = new KTStepper(stepper);\r\n\r\n\t\t// Stepper change event(handle hiding submit button for the last step)\r\n\t\tstepperObj.on('kt.stepper.changed', function (stepper) {\r\n\t\t\tif (stepperObj.getCurrentStepIndex() === 4) {\r\n\t\t\t\tformSubmitButton.classList.remove('d-none');\r\n\t\t\t\tformSubmitButton.classList.add('d-inline-block');\r\n\t\t\t\tformContinueButton.classList.add('d-none');\r\n\t\t\t} else if (stepperObj.getCurrentStepIndex() === 5) {\r\n\t\t\t\tformSubmitButton.classList.add('d-none');\r\n\t\t\t\tformContinueButton.classList.add('d-none');\r\n\t\t\t} else {\r\n\t\t\t\tformSubmitButton.classList.remove('d-inline-block');\r\n\t\t\t\tformSubmitButton.classList.remove('d-none');\r\n\t\t\t\tformContinueButton.classList.remove('d-none');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Validation before going to next page\r\n\t\tstepperObj.on('kt.stepper.next', function (stepper) {\r\n\t\t\tconsole.log('stepper.next');\r\n\r\n\t\t\t// Validate form before change stepper step\r\n\t\t\tvar validator = validations[stepper.getCurrentStepIndex() - 1]; // get validator for currnt step\r\n\r\n\t\t\tif (validator) {\r\n\t\t\t\tvalidator.validate().then(function (status) {\r\n\t\t\t\t\tconsole.log('validated!');\r\n\r\n\t\t\t\t\tif (status == 'Valid') {\r\n\t\t\t\t\t\tstepper.goNext();\r\n\r\n\t\t\t\t\t\t//KTUtil.scrollTop();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Show error message popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n\t\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\r\n\t\t\t\t\t\t\ticon: \"error\",\r\n\t\t\t\t\t\t\tbuttonsStyling: false,\r\n\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\r\n\t\t\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-light\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}).then(function () {\r\n\t\t\t\t\t\t\t//KTUtil.scrollTop();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tstepper.goNext();\r\n\r\n\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Prev event\r\n\t\tstepperObj.on('kt.stepper.previous', function (stepper) {\r\n\t\t\tconsole.log('stepper.previous');\r\n\r\n\t\t\tstepper.goPrevious();\r\n\t\t\tKTUtil.scrollTop();\r\n\t\t});\r\n\r\n\t\tformSubmitButton.addEventListener('click', function (e) {\r\n\t\t\t// Prevent default button action\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// Disable button to avoid multiple click \r\n\t\t\tformSubmitButton.disabled = true;\r\n\r\n\t\t\t// Show loading indication\r\n\t\t\tformSubmitButton.setAttribute('data-kt-indicator', 'on');\r\n\r\n\t\t\t// Simulate form submission\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\t// Hide loading indication\r\n\t\t\t\tformSubmitButton.removeAttribute('data-kt-indicator');\r\n\r\n\t\t\t\t// Enable button\r\n\t\t\t\tformSubmitButton.disabled = false;\r\n\r\n\t\t\t\tstepperObj.goNext();\r\n\t\t\t\t//KTUtil.scrollTop();\r\n\t\t\t}, 2000);\r\n\t\t});\r\n\t}\r\n\r\n\t// Init form inputs\r\n\tvar initForm = function () {\t\r\n        // Handle currency swap logic\r\n        const currencyTypes = form.querySelectorAll('[name=\"currency_type\"]');\r\n        const targets = form.querySelectorAll('[data-kt-modal-top-up-wallet-option]');\r\n        let value = \"dollar\";\r\n        currencyTypes.forEach(currency => {\r\n            currency.addEventListener('change', e => {\r\n                value = e.target.value;\r\n\r\n                targets.forEach(target => {\r\n                    target.classList.add('d-none');\r\n\r\n                    if(target.getAttribute('data-kt-modal-top-up-wallet-option') === value){\r\n                        target.classList.remove('d-none');\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n\t\t// Handle top up wallet button\r\n\t\tconst restartButton = document.querySelector('#kt_modal_top_up_wallet_create_new');\r\n\t\trestartButton.addEventListener('click', function () {\r\n\t\t\tform.reset();\r\n\t\t\tstepperObj.goTo(1);\r\n\t\t});\r\n\t}\r\n\r\n\t// Init validation\r\n\tvar initValidation = function () {\r\n\t\t// Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n\t\t// Step 1\r\n\t\tvalidations.push(FormValidation.formValidation(\r\n\t\t\tform,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\ttop_up_amount: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Top up amount is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap5({\r\n\t\t\t\t\t\trowSelector: '.fv-row',\r\n\t\t\t\t\t\teleInvalidClass: '',\r\n\t\t\t\t\t\teleValidClass: ''\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t));\r\n\r\n        // Step 2\r\n\t\tvalidations.push(FormValidation.formValidation(\r\n\t\t\tform,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\tpayment_methods: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Payment method is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap5({\r\n\t\t\t\t\t\trowSelector: '.fv-row',\r\n\t\t\t\t\t\teleInvalidClass: '',\r\n\t\t\t\t\t\teleValidClass: ''\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t));\r\n\r\n        // Step 3\r\n\t\tvalidations.push(FormValidation.formValidation(\r\n\t\t\tform,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\ttop_up_password: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Password is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap5({\r\n\t\t\t\t\t\trowSelector: '.fv-row',\r\n\t\t\t\t\t\teleInvalidClass: '',\r\n\t\t\t\t\t\teleValidClass: ''\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t));\r\n\t}\r\n\r\n\t// Handle cancel modal\r\n    const handleCancelAction = () => {\r\n        const closeButton = modalEl.querySelector('[data-kt-modal-action-type=\"close\"]');\r\n        closeButton.addEventListener('click', e => {\r\n            cancelAction(e);\r\n        });\r\n\r\n        const cancelAction = (e) => {\r\n            e.preventDefault();\r\n\r\n            Swal.fire({\r\n                text: \"Are you sure you would like to cancel?\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                buttonsStyling: false,\r\n                confirmButtonText: \"Yes, cancel it!\",\r\n                cancelButtonText: \"No, return\",\r\n                customClass: {\r\n                    confirmButton: \"btn btn-primary\",\r\n                    cancelButton: \"btn btn-active-light\"\r\n                }\r\n            }).then(function (result) {\r\n                if (result.value) {\r\n                    form.reset(); // Reset form\t\r\n                    modal.hide(); // Hide modal\t\t\t\t\r\n                } else if (result.dismiss === 'cancel') {\r\n                    Swal.fire({\r\n                        text: \"Your form has not been cancelled!.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn btn-primary\",\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\treturn {\r\n\t\t// Public Functions\r\n\t\tinit: function () {\r\n\t\t\t// Elements\r\n\t\t\tmodalEl = document.querySelector('#kt_modal_top_up_wallet');\r\n\r\n\t\t\tif (!modalEl) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tmodal = new bootstrap.Modal(modalEl);\r\n\r\n\t\t\tstepper = document.querySelector('#kt_modal_top_up_wallet_stepper');\r\n\t\t\tform = document.querySelector('#kt_modal_top_up_wallet_stepper_form');\r\n\t\t\tformSubmitButton = stepper.querySelector('[data-kt-stepper-action=\"submit\"]');\r\n\t\t\tformContinueButton = stepper.querySelector('[data-kt-stepper-action=\"next\"]');\r\n\r\n\t\t\tinitStepper();\r\n\t\t\tinitForm();\r\n\t\t\tinitValidation();\r\n\t\t\thandleCancelAction();\r\n\t\t}\r\n\t};\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n\tKTModalTopUpWallet.init();\r\n});\r\n"]}