{"version":3,"file":"fido.js","names":["FIDOSettings","createButton","deleteButton","recursiveBase64StrToArrayBuffer","obj","prefix","suffix","key","str","substring","length","binary_string","window","atob","len","bytes","Uint8Array","i","charCodeAt","buffer","arrayBufferToBase64","binary","byteLength","String","fromCharCode","btoa","init","document","getElementById","navigator","credentials","create","swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","addEventListener","e","preventDefault","axios","get","then","async","response1","data","status","console","log","cred","authenticatorAttestationResponse","transports","response","getTransports","clientDataJSON","attestationObject","post","response2","result","location","reload","error","traces","catch","showDenyButton","denyButtonText","denyButton","isConfirmed","err","Util","onDOMContentLoaded"],"sources":["my/account/settings/fido.js"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\n// Определение класса\r\nvar FIDOSettings = function () {\r\n    var createButton;\r\n    var deleteButton;\r\n\r\n    // Приватные методы\r\n    var init = function () {\r\n        if (!navigator.credentials || !navigator.credentials.create) {\r\n            swal.fire({\r\n                text: \"Браузер не поддерживается\",\r\n                icon: \"error\",\r\n                buttonsStyling: false,\r\n                confirmButtonText: \"Хорошо!\",\r\n                customClass: {\r\n                    confirmButton: \"btn fw-bold btn-light-primary\"\r\n                }\r\n            });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    var handle = function () {\r\n        createButton.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            axios.get('/fido/create').then(async function (response1) {\r\n                if (response1.data.data && response1.data.status == 200) {\r\n                    console.log(response1.data.data)\r\n\r\n                    // response1.data.data.publicKey.challenge = '=?BINARY?B?' + response1.data.data.publicKey.challenge + '?=';\r\n                    // response1.data.data.publicKey.user.id = '=?BINARY?B?' + response1.data.data.publicKey.user.id + '?=';\r\n\r\n                    // try {\r\n                        recursiveBase64StrToArrayBuffer(response1.data.data);\r\n\r\n                        const cred = await navigator.credentials.create(response1.data.data);\r\n\r\n                        const authenticatorAttestationResponse = {\r\n                            transports: cred.response.getTransports ? cred.response.getTransports() : null,\r\n                            clientDataJSON: cred.response.clientDataJSON ? arrayBufferToBase64(cred.response.clientDataJSON) : null,\r\n                            attestationObject: cred.response.attestationObject ? arrayBufferToBase64(cred.response.attestationObject) : null\r\n                        };\r\n\r\n                        console.log(authenticatorAttestationResponse)\r\n                    // } catch (error) {\r\n                    //     swal.fire({\r\n                    //         text: \"Ошибка FIDO: \" + error,\r\n                    //         icon: \"error\",\r\n                    //         buttonsStyling: false,\r\n                    //         confirmButtonText: \"Хорошо!\",\r\n                    //         customClass: {\r\n                    //             confirmButton: \"btn fw-bold btn-light-primary\"\r\n                    //         }\r\n                    //     });\r\n                    // }\r\n\r\n                    axios.post('/fido/create', authenticatorAttestationResponse).then(function (response2) {\r\n                        if (response2.data.data && response2.data.status == 200) {\r\n                            console.log(response2.data.data)\r\n\r\n                            swal.fire({\r\n                                text: \"Встроенная защита активирована!\",\r\n                                icon: \"success\",\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: \"Хорошо!\",\r\n                                customClass: {\r\n                                    confirmButton: \"btn fw-bold btn-light-primary\"\r\n                                }\r\n                            }).then(function (result) {\r\n                                location.reload();\r\n                            });\r\n                        } else {\r\n                            console.error(response2.data.error, response2.data.traces)\r\n\r\n                            swal.fire({\r\n                                text: response2.data.error ?? \"Неизвестная ошибка\",\r\n                                icon: \"error\",\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: \"Хорошо!\",\r\n                                customClass: {\r\n                                    confirmButton: \"btn fw-bold btn-light-primary\"\r\n                                }\r\n                            });\r\n                        }\r\n                    }).catch(function (error) {\r\n                        console.error(error)\r\n                        swal.fire({\r\n                            text: \"Ошибка FIDO: \" + error,\r\n                            icon: \"error\",\r\n                            buttonsStyling: false,\r\n                            confirmButtonText: \"Хорошо!\",\r\n                            customClass: {\r\n                                confirmButton: \"btn fw-bold btn-light-primary\"\r\n                            }\r\n                        });\r\n                    });\r\n                } else {\r\n                    console.error(response1.data.error, response1.data.traces)\r\n\r\n                    swal.fire({\r\n                        text: response1.data.error ?? \"Неизвестная ошибка\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Хорошо!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn fw-bold btn-light-primary\"\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(function (error) {\r\n                console.error(error)\r\n                swal.fire({\r\n                    text: \"Ошибка FIDO: \" + error,\r\n                    icon: \"error\",\r\n                    buttonsStyling: false,\r\n                    confirmButtonText: \"Хорошо!\",\r\n                    customClass: {\r\n                        confirmButton: \"btn fw-bold btn-light-primary\"\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        if (deleteButton) {\r\n            deleteButton.addEventListener('click', function (e) {\r\n                e.preventDefault();\r\n\r\n                swal.fire({\r\n                    text: \"Вы уверены? Это удалит существующие ключи\",\r\n                    icon: \"warning\",\r\n                    buttonsStyling: false,\r\n                    showDenyButton: true,\r\n                    confirmButtonText: \"Да, отключить защиту\",\r\n                    denyButtonText: 'Нет, оставить',\r\n                    customClass: {\r\n                        confirmButton: \"btn btn-primary\",\r\n                        denyButton: \"btn btn-light-danger\"\r\n                    }\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        axios.post('/fido/delete').then(async function (response) {\r\n                            if (response.data.data && response.data.status == 200) {\r\n                                console.log(response.data.data)\r\n\r\n                                swal.fire({\r\n                                    text: \"Встроенная защита отключена!\",\r\n                                    icon: \"success\",\r\n                                    buttonsStyling: false,\r\n                                    confirmButtonText: \"Хорошо!\",\r\n                                    customClass: {\r\n                                        confirmButton: \"btn fw-bold btn-light-primary\"\r\n                                    }\r\n                                }).then(function (result) {\r\n                                    location.reload();\r\n                                });\r\n                            } else {\r\n                                console.error(response.data.error, response.data.traces)\r\n\r\n                                swal.fire({\r\n                                    text: response.data.error ?? \"Неизвестная ошибка\",\r\n                                    icon: \"error\",\r\n                                    buttonsStyling: false,\r\n                                    confirmButtonText: \"Хорошо!\",\r\n                                    customClass: {\r\n                                        confirmButton: \"btn fw-bold btn-light-primary\"\r\n                                    }\r\n                                });\r\n                            }\r\n                        }).catch(function (error) {\r\n                            console.error(error)\r\n                            swal.fire({\r\n                                text: \"Проверьте соединение с интернетом или обратитесь к администрации\",\r\n                                icon: \"error\",\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: \"Хорошо!\",\r\n                                customClass: {\r\n                                    confirmButton: \"btn fw-bold btn-light-primary\"\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Convert RFC 1342-like base64 strings to array buffer\r\n     * @param {mixed} obj\r\n     * @returns {undefined}\r\n     */\r\n    var recursiveBase64StrToArrayBuffer = function (obj) {\r\n        let prefix = '=?BINARY?B?';\r\n        let suffix = '?=';\r\n        if (typeof obj === 'object') {\r\n            for (let key in obj) {\r\n                if (typeof obj[key] === 'string') {\r\n                    let str = obj[key];\r\n                    if (str.substring(0, prefix.length) === prefix && str.substring(str.length - suffix.length) === suffix) {\r\n                        str = str.substring(prefix.length, str.length - suffix.length);\r\n\r\n                        let binary_string = window.atob(str);\r\n                        let len = binary_string.length;\r\n                        let bytes = new Uint8Array(len);\r\n                        for (let i = 0; i < len; i++) {\r\n                            bytes[i] = binary_string.charCodeAt(i);\r\n                        }\r\n                        obj[key] = bytes.buffer;\r\n                    }\r\n                } else {\r\n                    recursiveBase64StrToArrayBuffer(obj[key]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert a ArrayBuffer to Base64\r\n     * @param {ArrayBuffer} buffer\r\n     * @returns {String}\r\n     */\r\n    var arrayBufferToBase64 = function (buffer) {\r\n        let binary = '';\r\n        let bytes = new Uint8Array(buffer);\r\n        let len = bytes.byteLength;\r\n        for (let i = 0; i < len; i++) {\r\n            binary += String.fromCharCode(bytes[i]);\r\n        }\r\n        return window.btoa(binary);\r\n    }\r\n\r\n    // Публичные методы\r\n    return {\r\n        init: function () {\r\n            try {\r\n                createButton = document.getElementById('fido_create');\r\n                deleteButton = document.getElementById('fido_delete');\r\n\r\n                if (init()) {\r\n                    handle();\r\n                }\r\n            } catch (err) {\r\n                swal.fire({\r\n                    text: err,\r\n                    icon: \"error\",\r\n                    buttonsStyling: false,\r\n                    confirmButtonText: \"Хорошо!\",\r\n                    customClass: {\r\n                        confirmButton: \"btn fw-bold btn-light-primary\"\r\n                    }\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n}();\r\n\r\n// При загрузке документа\r\nUtil.onDOMContentLoaded(function () {\r\n    FIDOSettings.init();\r\n});\r\n"]}