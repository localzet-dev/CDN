{"version":3,"file":"select-location.js","names":["ModalSelectLocation","locationSelectTarget","modal","selectedlocation","mapInitialized","init","document","querySelector","addEventListener","value","innerHTML","L","geocodeService","leaflet","map","center","zoom","tileLayer","attribution","addTo","esri","Geocoding","markerLayer","layerGroup","leafletIcon","divIcon","html","bgPos","iconAnchor","popupAnchor","className","on","e","reverse","latlng","run","error","result","clearLayers","address","Match_addr","marker","icon","bindPopup","closeButton","openPopup","Swal","fire","buttonsStyling","confirmButtonText","customClass","confirmButton","then","initMap","Util","onDOMContentLoaded"],"sources":["my/utilities/modals/select-location.js"],"mappings":"AAAA,aAGA,IAAIA,oBAAsB,WAEtB,IAAIC,EAGAC,EACAC,EAAmB,GACnBC,GAAiB,EA+ErB,MAAO,CACHC,KAAM,YAEXH,EAAQI,SAASC,cAAc,6BAMtBN,EAAuBK,SAASC,cAAc,iCACvBD,SAASC,cAAc,iCAtB7BC,iBAAiB,SAAS,WACvCP,IACIA,EAAqBQ,MACrBR,EAAqBQ,MAAQN,EAE7BF,EAAqBS,UAAYP,EAG7C,IAkBID,EAAMM,iBAAiB,kBAAkB,WAChCJ,KA3FH,WAEV,GAAKO,EAAL,CAKA,IAWIC,EAXAC,EAAUF,EAAEG,IAAI,4BAA6B,CAC7CC,OAAQ,CAAC,QAAS,QAClBC,KAAM,KAIVL,EAAEM,UAAU,qDAAsD,CAC9DC,YAAa,8EACdC,MAAMN,GAKLD,OAD4B,IAArBD,EAAES,KAAKC,UACGV,EAAES,KAAKR,iBAEPD,EAAES,KAAKC,UAAUT,iBAItC,IAAIU,EAAcX,EAAEY,aAAaJ,MAAMN,GAGnCW,EAAcb,EAAEc,QAAQ,CACxBC,KAAM,gEACNC,MAAO,CAAC,GAAI,IACZC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,IAClBC,UAAW,mBAIfjB,EAAQkB,GAAG,SAAS,SAAUC,GAC1BpB,EAAeqB,UAAUC,OAAOF,EAAEE,QAAQC,KAAI,SAAUC,EAAOC,GACvDD,IAGJd,EAAYgB,cACZnC,EAAmBkC,EAAOE,QAAQC,WAClC7B,EAAE8B,OAAOJ,EAAOH,OAAQ,CAAEQ,KAAMlB,IAAeL,MAAMG,GAAaqB,UAAUN,EAAOE,QAAQC,WAAY,CAAEI,aAAa,IAASC,YAG/HC,KAAKC,KAAK,CACNrB,KAAM,yCAA2CvB,EAA3C,mEACNuC,KAAM,UACNM,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,qBAEpBC,MAAK,SAAUf,GAElB,IACJ,GACJ,GAxDA,CAyDJ,CA+BgBgB,GACAjD,GAAiB,EAEzB,IACJ,EAER,CA5G0B,GA+G1BkD,KAAKC,oBAAmB,WACpBvD,oBAAoBK,MACxB","sourcesContent":["\"use strict\";\r\n\r\n// Определение класса\r\nvar ModalSelectLocation = function () {\r\n    // Private variables\r\n    var locationSelectTarget;\r\n    var locationSelectButton;\r\n\r\n    var modal;\r\n    var selectedlocation = '';\r\n    var mapInitialized = false;\r\n\r\n    // Приватные методы\r\n    var initMap = function() {\r\n        // Check if Leaflet is included\r\n        if (!L) {\r\n            return;\r\n        }\r\n\r\n        // Define Map Location\r\n        var leaflet = L.map('modal_select_location_map', {\r\n            center: [40.725, -73.985],\r\n            zoom: 30\r\n        });\r\n\r\n        // Init Leaflet Map. For more info check the plugin's documentation: https://leafletjs.com/\r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n            attribution: '&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        }).addTo(leaflet);\r\n\r\n        // Set Geocoding\r\n        var geocodeService;\r\n        if (typeof L.esri.Geocoding === 'undefined') {\r\n            geocodeService = L.esri.geocodeService();\r\n        } else {\r\n            geocodeService = L.esri.Geocoding.geocodeService();\r\n        }\r\n\r\n        // Define Marker Layer\r\n        var markerLayer = L.layerGroup().addTo(leaflet);\r\n\r\n        // Set Custom SVG icon marker\r\n        var leafletIcon = L.divIcon({\r\n            html: `<i class=\"ki-solid ki-geolocation text-primary fs-3x\"></span>`,\r\n            bgPos: [10, 10],\r\n            iconAnchor: [20, 37],\r\n            popupAnchor: [0, -37],\r\n            className: 'leaflet-marker'\r\n        });\r\n\r\n        // Map onClick Action\r\n        leaflet.on('click', function (e) {\r\n            geocodeService.reverse().latlng(e.latlng).run(function (error, result) {\r\n                if (error) {\r\n                    return;\r\n                }\r\n                markerLayer.clearLayers();\r\n                selectedlocation = result.address.Match_addr;\r\n                L.marker(result.latlng, { icon: leafletIcon }).addTo(markerLayer).bindPopup(result.address.Match_addr, { closeButton: false }).openPopup();\r\n\r\n                // Show popup confirmation. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n                Swal.fire({\r\n                    html: '<div class=\"mb-2\">Your selected - <b>\"' + selectedlocation + '\"</b>.</div>' + 'Click on the \"Apply\" button to select this location.',\r\n                    icon: \"success\",\r\n                    buttonsStyling: false,\r\n                    confirmButtonText: \"Ok, got it!\",\r\n                    customClass: {\r\n                        confirmButton: \"btn btn-primary\"\r\n                    }\r\n                }).then(function (result) {\r\n                    // Confirmed\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    var handleSelection = function() {\r\n        locationSelectButton.addEventListener('click', function() {\r\n            if (locationSelectTarget) {\r\n                if (locationSelectTarget.value) {\r\n                    locationSelectTarget.value = selectedlocation;\r\n                } else {\r\n                    locationSelectTarget.innerHTML = selectedlocation;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // Публичные методы\r\n    return {\r\n        init: function () {\r\n            // Elements\r\n\t\t\tmodal = document.querySelector('#modal_select_location');\r\n\r\n\t\t\tif (!modal) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n            \r\n            locationSelectTarget = document.querySelector('#modal_select_location_target');\r\n            locationSelectButton = document.querySelector('#modal_select_location_button');\r\n\r\n            handleSelection();\r\n            \r\n            modal.addEventListener('shown.bs.modal', function () {\r\n                if (!mapInitialized) {\r\n                    initMap();\r\n                    mapInitialized = true;\r\n                }                \r\n            });\r\n        }\r\n    }\r\n}();\r\n\r\n// При загрузке документа\r\nUtil.onDOMContentLoaded(function() {\r\n    ModalSelectLocation.init();\r\n});\r\n"]}