{"version":3,"file":"general.js","names":["KTSigninGeneral","form","submitButton","validator","init","document","querySelector","FormValidation","formValidation","fields","email","validators","regexp","message","notEmpty","password","plugins","trigger","Trigger","bootstrap","Bootstrap5","rowSelector","eleInvalidClass","eleValidClass","url","URL","e","isValidUrl","closest","getAttribute","addEventListener","preventDefault","validate","then","status","setAttribute","disabled","setTimeout","removeAttribute","Swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","result","isConfirmed","value","redirectUrl","location","href","axios","post","FormData","response","reset","catch","error","KTUtil","onDOMContentLoaded"],"sources":["authentication/sign-in/general.js"],"mappings":"AAAA,aAGA,IAAIA,gBAAkB,WAElB,IAAIC,EACAC,EACAC,EAiMJ,MAAO,CAEHC,KAAM,WACFH,EAAOI,SAASC,cAAc,oBAC9BJ,EAAeG,SAASC,cAAc,sBAhM1CH,EAAYI,eAAeC,eACvBP,EACA,CACIQ,OAAQ,CACJC,MAAS,CACLC,WAAY,CACRC,OAAQ,CACJA,OAAQ,6BACRC,QAAS,0CAEbC,SAAU,CACND,QAAS,+BAIrBE,SAAY,CACRJ,WAAY,CACRG,SAAU,CACND,QAAS,+BAKzBG,QAAS,CACLC,QAAS,IAAIV,eAAeS,QAAQE,QACpCC,UAAW,IAAIZ,eAAeS,QAAQI,WAAW,CAC7CC,YAAa,UACbC,gBAAiB,GACjBC,cAAe,SAsJlB,SAASC,GACtB,IAEI,OADA,IAAIC,IAAID,IACD,CACX,CAAE,MAAOE,GACL,OAAO,CACX,CACJ,CAWYC,CAAWzB,EAAa0B,QAAQ,QAAQC,aAAa,WA/J7D3B,EAAa4B,iBAAiB,SAAS,SAAUJ,GAE7CA,EAAEK,iBAGF5B,EAAU6B,WAAWC,MAAK,SAAUC,GAClB,SAAVA,GAEAhC,EAAaiC,aAAa,oBAAqB,MAG/CjC,EAAakC,UAAW,EAIxBC,YAAW,WAEPnC,EAAaoC,gBAAgB,qBAG7BpC,EAAakC,UAAW,EAGxBG,KAAKC,KAAK,CACNC,KAAM,mCACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,qBAEpBb,MAAK,SAAUc,GACd,GAAIA,EAAOC,YAAa,CACpB/C,EAAKK,cAAc,kBAAkB2C,MAAQ,GAC7ChD,EAAKK,cAAc,qBAAqB2C,MAAQ,GAGhD,IAAIC,EAAcjD,EAAK4B,aAAa,wBAChCqB,IACAC,SAASC,KAAOF,EAExB,CACJ,GACJ,GAAG,MAGHX,KAAKC,KAAK,CACNC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GACJ,IAKA5C,EAAa4B,iBAAiB,SAAS,SAAUJ,GAE7CA,EAAEK,iBAGF5B,EAAU6B,WAAWC,MAAK,SAAUC,GAClB,SAAVA,GAEAhC,EAAaiC,aAAa,oBAAqB,MAG/CjC,EAAakC,UAAW,EAGxBiB,MAAMC,KAAKpD,EAAa0B,QAAQ,QAAQC,aAAa,UAAW,IAAI0B,SAAStD,IAAOgC,MAAK,SAAUuB,GAC/F,GAAIA,EAAU,CACVvD,EAAKwD,QAGLlB,KAAKC,KAAK,CACNC,KAAM,mCACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,qBAIvB,MAAMI,EAAcjD,EAAK4B,aAAa,wBAElCqB,IACAC,SAASC,KAAOF,EAExB,MAEIX,KAAKC,KAAK,CACNC,KAAM,+DACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,IAAGY,OAAM,SAAUC,GACfpB,KAAKC,KAAK,CACNC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAG3B,IAAGb,MAAK,KAEJ/B,EAAaoC,gBAAgB,qBAG7BpC,EAAakC,UAAW,CAAK,KAIjCG,KAAKC,KAAK,CACNC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GACJ,GA0BA,EAER,CApNsB,GAuNtBc,OAAOC,oBAAmB,WACtB7D,gBAAgBI,MACpB","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTSigninGeneral = function () {\r\n    // Elements\r\n    var form;\r\n    var submitButton;\r\n    var validator;\r\n\r\n    // Handle form\r\n    var handleValidation = function (e) {\r\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n        validator = FormValidation.formValidation(\r\n            form,\r\n            {\r\n                fields: {\r\n                    'email': {\r\n                        validators: {\r\n                            regexp: {\r\n                                regexp: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                                message: 'The value is not a valid email address',\r\n                            },\r\n                            notEmpty: {\r\n                                message: 'Email address is required'\r\n                            }\r\n                        }\r\n                    },\r\n                    'password': {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'The password is required'\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                plugins: {\r\n                    trigger: new FormValidation.plugins.Trigger(),\r\n                    bootstrap: new FormValidation.plugins.Bootstrap5({\r\n                        rowSelector: '.fv-row',\r\n                        eleInvalidClass: '',  // comment to enable invalid state icons\r\n                        eleValidClass: '' // comment to enable valid state icons\r\n                    })\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    var handleSubmitDemo = function (e) {\r\n        // Handle form submit\r\n        submitButton.addEventListener('click', function (e) {\r\n            // Prevent button default action\r\n            e.preventDefault();\r\n\r\n            // Validate form\r\n            validator.validate().then(function (status) {\r\n                if (status == 'Valid') {\r\n                    // Show loading indication\r\n                    submitButton.setAttribute('data-kt-indicator', 'on');\r\n\r\n                    // Disable button to avoid multiple click\r\n                    submitButton.disabled = true;\r\n\r\n\r\n                    // Simulate ajax request\r\n                    setTimeout(function () {\r\n                        // Hide loading indication\r\n                        submitButton.removeAttribute('data-kt-indicator');\r\n\r\n                        // Enable button\r\n                        submitButton.disabled = false;\r\n\r\n                        // Show message popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n                        Swal.fire({\r\n                            text: \"You have successfully logged in!\",\r\n                            icon: \"success\",\r\n                            buttonsStyling: false,\r\n                            confirmButtonText: \"Ok, got it!\",\r\n                            customClass: {\r\n                                confirmButton: \"btn btn-primary\"\r\n                            }\r\n                        }).then(function (result) {\r\n                            if (result.isConfirmed) {\r\n                                form.querySelector('[name=\"email\"]').value = \"\";\r\n                                form.querySelector('[name=\"password\"]').value = \"\";\r\n\r\n                                //form.submit(); // submit form\r\n                                var redirectUrl = form.getAttribute('data-kt-redirect-url');\r\n                                if (redirectUrl) {\r\n                                    location.href = redirectUrl;\r\n                                }\r\n                            }\r\n                        });\r\n                    }, 2000);\r\n                } else {\r\n                    // Show error popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n                    Swal.fire({\r\n                        text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn btn-primary\"\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    var handleSubmitAjax = function (e) {\r\n        // Handle form submit\r\n        submitButton.addEventListener('click', function (e) {\r\n            // Prevent button default action\r\n            e.preventDefault();\r\n\r\n            // Validate form\r\n            validator.validate().then(function (status) {\r\n                if (status == 'Valid') {\r\n                    // Show loading indication\r\n                    submitButton.setAttribute('data-kt-indicator', 'on');\r\n\r\n                    // Disable button to avoid multiple click\r\n                    submitButton.disabled = true;\r\n\r\n                    // Check axios library docs: https://axios-http.com/docs/intro\r\n                    axios.post(submitButton.closest('form').getAttribute('action'), new FormData(form)).then(function (response) {\r\n                        if (response) {\r\n                            form.reset();\r\n\r\n                            // Show message popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n                            Swal.fire({\r\n                                text: \"You have successfully logged in!\",\r\n                                icon: \"success\",\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: \"Ok, got it!\",\r\n                                customClass: {\r\n                                    confirmButton: \"btn btn-primary\"\r\n                                }\r\n                            });\r\n\r\n                            const redirectUrl = form.getAttribute('data-kt-redirect-url');\r\n\r\n                            if (redirectUrl) {\r\n                                location.href = redirectUrl;\r\n                            }\r\n                        } else {\r\n                            // Show error popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n                            Swal.fire({\r\n                                text: \"Sorry, the email or password is incorrect, please try again.\",\r\n                                icon: \"error\",\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: \"Ok, got it!\",\r\n                                customClass: {\r\n                                    confirmButton: \"btn btn-primary\"\r\n                                }\r\n                            });\r\n                        }\r\n                    }).catch(function (error) {\r\n                        Swal.fire({\r\n                            text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n                            icon: \"error\",\r\n                            buttonsStyling: false,\r\n                            confirmButtonText: \"Ok, got it!\",\r\n                            customClass: {\r\n                                confirmButton: \"btn btn-primary\"\r\n                            }\r\n                        });\r\n                    }).then(() => {\r\n                        // Hide loading indication\r\n                        submitButton.removeAttribute('data-kt-indicator');\r\n\r\n                        // Enable button\r\n                        submitButton.disabled = false;\r\n                    });\r\n                } else {\r\n                    // Show error popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n                    Swal.fire({\r\n                        text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn btn-primary\"\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    var isValidUrl = function(url) {\r\n        try {\r\n            new URL(url);\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Public functions\r\n    return {\r\n        // Initialization\r\n        init: function () {\r\n            form = document.querySelector('#kt_sign_in_form');\r\n            submitButton = document.querySelector('#kt_sign_in_submit');\r\n\r\n            handleValidation();\r\n\r\n            if (isValidUrl(submitButton.closest('form').getAttribute('action'))) {\r\n                handleSubmitAjax(); // use for ajax submit\r\n            } else {\r\n                handleSubmitDemo(); // used for demo purposes only\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTSigninGeneral.init();\r\n});\r\n"]}