{"version":3,"file":"save-category.js","names":["KTAppEcommerceSaveCategory","initFormRepeater","$","repeater","initEmpty","defaultValues","show","this","slideDown","initConditionsSelect2","hide","deleteElement","slideUp","document","querySelectorAll","forEach","type","hasClass","select2","minimumResultsForSearch","equal","init","element","quill","querySelector","Quill","modules","toolbar","header","placeholder","theme","tagify","Tagify","target","getElementById","select","statusClasses","on","e","value","classList","remove","add","hideDatepicker","showDatepicker","datepicker","flatpickr","enableTime","dateFormat","parentNode","handleStatus","allConditions","conditionMatch","radio","addEventListener","handleConditions","validator","form","submitButton","FormValidation","formValidation","fields","category_name","validators","notEmpty","message","plugins","trigger","Trigger","bootstrap","Bootstrap5","rowSelector","eleInvalidClass","eleValidClass","preventDefault","validate","then","status","console","log","setAttribute","disabled","setTimeout","removeAttribute","Swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","result","isConfirmed","window","location","getAttribute","handleSubmit","KTUtil","onDOMContentLoaded"],"sources":["apps/ecommerce/catalog/save-category.js"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTAppEcommerceSaveCategory = function () {\r\n\r\n    // Private functions\r\n\r\n    // Init quill editor\r\n    const initQuill = () => {\r\n        // Define all elements for quill editor\r\n        const elements = [\r\n            '#kt_ecommerce_add_category_description',\r\n            '#kt_ecommerce_add_category_meta_description'\r\n        ];\r\n\r\n        // Loop all elements\r\n        elements.forEach(element => {\r\n            // Get quill element\r\n            let quill = document.querySelector(element);\r\n\r\n            // Break if element not found\r\n            if (!quill) {\r\n                return;\r\n            }\r\n\r\n            // Init quill --- more info: https://quilljs.com/docs/quickstart/\r\n            quill = new Quill(element, {\r\n                modules: {\r\n                    toolbar: [\r\n                        [{\r\n                            header: [1, 2, false]\r\n                        }],\r\n                        ['bold', 'italic', 'underline'],\r\n                        ['image', 'code-block']\r\n                    ]\r\n                },\r\n                placeholder: 'Type your text here...',\r\n                theme: 'snow' // or 'bubble'\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    // Init tagify\r\n    const initTagify = () => {\r\n        // Define all elements for tagify\r\n        const elements = [\r\n            '#kt_ecommerce_add_category_meta_keywords'\r\n        ];\r\n\r\n        // Loop all elements\r\n        elements.forEach(element => {\r\n            // Get tagify element\r\n            const tagify = document.querySelector(element);\r\n\r\n            // Break if element not found\r\n            if (!tagify) {\r\n                return;\r\n            }\r\n\r\n            // Init tagify --- more info: https://yaireo.github.io/tagify/\r\n            new Tagify(tagify);\r\n        });\r\n    }\r\n\r\n    // Init form repeater --- more info: https://github.com/DubFriend/jquery.repeater\r\n    const initFormRepeater = () => {\r\n        $('#kt_ecommerce_add_category_conditions').repeater({\r\n            initEmpty: false,\r\n\r\n            defaultValues: {\r\n                'text-input': 'foo'\r\n            },\r\n\r\n            show: function () {\r\n                $(this).slideDown();\r\n\r\n                // Init select2 on new repeated items\r\n                initConditionsSelect2();\r\n            },\r\n\r\n            hide: function (deleteElement) {\r\n                $(this).slideUp(deleteElement);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Init condition select2\r\n    const initConditionsSelect2 = () => {\r\n        // Tnit new repeating condition types\r\n        const allConditionTypes = document.querySelectorAll('[data-kt-ecommerce-catalog-add-category=\"condition_type\"]');\r\n        allConditionTypes.forEach(type => {\r\n            if ($(type).hasClass(\"select2-hidden-accessible\")) {\r\n                return;\r\n            } else {\r\n                $(type).select2({\r\n                    minimumResultsForSearch: -1\r\n                });\r\n            }\r\n        });\r\n\r\n        // Tnit new repeating condition equals\r\n        const allConditionEquals = document.querySelectorAll('[data-kt-ecommerce-catalog-add-category=\"condition_equals\"]');\r\n        allConditionEquals.forEach(equal => {\r\n            if ($(equal).hasClass(\"select2-hidden-accessible\")) {\r\n                return;\r\n            } else {\r\n                $(equal).select2({\r\n                    minimumResultsForSearch: -1\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    // Category status handler\r\n    const handleStatus = () => {\r\n        const target = document.getElementById('kt_ecommerce_add_category_status');\r\n        const select = document.getElementById('kt_ecommerce_add_category_status_select');\r\n        const statusClasses = ['bg-success', 'bg-warning', 'bg-danger'];\r\n\r\n        $(select).on('change', function (e) {\r\n            const value = e.target.value;\r\n\r\n            switch (value) {\r\n                case \"published\": {\r\n                    target.classList.remove(...statusClasses);\r\n                    target.classList.add('bg-success');\r\n                    hideDatepicker();\r\n                    break;\r\n                }\r\n                case \"scheduled\": {\r\n                    target.classList.remove(...statusClasses);\r\n                    target.classList.add('bg-warning');\r\n                    showDatepicker();\r\n                    break;\r\n                }\r\n                case \"unpublished\": {\r\n                    target.classList.remove(...statusClasses);\r\n                    target.classList.add('bg-danger');\r\n                    hideDatepicker();\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n\r\n        // Handle datepicker\r\n        const datepicker = document.getElementById('kt_ecommerce_add_category_status_datepicker');\r\n\r\n        // Init flatpickr --- more info: https://flatpickr.js.org/\r\n        $('#kt_ecommerce_add_category_status_datepicker').flatpickr({\r\n            enableTime: true,\r\n            dateFormat: \"Y-m-d H:i\",\r\n        });\r\n\r\n        const showDatepicker = () => {\r\n            datepicker.parentNode.classList.remove('d-none');\r\n        }\r\n\r\n        const hideDatepicker = () => {\r\n            datepicker.parentNode.classList.add('d-none');\r\n        }\r\n    }\r\n\r\n    // Condition type handler\r\n    const handleConditions = () => {\r\n        const allConditions = document.querySelectorAll('[name=\"method\"][type=\"radio\"]');\r\n        const conditionMatch = document.querySelector('[data-kt-ecommerce-catalog-add-category=\"auto-options\"]');\r\n        allConditions.forEach(radio => {\r\n            radio.addEventListener('change', e => {\r\n                if (e.target.value === '1') {\r\n                    conditionMatch.classList.remove('d-none');\r\n                } else {\r\n                    conditionMatch.classList.add('d-none');\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    // Submit form handler\r\n    const handleSubmit = () => {\r\n        // Define variables\r\n        let validator;\r\n\r\n        // Get elements\r\n        const form = document.getElementById('kt_ecommerce_add_category_form');\r\n        const submitButton = document.getElementById('kt_ecommerce_add_category_submit');\r\n\r\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n        validator = FormValidation.formValidation(\r\n            form,\r\n            {\r\n                fields: {\r\n                    'category_name': {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Category name is required'\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                plugins: {\r\n                    trigger: new FormValidation.plugins.Trigger(),\r\n                    bootstrap: new FormValidation.plugins.Bootstrap5({\r\n                        rowSelector: '.fv-row',\r\n                        eleInvalidClass: '',\r\n                        eleValidClass: ''\r\n                    })\r\n                }\r\n            }\r\n        );\r\n\r\n        // Handle submit button\r\n        submitButton.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            // Validate form before submit\r\n            if (validator) {\r\n                validator.validate().then(function (status) {\r\n                    console.log('validated!');\r\n\r\n                    if (status == 'Valid') {\r\n                        submitButton.setAttribute('data-kt-indicator', 'on');\r\n\r\n                        // Disable submit button whilst loading\r\n                        submitButton.disabled = true;\r\n\r\n                        setTimeout(function () {\r\n                            submitButton.removeAttribute('data-kt-indicator');\r\n\r\n                            Swal.fire({\r\n                                text: \"Form has been successfully submitted!\",\r\n                                icon: \"success\",\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: \"Ok, got it!\",\r\n                                customClass: {\r\n                                    confirmButton: \"btn btn-primary\"\r\n                                }\r\n                            }).then(function (result) {\r\n                                if (result.isConfirmed) {\r\n                                    // Enable submit button after loading\r\n                                    submitButton.disabled = false;\r\n\r\n                                    // Redirect to customers list page\r\n                                    window.location = form.getAttribute(\"data-kt-redirect\");\r\n                                }\r\n                            });\r\n                        }, 2000);\r\n                    } else {\r\n                        Swal.fire({\r\n                            text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n                            icon: \"error\",\r\n                            buttonsStyling: false,\r\n                            confirmButtonText: \"Ok, got it!\",\r\n                            customClass: {\r\n                                confirmButton: \"btn btn-primary\"\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            // Init forms\r\n            initQuill();\r\n            initTagify();\r\n            initFormRepeater();\r\n            initConditionsSelect2();\r\n\r\n            // Handle forms\r\n            handleStatus();\r\n            handleConditions();\r\n            handleSubmit();\r\n        }\r\n    };\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTAppEcommerceSaveCategory.init();\r\n});\r\n"]}