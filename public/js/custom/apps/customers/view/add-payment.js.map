{"version":3,"file":"add-payment.js","names":["KTModalAddPayment","element","submitButton","cancelButton","closeButton","validator","form","modal","init","document","querySelector","bootstrap","Modal","FormValidation","formValidation","fields","invoice","validators","notEmpty","message","status","amount","plugins","trigger","Trigger","Bootstrap5","rowSelector","eleInvalidClass","eleValidClass","$","on","revalidateField","addEventListener","e","preventDefault","validate","then","console","log","setAttribute","disabled","setTimeout","removeAttribute","Swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","result","isConfirmed","hide","reset","showCancelButton","cancelButtonText","value","dismiss","KTUtil","onDOMContentLoaded"],"sources":["apps/customers/view/add-payment.js"],"mappings":"AAAA,aAGA,IAAIA,kBAAoB,WACpB,IAAIC,EACAC,EACAC,EACAC,EACAC,EAEAC,EACAC,EA+KJ,MAAO,CAEHC,KAAM,WAEFP,EAAUQ,SAASC,cAAc,yBACjCH,EAAQ,IAAII,UAAUC,MAAMX,GAE5BK,EAAOL,EAAQS,cAAc,8BAC7BR,EAAeI,EAAKI,cAAc,gCAClCP,EAAeG,EAAKI,cAAc,gCAClCN,EAAcH,EAAQS,cAAc,+BApLxCL,EAAYQ,eAAeC,eACvBR,EACA,CACIS,OAAQ,CACJC,QAAW,CACPC,WAAY,CACRC,SAAU,CACNC,QAAS,gCAIrBC,OAAU,CACNH,WAAY,CACRC,SAAU,CACNC,QAAS,gCAIrBE,OAAU,CACNJ,WAAY,CACRC,SAAU,CACNC,QAAS,iCAMzBG,QAAS,CACLC,QAAS,IAAIV,eAAeS,QAAQE,QACpCb,UAAW,IAAIE,eAAeS,QAAQG,WAAW,CAC7CC,YAAa,UACbC,gBAAiB,GACjBC,cAAe,QAO/BC,EAAEvB,EAAKI,cAAc,oBAAoBoB,GAAG,UAAU,WAElDzB,EAAU0B,gBAAgB,SAC9B,IAGA7B,EAAa8B,iBAAiB,SAAS,SAAUC,GAE7CA,EAAEC,iBAGE7B,GACAA,EAAU8B,WAAWC,MAAK,SAAUhB,GAChCiB,QAAQC,IAAI,cAEE,SAAVlB,GAEAlB,EAAaqC,aAAa,oBAAqB,MAG/CrC,EAAasC,UAAW,EAGxBC,YAAW,WAEPvC,EAAawC,gBAAgB,qBAG7BC,KAAKC,KAAK,CACNC,KAAM,wCACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,qBAEpBd,MAAK,SAAUe,GACVA,EAAOC,cACP7C,EAAM8C,OAGNnD,EAAasC,UAAW,EAGxBlC,EAAKgD,QAEb,GAGJ,GAAG,MAGHX,KAAKC,KAAK,CACNC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GAER,IAEA/C,EAAa6B,iBAAiB,SAAS,SAAUC,GAC7CA,EAAEC,iBAEFS,KAAKC,KAAK,CACNC,KAAM,yCACNC,KAAM,UACNS,kBAAkB,EAClBR,gBAAgB,EAChBC,kBAAmB,kBACnBQ,iBAAkB,aAClBP,YAAa,CACTC,cAAe,kBACf/C,aAAc,0BAEnBiC,MAAK,SAAUe,GACVA,EAAOM,OACPnD,EAAKgD,QACL/C,EAAM8C,QACoB,WAAnBF,EAAOO,SACdf,KAAKC,KAAK,CACNC,KAAM,qCACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GACJ,IAEA9C,EAAY4B,iBAAiB,SAAS,SAAUC,GAC5CA,EAAEC,iBAEFS,KAAKC,KAAK,CACNC,KAAM,yCACNC,KAAM,UACNS,kBAAkB,EAClBR,gBAAgB,EAChBC,kBAAmB,kBACnBQ,iBAAkB,aAClBP,YAAa,CACTC,cAAe,kBACf/C,aAAc,0BAEnBiC,MAAK,SAAUe,GACVA,EAAOM,OACPnD,EAAKgD,QACL/C,EAAM8C,QACoB,WAAnBF,EAAOO,SACdf,KAAKC,KAAK,CACNC,KAAM,qCACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,oBAI/B,GACJ,GAgBA,EAER,CAtMwB,GAyMxBS,OAAOC,oBAAmB,WACtB5D,kBAAkBQ,MACtB","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTModalAddPayment = function () {\r\n    var element;\r\n    var submitButton;\r\n    var cancelButton;\r\n    var closeButton;\r\n    var validator;\r\n    var newBalance;\r\n    var form;\r\n    var modal;\r\n\r\n    // Init form inputs\r\n    var initForm = function () {\r\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n        validator = FormValidation.formValidation(\r\n            form,\r\n            {\r\n                fields: {\r\n                    'invoice': {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Invoice number is required'\r\n                            }\r\n                        }\r\n                    },\r\n                    'status': {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Invoice status is required'\r\n                            }\r\n                        }\r\n                    },\r\n                    'amount': {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Invoice amount is required'\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n\r\n                plugins: {\r\n                    trigger: new FormValidation.plugins.Trigger(),\r\n                    bootstrap: new FormValidation.plugins.Bootstrap5({\r\n                        rowSelector: '.fv-row',\r\n                        eleInvalidClass: '',\r\n                        eleValidClass: ''\r\n                    })\r\n                }\r\n            }\r\n        );\r\n\r\n        // Revalidate country field. For more info, plase visit the official plugin site: https://select2.org/\r\n        $(form.querySelector('[name=\"status\"]')).on('change', function () {\r\n            // Revalidate the field when an option is chosen\r\n            validator.revalidateField('status');\r\n        });\r\n\r\n        // Action buttons\r\n        submitButton.addEventListener('click', function (e) {\r\n            // Prevent default button action\r\n            e.preventDefault();\r\n\r\n            // Validate form before submit\r\n            if (validator) {\r\n                validator.validate().then(function (status) {\r\n                    console.log('validated!');\r\n\r\n                    if (status == 'Valid') {\r\n                        // Show loading indication\r\n                        submitButton.setAttribute('data-kt-indicator', 'on');\r\n\r\n                        // Disable submit button whilst loading\r\n                        submitButton.disabled = true;\r\n\r\n                        // Simulate form submission\r\n                        setTimeout(function () {\r\n                            // Simulate form submission\r\n                            submitButton.removeAttribute('data-kt-indicator');\r\n\r\n                            // Show popup confirmation \r\n                            Swal.fire({\r\n                                text: \"Form has been successfully submitted!\",\r\n                                icon: \"success\",\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: \"Ok, got it!\",\r\n                                customClass: {\r\n                                    confirmButton: \"btn btn-primary\"\r\n                                }\r\n                            }).then(function (result) {\r\n                                if (result.isConfirmed) {\r\n                                    modal.hide();\r\n\r\n                                    // Enable submit button after loading\r\n                                    submitButton.disabled = false;\r\n\r\n                                    // Reset form for demo purposes only\r\n                                    form.reset();\r\n                                }\r\n                            });\r\n\r\n                            //form.submit(); // Submit form\r\n                        }, 2000);\r\n                    } else {\r\n                        // Show popup warning \r\n                        Swal.fire({\r\n                            text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n                            icon: \"error\",\r\n                            buttonsStyling: false,\r\n                            confirmButtonText: \"Ok, got it!\",\r\n                            customClass: {\r\n                                confirmButton: \"btn btn-primary\"\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        cancelButton.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            Swal.fire({\r\n                text: \"Are you sure you would like to cancel?\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                buttonsStyling: false,\r\n                confirmButtonText: \"Yes, cancel it!\",\r\n                cancelButtonText: \"No, return\",\r\n                customClass: {\r\n                    confirmButton: \"btn btn-primary\",\r\n                    cancelButton: \"btn btn-active-light\"\r\n                }\r\n            }).then(function (result) {\r\n                if (result.value) {\r\n                    form.reset(); // Reset form\t\r\n                    modal.hide(); // Hide modal\t\t\t\t\r\n                } else if (result.dismiss === 'cancel') {\r\n                    Swal.fire({\r\n                        text: \"Your form has not been cancelled!.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn btn-primary\",\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        closeButton.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            Swal.fire({\r\n                text: \"Are you sure you would like to cancel?\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                buttonsStyling: false,\r\n                confirmButtonText: \"Yes, cancel it!\",\r\n                cancelButtonText: \"No, return\",\r\n                customClass: {\r\n                    confirmButton: \"btn btn-primary\",\r\n                    cancelButton: \"btn btn-active-light\"\r\n                }\r\n            }).then(function (result) {\r\n                if (result.value) {\r\n                    form.reset(); // Reset form\t\r\n                    modal.hide(); // Hide modal\t\t\t\t\r\n                } else if (result.dismiss === 'cancel') {\r\n                    Swal.fire({\r\n                        text: \"Your form has not been cancelled!.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn btn-primary\",\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    return {\r\n        // Public functions\r\n        init: function () {\r\n            // Elements\r\n            element = document.querySelector('#kt_modal_add_payment');\r\n            modal = new bootstrap.Modal(element);\r\n\r\n            form = element.querySelector('#kt_modal_add_payment_form');\r\n            submitButton = form.querySelector('#kt_modal_add_payment_submit');\r\n            cancelButton = form.querySelector('#kt_modal_add_payment_cancel');\r\n            closeButton = element.querySelector('#kt_modal_add_payment_close');\r\n\r\n            initForm();\r\n        }\r\n    };\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTModalAddPayment.init();\r\n});"]}