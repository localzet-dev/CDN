{"version":3,"file":"testimonials-1.js","names":["KTChartMap","init","document","getElementById","root","am5","Root","new","setThemes","am5themes_Animated","chart","container","children","push","am5map","MapChart","panX","projection","geoNaturalEarth1","polygonSeries","series","MapPolygonSeries","geoJSON","am5geodata_continentsLow","exclude","mapPolygons","template","setAll","tooltipText","interactive","templateField","states","create","fill","color","colors","ColorSet","data","id","settings","next","fillPattern","LinePattern","rotation","strokeWidth","RectanglePattern","checkered","CirclePattern","initChart","KTThemeMode","on","rendered","self","destroy","initChartMap","module","exports","KTUtil","onDOMContentLoaded"],"sources":["pages/testimonials/testimonials-1.js"],"mappings":"AAAA,aAGA,IAAIA,WAqHO,CACHC,KAAM,YApHS,WAGf,GAFcC,SAASC,eAAe,YAEtC,CAKR,IAAIC,EAAOC,IAAIC,KAAKC,IAAI,YAGxBH,EAAKI,UAAU,CACbC,mBAAmBF,IAAIH,KAGzB,IAAIM,EAAQN,EAAKO,UAAUC,SAASC,KAClCC,OAAOC,SAASR,IAAIH,EAAM,CACxBY,KAAM,UACNC,WAAYH,OAAOI,sBAKnBC,EAAgBT,EAAMU,OAAOP,KAC/BC,OAAOO,iBAAiBd,IAAIH,EAAM,CAChCkB,QAASC,yBACTC,QAAS,CAAC,iBAIdL,EAAcM,YAAYC,SAASC,OAAO,CACxCC,YAAa,SACbC,aAAa,EACbC,cAAe,aAGjBX,EAAcM,YAAYC,SAASK,OAAOC,OAAO,QAAS,CACxDC,KAAM5B,IAAI6B,MAAM,WAGlB,IAAIC,EAAS9B,IAAI+B,SAAS7B,IAAIH,EAAM,CAAC,GAErCe,EAAckB,KAAKV,OAAO,CAAC,CACzBW,GAAI,SACJC,SAAU,CACRN,KAAME,EAAOK,OACbC,YAAapC,IAAIqC,YAAYnC,IAAIH,EAAM,CACrC8B,MAAO7B,IAAI6B,MAAM,UACjBS,SAAU,GACVC,YAAa,MAGhB,CACDN,GAAI,OACJC,SAAU,CACRN,KAAME,EAAOK,OACbC,YAAapC,IAAIwC,iBAAiBtC,IAAIH,EAAM,CAC1C8B,MAAO7B,IAAI6B,MAAM,UACjBY,WAAW,MAGd,CACDR,GAAI,SACJC,SAAU,CACRN,KAAME,EAAOK,OACbC,YAAapC,IAAI0C,cAAcxC,IAAIH,EAAM,CACvC8B,MAAO7B,IAAI6B,MAAM,UACjBY,WAAW,MAGd,CACDR,GAAI,eACJC,SAAU,CACRN,KAAME,EAAOK,OACbC,YAAapC,IAAI0C,cAAcxC,IAAIH,EAAM,CACvC8B,MAAO7B,IAAI6B,MAAM,cAGpB,CACDI,GAAI,eACJC,SAAU,CACRN,KAAME,EAAOK,OACbC,YAAapC,IAAIqC,YAAYnC,IAAIH,EAAM,CACrC8B,MAAO7B,IAAI6B,MAAM,UACjBS,SAAU,GACVC,YAAa,MAGhB,CACDN,GAAI,UACJC,SAAU,CACRN,KAAME,EAAOK,OACbC,YAAapC,IAAIqC,YAAYnC,IAAIH,EAAM,CACrC8B,MAAO7B,IAAI6B,MAAM,gBAOfc,YAGAC,YAAYC,GAAG,uBAAuB,WAC9BxC,EAAMyC,UACNzC,EAAM0C,KAAKC,UAGfL,WACJ,GAxGA,CAyGJ,CAQQM,EACJ,GAKc,oBAAXC,aAAoD,IAAnBA,OAAOC,UAC/CD,OAAOC,QAAUxD,YAIrByD,OAAOC,oBAAmB,WACtB1D,WAAWC,MACf","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTChartMap = function () {\r\n    // Charts widgets\r\n    var initChartMap = function() {\r\n        var element = document.getElementById(\"chartdiv\");\r\n\r\n        if ( !element ) {\r\n            return;\r\n        } \r\n        \r\n        // Create root and chart\r\nvar root = am5.Root.new(\"chartdiv\"); \r\n\r\n// Set themes\r\nroot.setThemes([\r\n  am5themes_Animated.new(root)\r\n]);\r\n\r\nvar chart = root.container.children.push(\r\n  am5map.MapChart.new(root, {\r\n    panX: \"rotateX\",\r\n    projection: am5map.geoNaturalEarth1()\r\n  })\r\n);\r\n\r\n// Create polygon series\r\nvar polygonSeries = chart.series.push(\r\n  am5map.MapPolygonSeries.new(root, {\r\n    geoJSON: am5geodata_continentsLow,\r\n    exclude: [\"antarctica\"]\r\n  })\r\n);\r\n\r\npolygonSeries.mapPolygons.template.setAll({\r\n  tooltipText: \"{name}\",\r\n  interactive: true,\r\n  templateField: \"settings\"\r\n});\r\n\r\npolygonSeries.mapPolygons.template.states.create(\"hover\", {\r\n  fill: am5.color(0x677935)\r\n});\r\n\r\nvar colors = am5.ColorSet.new(root, {});\r\n\r\npolygonSeries.data.setAll([{\r\n  id: \"europe\",\r\n  settings: {\r\n    fill: colors.next(),\r\n    fillPattern: am5.LinePattern.new(root, {\r\n      color: am5.color(0xffffff),\r\n      rotation: 45,\r\n      strokeWidth: 1\r\n    })\r\n  }\r\n}, {\r\n  id: \"asia\",\r\n  settings: {\r\n    fill: colors.next(),\r\n    fillPattern: am5.RectanglePattern.new(root, {\r\n      color: am5.color(0xffffff),\r\n      checkered: true\r\n    })\r\n  }\r\n}, {\r\n  id: \"africa\",\r\n  settings: {\r\n    fill: colors.next(),\r\n    fillPattern: am5.CirclePattern.new(root, {\r\n      color: am5.color(0xffffff),\r\n      checkered: true\r\n    })\r\n  }\r\n}, {\r\n  id: \"northAmerica\",\r\n  settings: {\r\n    fill: colors.next(),\r\n    fillPattern: am5.CirclePattern.new(root, {\r\n      color: am5.color(0xffffff)\r\n    })\r\n  }\r\n}, {\r\n  id: \"southAmerica\",\r\n  settings: {\r\n    fill: colors.next(),\r\n    fillPattern: am5.LinePattern.new(root, {\r\n      color: am5.color(0xffffff),\r\n      rotation: 90,\r\n      strokeWidth: 2\r\n    })\r\n  }\r\n}, {\r\n  id: \"oceania\",\r\n  settings: {\r\n    fill: colors.next(),\r\n    fillPattern: am5.LinePattern.new(root, {\r\n      color: am5.color(0xffffff),\r\n    })\r\n  }\r\n}])\r\n\r\n\r\n        // Init chart\r\n        initChart();\r\n\r\n        // Update chart on theme mode change\r\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \r\n            if (chart.rendered) {\r\n                chart.self.destroy();\r\n            }\r\n\r\n            initChart();\r\n        });              \r\n    }   \r\n     \r\n \r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {            \r\n            // Charts widgets\r\n            initChartMap();              \r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n    module.exports = KTChartMap;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTChartMap.init();\r\n});\r\n"]}