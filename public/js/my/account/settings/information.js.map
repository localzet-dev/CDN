{"version":3,"file":"information.js","names":["AccountSettingsProfileDetails","form","submitButton","validation","init","$","flatpickr","dateFormat","document","getElementById","querySelector","FormValidation","formValidation","fields","lastname","validators","notEmpty","message","firstname","username","sex","plugins","trigger","Trigger","SubmitButton","bootstrap","Bootstrap5","rowSelector","eleInvalidClass","eleValidClass","addEventListener","e","preventDefault","validate","then","status","setAttribute","disabled","formData","FormData","append","files","value","axios","post","headers","response","removeAttribute","data","console","debug","swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","error","traces","catch","Util","onDOMContentLoaded"],"sources":["my/account/settings/information.js"],"mappings":"AAAA,aAGA,IAAIA,8BAAgC,WAEhC,IAAIC,EACAC,EACAC,EA0IJ,MAAO,CACHC,KAAM,WACFC,EAAE,oBAAoBC,UAAU,CAC5BC,WAAY,WAGhBN,EAAOO,SAASC,eAAe,2BAM/BP,EAAeD,EAAKS,cAAc,yBAlJtCP,EAAaQ,eAAeC,eACxBX,EACA,CACIY,OAAQ,CACJC,SAAU,CACNC,WAAY,CACRC,SAAU,CACNC,QAAS,yBAIrBC,UAAW,CACPH,WAAY,CACRC,SAAU,CACNC,QAAS,qBAIrBE,SAAU,CACNJ,WAAY,CACRC,SAAU,CACNC,QAAS,sBAIrBG,IAAK,CACDL,WAAY,CACRC,SAAU,CACNC,QAAS,qBAKzBI,QAAS,CACLC,QAAS,IAAIX,eAAeU,QAAQE,QACpCrB,aAAc,IAAIS,eAAeU,QAAQG,aAEzCC,UAAW,IAAId,eAAeU,QAAQK,WAAW,CAC7CC,YAAa,UACbC,gBAAiB,GACjBC,cAAe,QAQ/B3B,EAAa4B,iBAAiB,SAAS,SAAUC,GAC7CA,EAAEC,iBAEF7B,EAAW8B,WAAWC,MAAK,SAAUC,GACjC,GAAc,SAAVA,EAAmB,CACnBjC,EAAakC,aAAa,iBAAkB,MAC5ClC,EAAamC,UAAW,EAExB,IAAIC,EAAW,IAAIC,SAEnBD,EAASE,OAAO,SAAUvC,EAAKS,cAAc,mBAAmB+B,MAAM,IACtEH,EAASE,OAAO,WAAYvC,EAAKS,cAAc,qBAAqBgC,OACpEJ,EAASE,OAAO,YAAavC,EAAKS,cAAc,sBAAsBgC,OACtEJ,EAASE,OAAO,aAAcvC,EAAKS,cAAc,uBAAuBgC,OACxEJ,EAASE,OAAO,WAAYvC,EAAKS,cAAc,qBAAqBgC,OACpEJ,EAASE,OAAO,UAAWvC,EAAKS,cAAc,oBAAoBgC,OAClEJ,EAASE,OAAO,MAAOvC,EAAKS,cAAc,gBAAgBgC,OAE1DC,MAAMC,KACF,6BACAN,EACA,CACIO,QAAS,CACL,eAAgB,yBAG1BX,MAAK,SAAUY,GACb5C,EAAa6C,gBAAgB,kBAC7B7C,EAAamC,UAAW,EAEpBS,EAASE,MAAgC,KAAxBF,EAASE,KAAKb,QAC/Bc,QAAQC,MAAMJ,GACdK,KAAKC,KAAK,CACNC,KAAM,oBACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,UACnBC,YAAa,CACTC,cAAe,qCAIvBT,QAAQU,MAAMb,EAASE,KAAKW,MAAOb,EAASE,KAAKY,QAEjDT,KAAKC,KAAK,CACNC,KAAMP,EAASE,KAAKW,OAAS,qBAC7BL,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,UACnBC,YAAa,CACTC,cAAe,mCAI/B,IAAGG,OAAM,SAAUF,GACfV,QAAQU,MAAMA,GACdzD,EAAa6C,gBAAgB,kBAC7B7C,EAAamC,UAAW,EAExBc,KAAKC,KAAK,CACNC,KAAM,mEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,UACnBC,YAAa,CACTC,cAAe,kCAG3B,GAEJ,MACIP,KAAKC,KAAK,CACNC,KAAM,+BACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,UACnBC,YAAa,CACTC,cAAe,kCAI/B,GACJ,IAoBA,EAER,CAhKoC,GAmKpCI,KAAKC,oBAAmB,WACpB/D,8BAA8BI,MAClC","sourcesContent":["\"use strict\";\r\n\r\n// Определение класса\r\nvar AccountSettingsProfileDetails = function () {\r\n    // Private variables\r\n    var form;\r\n    var submitButton;\r\n    var validation;\r\n\r\n    // Приватные методы\r\n    var initValidation = function () {\r\n        validation = FormValidation.formValidation(\r\n            form,\r\n            {\r\n                fields: {\r\n                    lastname: {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Фамилия обязательна'\r\n                            }\r\n                        }\r\n                    },\r\n                    firstname: {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Имя обязательно'\r\n                            }\r\n                        }\r\n                    },\r\n                    username: {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Логин обязателен'\r\n                            }\r\n                        }\r\n                    },\r\n                    sex: {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Пол обязателен'\r\n                            }\r\n                        }\r\n                    },\r\n                },\r\n                plugins: {\r\n                    trigger: new FormValidation.plugins.Trigger(),\r\n                    submitButton: new FormValidation.plugins.SubmitButton(),\r\n                    //defaultSubmit: new FormValidation.plugins.DefaultSubmit(), // Uncomment this line to enable normal button submit after form validation\r\n                    bootstrap: new FormValidation.plugins.Bootstrap5({\r\n                        rowSelector: '.fv-row',\r\n                        eleInvalidClass: '',\r\n                        eleValidClass: ''\r\n                    })\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    var handleForm = function () {\r\n        submitButton.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            validation.validate().then(function (status) {\r\n                if (status == 'Valid') {\r\n                    submitButton.setAttribute(\"data-indicator\", \"on\");\r\n                    submitButton.disabled = true;\r\n\r\n                    let formData = new FormData();\r\n\r\n                    formData.append(\"avatar\", form.querySelector('[name=\"avatar\"]').files[0]);\r\n                    formData.append(\"lastname\", form.querySelector('[name=\"lastname\"]').value);\r\n                    formData.append(\"firstname\", form.querySelector('[name=\"firstname\"]').value);\r\n                    formData.append(\"middlename\", form.querySelector('[name=\"middlename\"]').value);\r\n                    formData.append(\"username\", form.querySelector('[name=\"username\"]').value);\r\n                    formData.append(\"bithday\", form.querySelector('[name=\"bithday\"]').value);\r\n                    formData.append(\"sex\", form.querySelector('[name=\"sex\"]').value);\r\n\r\n                    axios.post(\r\n                        '/settings/ajax/information',\r\n                        formData,\r\n                        {\r\n                            headers: {\r\n                                \"Content-Type\": \"multipart/form-data\",\r\n                            }\r\n                        }\r\n                    ).then(function (response) {\r\n                        submitButton.removeAttribute(\"data-indicator\");\r\n                        submitButton.disabled = false;\r\n\r\n                        if (response.data && response.data.status == 200) {\r\n                            console.debug(response)\r\n                            swal.fire({\r\n                                text: \"Данные обновлены!\",\r\n                                icon: \"success\",\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: \"Хорошо!\",\r\n                                customClass: {\r\n                                    confirmButton: \"btn fw-bold btn-light-primary\"\r\n                                }\r\n                            });\r\n                        } else {\r\n                            console.error(response.data.error, response.data.traces)\r\n\r\n                            swal.fire({\r\n                                text: response.data.error ?? \"Неизвестная ошибка\",\r\n                                icon: \"error\",\r\n                                buttonsStyling: false,\r\n                                confirmButtonText: \"Хорошо!\",\r\n                                customClass: {\r\n                                    confirmButton: \"btn fw-bold btn-light-primary\"\r\n                                }\r\n                            });\r\n                        }\r\n                    }).catch(function (error) {\r\n                        console.error(error)\r\n                        submitButton.removeAttribute(\"data-indicator\");\r\n                        submitButton.disabled = false;\r\n\r\n                        swal.fire({\r\n                            text: \"Проверьте соединение с интернетом или обратитесь к администрации\",\r\n                            icon: \"error\",\r\n                            buttonsStyling: false,\r\n                            confirmButtonText: \"Хорошо!\",\r\n                            customClass: {\r\n                                confirmButton: \"btn fw-bold btn-light-primary\"\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                } else {\r\n                    swal.fire({\r\n                        text: \"Пожалуйста, проверьте данные\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Хорошо!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn fw-bold btn-light-primary\"\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Публичные методы\r\n    return {\r\n        init: function () {\r\n            $(\"#birthday_picker\").flatpickr({\r\n                dateFormat: \"d.m.Y\",\r\n            });\r\n\r\n            form = document.getElementById('account_details_form');\r\n\r\n            if (!form) {\r\n                return;\r\n            }\r\n\r\n            submitButton = form.querySelector('#account_details_save');\r\n\r\n            initValidation();\r\n            handleForm();\r\n        }\r\n    }\r\n}();\r\n\r\n// При загрузке документа\r\nUtil.onDOMContentLoaded(function () {\r\n    AccountSettingsProfileDetails.init();\r\n});\r\n"]}