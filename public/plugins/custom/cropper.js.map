{"version":3,"file":"cropper.js","names":["global","factory","exports","module","define","amd","globalThis","self","Cropper","this","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","value","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","o","minLen","n","toString","call","slice","name","test","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","IS_BROWSER","window","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","isNaN","Number","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","toArray","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","addClass","elem","classList","add","className","trim","indexOf","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","dataset","getAttribute","setData","setAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","PI","scale","drawImage","map","param","floor","fromCharCode","String","REGEXP_DATA_URL_HEAD","resetAndGetOrientation","arrayBuffer","orientation","dataView","DataView","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","offsetWidth","offsetHeight","imageData","rotated","abs","canvasWidth","canvasHeight","canvasData","limited","limitCanvas","oldLeft","oldTop","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","removeAttribute","removeData","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","ratioX","ratioY","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","pointers","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","maxRatio","pointer2","x1","y1","x2","y2","z1","sqrt","getMaxZoomRatio","p","methods","reset","initialImageData","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","getPointersCenter","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","tagName","Error","reloading","sizing","init","protoProps","staticProps","toDataURL","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","clone","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","mimeType","chunks","subarray","btoa","arrayBufferToDataURL","_parseOrientation","parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild"],"sources":["cropper.js"],"mappings":";;;;;;;;;CAUC,SAAUA,EAAQC,GACE,iBAAZC,SAA0C,oBAAXC,OAAyBA,OAAOD,QAAUD,IAC9D,mBAAXG,QAAyBA,OAAOC,IAAMD,OAAOH,IACnDD,EAA+B,oBAAfM,WAA6BA,WAAaN,GAAUO,MAAaC,QAAUP,GAC9F,CAJA,CAIEQ,MAAM,WAAe,aAErB,SAASC,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GAEvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GAEvCC,IACFI,EAAUA,EAAQC,QAAO,SAAUC,GACjC,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,UACtD,KAGFP,EAAKQ,KAAKC,MAAMT,EAAMG,EACxB,CAEA,OAAOH,CACT,CAEA,SAASU,EAAeC,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,CAAC,EAEhDA,EAAI,EACNf,EAAQI,OAAOc,IAAS,GAAMC,SAAQ,SAAUC,GAC9CC,EAAgBP,EAAQM,EAAKF,EAAOE,GACtC,IACShB,OAAOkB,0BAChBlB,OAAOmB,iBAAiBT,EAAQV,OAAOkB,0BAA0BJ,IAEjElB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GACxChB,OAAOoB,eAAeV,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,GAC7E,GAEJ,CAEA,OAAON,CACT,CAEA,SAASW,EAAQC,GAaf,OATED,EADoB,mBAAXE,QAAoD,iBAApBA,OAAOC,SACtC,SAAUF,GAClB,cAAcA,CAChB,EAEU,SAAUA,GAClB,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,CAC3H,EAGKD,EAAQC,EACjB,CAEA,SAASK,EAAgBC,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,oCAExB,CAEA,SAASC,EAAkBrB,EAAQsB,GACjC,IAAK,IAAIrB,EAAI,EAAGA,EAAIqB,EAAMnB,OAAQF,IAAK,CACrC,IAAIsB,EAAaD,EAAMrB,GACvBsB,EAAW3B,WAAa2B,EAAW3B,aAAc,EACjD2B,EAAWC,cAAe,EACtB,UAAWD,IAAYA,EAAWE,UAAW,GACjDnC,OAAOoB,eAAeV,EAAQuB,EAAWjB,IAAKiB,EAChD,CACF,CAQA,SAAShB,EAAgBK,EAAKN,EAAKoB,GAYjC,OAXIpB,KAAOM,EACTtB,OAAOoB,eAAeE,EAAKN,EAAK,CAC9BoB,MAAOA,EACP9B,YAAY,EACZ4B,cAAc,EACdC,UAAU,IAGZb,EAAIN,GAAOoB,EAGNd,CACT,CAEA,SAASe,EAAmBC,GAC1B,OAGF,SAA4BA,GAC1B,GAAIC,MAAMC,QAAQF,GAAM,OAAOG,EAAkBH,EACnD,CALSI,CAAmBJ,IAO5B,SAA0BK,GACxB,GAAsB,oBAAXpB,QAAmD,MAAzBoB,EAAKpB,OAAOC,WAA2C,MAAtBmB,EAAK,cAAuB,OAAOJ,MAAMK,KAAKD,EACtH,CAToCE,CAAiBP,IAWrD,SAAqCQ,EAAGC,GACtC,IAAKD,EAAG,OACR,GAAiB,iBAANA,EAAgB,OAAOL,EAAkBK,EAAGC,GACvD,IAAIC,EAAIhD,OAAO0B,UAAUuB,SAASC,KAAKJ,GAAGK,MAAM,GAAI,GAC1C,WAANH,GAAkBF,EAAErB,cAAauB,EAAIF,EAAErB,YAAY2B,MACvD,GAAU,QAANJ,GAAqB,QAANA,EAAa,OAAOT,MAAMK,KAAKE,GAClD,GAAU,cAANE,GAAqB,2CAA2CK,KAAKL,GAAI,OAAOP,EAAkBK,EAAGC,EAC3G,CAlB6DO,CAA4BhB,IA4BzF,WACE,MAAM,IAAIR,UAAU,uIACtB,CA9BiGyB,EACjG,CAmBA,SAASd,EAAkBH,EAAKkB,IACnB,MAAPA,GAAeA,EAAMlB,EAAIzB,UAAQ2C,EAAMlB,EAAIzB,QAE/C,IAAK,IAAIF,EAAI,EAAG8C,EAAO,IAAIlB,MAAMiB,GAAM7C,EAAI6C,EAAK7C,IAAK8C,EAAK9C,GAAK2B,EAAI3B,GAEnE,OAAO8C,CACT,CAMA,IAAIC,EAA+B,oBAAXC,aAAqD,IAApBA,OAAOC,SAC5DC,EAASH,EAAaC,OAAS,CAAC,EAChCG,KAAkBJ,IAAcG,EAAOD,SAASG,kBAAkB,iBAAkBF,EAAOD,SAASG,gBACpGC,IAAoBN,GAAa,iBAAkBG,EACnDI,EAAY,UAEZC,EAAa,MACbC,EAAc,OACdC,EAAc,OACdC,EAAc,OACdC,EAAc,IACdC,EAAc,IACdC,EAAe,IACfC,EAAe,IACfC,EAAoB,KACpBC,EAAoB,KACpBC,EAAoB,KACpBC,EAAoB,KAEpBC,EAAa,GAAGC,OAAOd,EAAW,SAClCe,EAAiB,GAAGD,OAAOd,EAAW,aACtCgB,EAAe,GAAGF,OAAOd,EAAW,WACpCiB,EAAa,GAAGH,OAAOd,EAAW,SAClCkB,EAAkB,GAAGJ,OAAOd,EAAW,cACvCmB,EAAc,GAAGL,OAAOd,EAAW,UACnCoB,EAAa,GAAGN,OAAOd,EAAW,SAElCqB,EAAc,GAAGP,OAAOd,EAAW,UACnCsB,EAAe,GAAGR,OAAOd,EAAW,WAEpCuB,EAAiB,OACjBC,EAAiB,OACjBC,EAAiB,OAEjBC,EAAa,OACbC,EAAiB,UACjBC,EAAkB,WAClBC,EAAmB,YACnBC,EAAiB,WAIjBC,EAAqBhC,EAAoB,cAHrBF,EAAkB,aAAe,YAIrDmC,EAAqBjC,EAAoB,cAHtBF,EAAkB,YAAc,YAInDoC,EAAmBlC,EAAoB,0BAHrBF,EAAkB,uBAAyB,UAI7DqC,EAAc,QACdC,EAAe,SACfC,EAAc,QACdC,EAAa,OAEbC,EAAiB,aAEjBC,EAAiB,2CACjBC,EAAkB,SAClBC,EAAuB,4BACvBC,EAAkB,gBAMlBC,GAAW,CAEbC,SAAU,EAGVC,SAAUtB,EAGVuB,mBAAoBC,IAEpBC,YAAaD,IAEbE,KAAM,KAENC,QAAS,GAETC,YAAY,EAEZC,SAAS,EAETC,kBAAkB,EAElBC,kBAAkB,EAElBC,OAAO,EAEPC,QAAQ,EAERC,QAAQ,EAERC,WAAW,EAEXC,YAAY,EAEZC,UAAU,EAEVC,aAAc,GAEdC,SAAS,EAETC,WAAW,EAEXC,UAAU,EAEVC,UAAU,EAEVC,aAAa,EAEbC,aAAa,EAEbC,eAAgB,GAEhBC,gBAAgB,EAEhBC,kBAAkB,EAElBC,0BAA0B,EAE1BC,eAAgB,EAChBC,gBAAiB,EACjBC,gBAAiB,EACjBC,iBAAkB,EAClBC,kBAjEwB,IAkExBC,mBAjEyB,IAmEzBC,MAAO,KACPC,UAAW,KACXC,SAAU,KACVC,QAAS,KACTC,KAAM,KACNC,KAAM,MASJC,GAAQC,OAAOD,OAASxF,EAAOwF,MAOnC,SAASE,GAASnH,GAChB,MAAwB,iBAAVA,IAAuBiH,GAAMjH,EAC7C,CAOA,IAAIoH,GAAmB,SAA0BpH,GAC/C,OAAOA,EAAQ,GAAKA,EAAQqH,GAC9B,EAOA,SAASC,GAAYtH,GACnB,YAAwB,IAAVA,CAChB,CAOA,SAASuH,GAASvH,GAChB,MAA0B,WAAnBf,EAAQe,IAAiC,OAAVA,CACxC,CACA,IAAIwH,GAAiB5J,OAAO0B,UAAUkI,eAOtC,SAASC,GAAczH,GACrB,IAAKuH,GAASvH,GACZ,OAAO,EAGT,IACE,IAAI0H,EAAe1H,EAAMX,YACrBC,EAAYoI,EAAapI,UAC7B,OAAOoI,GAAgBpI,GAAakI,GAAe1G,KAAKxB,EAAW,gBAGrE,CAFE,MAAOqI,GACP,OAAO,CACT,CACF,CAOA,SAASC,GAAW5H,GAClB,MAAwB,mBAAVA,CAChB,CACA,IAAIe,GAAQZ,MAAMb,UAAUyB,MAO5B,SAAS8G,GAAQ7H,GACf,OAAOG,MAAMK,KAAOL,MAAMK,KAAKR,GAASe,GAAMD,KAAKd,EACrD,CAQA,SAASrB,GAAQmG,EAAMgD,GAerB,OAdIhD,GAAQ8C,GAAWE,KACjB3H,MAAMC,QAAQ0E,IAASqC,GAASrC,EAAKrG,QAGrCoJ,GAAQ/C,GAAMnG,SAAQ,SAAUqB,EAAOpB,GACrCkJ,EAAShH,KAAKgE,EAAM9E,EAAOpB,EAAKkG,EAClC,IACSyC,GAASzC,IACpBlH,OAAOD,KAAKmH,GAAMnG,SAAQ,SAAUC,GAClCkJ,EAAShH,KAAKgE,EAAMA,EAAKlG,GAAMA,EAAKkG,EACtC,KAIGA,CACT,CAQA,IAAIiD,GAASnK,OAAOmK,QAAU,SAAgBzJ,GAC5C,IAAK,IAAI0J,EAAOxJ,UAAUC,OAAQwJ,EAAO,IAAI9H,MAAM6H,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IAClGD,EAAKC,EAAO,GAAK1J,UAAU0J,GAa7B,OAVIX,GAASjJ,IAAW2J,EAAKxJ,OAAS,GACpCwJ,EAAKtJ,SAAQ,SAAUwJ,GACjBZ,GAASY,IACXvK,OAAOD,KAAKwK,GAAKxJ,SAAQ,SAAUC,GACjCN,EAAOM,GAAOuJ,EAAIvJ,EACpB,GAEJ,IAGKN,CACT,EACI8J,GAAkB,uBAStB,SAASC,GAAuBrI,GAC9B,IAAIsI,EAAQ9J,UAAUC,OAAS,QAAsB8J,IAAjB/J,UAAU,GAAmBA,UAAU,GAAK,KAChF,OAAO4J,GAAgBnH,KAAKjB,GAASwI,KAAKC,MAAMzI,EAAQsI,GAASA,EAAQtI,CAC3E,CACA,IAAI0I,GAAgB,+CAOpB,SAASC,GAASC,EAASC,GACzB,IAAIC,EAAQF,EAAQE,MACpBnK,GAAQkK,GAAQ,SAAU7I,EAAO+I,GAC3BL,GAAczH,KAAK8H,IAAa5B,GAASnH,KAC3CA,EAAQ,GAAG2C,OAAO3C,EAAO,OAG3B8I,EAAMC,GAAY/I,CACpB,GACF,CAiBA,SAASgJ,GAASJ,EAAS5I,GACzB,GAAKA,EAIL,GAAImH,GAASyB,EAAQnK,QACnBE,GAAQiK,GAAS,SAAUK,GACzBD,GAASC,EAAMjJ,EACjB,SAIF,GAAI4I,EAAQM,UACVN,EAAQM,UAAUC,IAAInJ,OADxB,CAKA,IAAIoJ,EAAYR,EAAQQ,UAAUC,OAE7BD,EAEMA,EAAUE,QAAQtJ,GAAS,IACpC4I,EAAQQ,UAAY,GAAGzG,OAAOyG,EAAW,KAAKzG,OAAO3C,IAFrD4I,EAAQQ,UAAYpJ,CALtB,CASF,CAOA,SAASuJ,GAAYX,EAAS5I,GACvBA,IAIDmH,GAASyB,EAAQnK,QACnBE,GAAQiK,GAAS,SAAUK,GACzBM,GAAYN,EAAMjJ,EACpB,IAIE4I,EAAQM,UACVN,EAAQM,UAAUM,OAAOxJ,GAIvB4I,EAAQQ,UAAUE,QAAQtJ,IAAU,IACtC4I,EAAQQ,UAAYR,EAAQQ,UAAUK,QAAQzJ,EAAO,KAEzD,CAQA,SAAS0J,GAAYd,EAAS5I,EAAO2J,GAC9B3J,IAIDmH,GAASyB,EAAQnK,QACnBE,GAAQiK,GAAS,SAAUK,GACzBS,GAAYT,EAAMjJ,EAAO2J,EAC3B,IAKEA,EACFX,GAASJ,EAAS5I,GAElBuJ,GAAYX,EAAS5I,GAEzB,CACA,IAAI4J,GAAoB,oBAOxB,SAASC,GAAY7J,GACnB,OAAOA,EAAMyJ,QAAQG,GAAmB,SAASE,aACnD,CAQA,SAASC,GAAQnB,EAAS5H,GACxB,OAAIuG,GAASqB,EAAQ5H,IACZ4H,EAAQ5H,GAGb4H,EAAQoB,QACHpB,EAAQoB,QAAQhJ,GAGlB4H,EAAQqB,aAAa,QAAQtH,OAAOkH,GAAY7I,IACzD,CAQA,SAASkJ,GAAQtB,EAAS5H,EAAM8D,GAC1ByC,GAASzC,GACX8D,EAAQ5H,GAAQ8D,EACP8D,EAAQoB,QACjBpB,EAAQoB,QAAQhJ,GAAQ8D,EAExB8D,EAAQuB,aAAa,QAAQxH,OAAOkH,GAAY7I,IAAQ8D,EAE5D,CAyBA,IAAIsF,GAAgB,QAEhBC,GAAgB,WAClB,IAAIC,GAAY,EAEhB,GAAIhJ,EAAY,CACd,IAAIiJ,GAAO,EAEPC,EAAW,WAAqB,EAEhCC,EAAU7M,OAAOoB,eAAe,CAAC,EAAG,OAAQ,CAC9C0L,IAAK,WAEH,OADAJ,GAAY,EACLC,CACT,EAOAI,IAAK,SAAa3K,GAChBuK,EAAOvK,CACT,IAEFyB,EAAOmJ,iBAAiB,OAAQJ,EAAUC,GAC1ChJ,EAAOoJ,oBAAoB,OAAQL,EAAUC,EAC/C,CAEA,OAAOH,CACT,CA5BoB,GAsCpB,SAASQ,GAAelC,EAASmC,EAAMP,GACrC,IAAIC,EAAUjM,UAAUC,OAAS,QAAsB8J,IAAjB/J,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC/EwM,EAAUR,EACdO,EAAK1B,OAAO4B,MAAMb,IAAezL,SAAQ,SAAUuM,GACjD,IAAKb,GAAe,CAClB,IAAIc,EAAYvC,EAAQuC,UAEpBA,GAAaA,EAAUD,IAAUC,EAAUD,GAAOV,KACpDQ,EAAUG,EAAUD,GAAOV,UACpBW,EAAUD,GAAOV,GAEqB,IAAzC5M,OAAOD,KAAKwN,EAAUD,IAAQzM,eACzB0M,EAAUD,GAGmB,IAAlCtN,OAAOD,KAAKwN,GAAW1M,eAClBmK,EAAQuC,UAGrB,CAEAvC,EAAQiC,oBAAoBK,EAAOF,EAASP,EAC9C,GACF,CASA,SAASW,GAAYxC,EAASmC,EAAMP,GAClC,IAAIC,EAAUjM,UAAUC,OAAS,QAAsB8J,IAAjB/J,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC/E6M,EAAWb,EACfO,EAAK1B,OAAO4B,MAAMb,IAAezL,SAAQ,SAAUuM,GACjD,GAAIT,EAAQF,OAASF,GAAe,CAClC,IAAIiB,EAAqB1C,EAAQuC,UAC7BA,OAAmC,IAAvBG,EAAgC,CAAC,EAAIA,EAErDD,EAAW,kBACFF,EAAUD,GAAOV,GACxB5B,EAAQiC,oBAAoBK,EAAOG,EAAUZ,GAE7C,IAAK,IAAIc,EAAQ/M,UAAUC,OAAQwJ,EAAO,IAAI9H,MAAMoL,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACpFvD,EAAKuD,GAAShN,UAAUgN,GAG1BhB,EAASpM,MAAMwK,EAASX,EAC1B,EAEKkD,EAAUD,KACbC,EAAUD,GAAS,CAAC,GAGlBC,EAAUD,GAAOV,IACnB5B,EAAQiC,oBAAoBK,EAAOC,EAAUD,GAAOV,GAAWC,GAGjEU,EAAUD,GAAOV,GAAYa,EAC7BzC,EAAQuC,UAAYA,CACtB,CAEAvC,EAAQgC,iBAAiBM,EAAOG,EAAUZ,EAC5C,GACF,CASA,SAASgB,GAAc7C,EAASmC,EAAMjG,GACpC,IAAIoG,EAaJ,OAXItD,GAAW8D,QAAU9D,GAAW+D,aAClCT,EAAQ,IAAIS,YAAYZ,EAAM,CAC5Ba,OAAQ9G,EACR+G,SAAS,EACTC,YAAY,KAGdZ,EAAQ1J,SAASuK,YAAY,gBACvBC,gBAAgBjB,GAAM,GAAM,EAAMjG,GAGnC8D,EAAQ6C,cAAcP,EAC/B,CAOA,SAASe,GAAUrD,GACjB,IAAIsD,EAAMtD,EAAQuD,wBAClB,MAAO,CACLC,KAAMF,EAAIE,MAAQ7K,OAAO8K,YAAc7K,SAASG,gBAAgB2K,YAChEC,IAAKL,EAAIK,KAAOhL,OAAOiL,YAAchL,SAASG,gBAAgB8K,WAElE,CACA,IAAIC,GAAWjL,EAAOiL,SAClBC,GAAiB,gCAOrB,SAASC,GAAiBC,GACxB,IAAIC,EAAQD,EAAIE,MAAMJ,IACtB,OAAiB,OAAVG,IAAmBA,EAAM,KAAOJ,GAASM,UAAYF,EAAM,KAAOJ,GAASO,UAAYH,EAAM,KAAOJ,GAASQ,KACtH,CAOA,SAASC,GAAaN,GACpB,IAAIO,EAAY,aAAazK,QAAO,IAAI0K,MAAOC,WAC/C,OAAOT,IAA6B,IAAtBA,EAAIvD,QAAQ,KAAc,IAAM,KAAO8D,CACvD,CAOA,SAASG,GAAcC,GACrB,IAAIC,EAASD,EAAKC,OACdC,EAASF,EAAKE,OACdC,EAASH,EAAKG,OACdC,EAAaJ,EAAKI,WAClBC,EAAaL,EAAKK,WAClBC,EAAS,GAET3G,GAASyG,IAA8B,IAAfA,GAC1BE,EAAO3P,KAAK,cAAcwE,OAAOiL,EAAY,QAG3CzG,GAAS0G,IAA8B,IAAfA,GAC1BC,EAAO3P,KAAK,cAAcwE,OAAOkL,EAAY,QAI3C1G,GAASsG,IAAsB,IAAXA,GACtBK,EAAO3P,KAAK,UAAUwE,OAAO8K,EAAQ,SAGnCtG,GAASuG,IAAsB,IAAXA,GACtBI,EAAO3P,KAAK,UAAUwE,OAAO+K,EAAQ,MAGnCvG,GAASwG,IAAsB,IAAXA,GACtBG,EAAO3P,KAAK,UAAUwE,OAAOgL,EAAQ,MAGvC,IAAII,EAAYD,EAAOrP,OAASqP,EAAOE,KAAK,KAAO,OACnD,MAAO,CACLC,gBAAiBF,EACjBG,YAAaH,EACbA,UAAWA,EAEf,CAoCA,SAASI,GAAWC,EAAOC,GACzB,IAAIC,EAAQF,EAAME,MACdC,EAAQH,EAAMG,MACdC,EAAM,CACRC,KAAMH,EACNI,KAAMH,GAER,OAAOF,EAAUG,EAAMnQ,EAAe,CACpCsQ,OAAQL,EACRM,OAAQL,GACPC,EACL,CAgCA,SAASK,GAAiBC,GAExB,IAAIjK,EAAciK,EAAMjK,YACpBkK,EAASD,EAAMC,OACfC,EAAQF,EAAME,MACdjE,EAAOvM,UAAUC,OAAS,QAAsB8J,IAAjB/J,UAAU,GAAmBA,UAAU,GAAK,UAC3EyQ,EAAe7H,GAAiB4H,GAChCE,EAAgB9H,GAAiB2H,GAErC,GAAIE,GAAgBC,EAAe,CACjC,IAAIC,EAAgBJ,EAASlK,EAEhB,YAATkG,GAAsBoE,EAAgBH,GAAkB,UAATjE,GAAoBoE,EAAgBH,EACrFD,EAASC,EAAQnK,EAEjBmK,EAAQD,EAASlK,CAErB,MAAWoK,EACTF,EAASC,EAAQnK,EACRqK,IACTF,EAAQD,EAASlK,GAGnB,MAAO,CACLmK,MAAOA,EACPD,OAAQA,EAEZ,CA0CA,SAASK,GAAgBC,EAAOC,EAAOC,EAAOC,GAC5C,IAAIC,EAAmBH,EAAMzK,YACzB6K,EAAoBJ,EAAMK,aAC1BC,EAAqBN,EAAMO,cAC3BC,EAAeR,EAAM7B,OACrBA,OAA0B,IAAjBqC,EAA0B,EAAIA,EACvCC,EAAeT,EAAM5B,OACrBA,OAA0B,IAAjBqC,EAA0B,EAAIA,EACvCC,EAAeV,EAAM3B,OACrBA,OAA0B,IAAjBqC,EAA0B,EAAIA,EACvCnL,EAAc0K,EAAM1K,YACpB8K,EAAeJ,EAAMI,aACrBE,EAAgBN,EAAMM,cACtBI,EAAkBT,EAAMU,UACxBA,OAAgC,IAApBD,EAA6B,cAAgBA,EACzDE,EAAwBX,EAAMY,sBAC9BA,OAAkD,IAA1BD,GAA0CA,EAClEE,EAAwBb,EAAMc,sBAC9BA,OAAkD,IAA1BD,EAAmC,MAAQA,EACnEE,EAAiBf,EAAMgB,SACvBA,OAA8B,IAAnBD,EAA4BlJ,IAAWkJ,EAClDE,EAAkBjB,EAAMkB,UACxBA,OAAgC,IAApBD,EAA6BpJ,IAAWoJ,EACpDE,EAAiBnB,EAAMoB,SACvBA,OAA8B,IAAnBD,EAA4B,EAAIA,EAC3CE,EAAkBrB,EAAMsB,UACxBA,OAAgC,IAApBD,EAA6B,EAAIA,EAC7CE,EAASvP,SAASwP,cAAc,UAChCC,EAAUF,EAAOG,WAAW,MAC5BC,EAAWtC,GAAiB,CAC9BhK,YAAaA,EACbmK,MAAOwB,EACPzB,OAAQ2B,IAENU,EAAWvC,GAAiB,CAC9BhK,YAAaA,EACbmK,MAAO4B,EACP7B,OAAQ+B,GACP,SACC9B,EAAQxG,KAAK6I,IAAIF,EAASnC,MAAOxG,KAAK8I,IAAIF,EAASpC,MAAOW,IAC1DZ,EAASvG,KAAK6I,IAAIF,EAASpC,OAAQvG,KAAK8I,IAAIF,EAASrC,OAAQc,IAG7D0B,EAAe1C,GAAiB,CAClChK,YAAa4K,EACbT,MAAOwB,EACPzB,OAAQ2B,IAENc,EAAe3C,GAAiB,CAClChK,YAAa4K,EACbT,MAAO4B,EACP7B,OAAQ+B,GACP,SACCW,EAAYjJ,KAAK6I,IAAIE,EAAavC,MAAOxG,KAAK8I,IAAIE,EAAaxC,MAAOU,IACtEgC,EAAalJ,KAAK6I,IAAIE,EAAaxC,OAAQvG,KAAK8I,IAAIE,EAAazC,OAAQa,IACzE+B,EAAS,EAAEF,EAAY,GAAIC,EAAa,EAAGD,EAAWC,GAe1D,OAdAX,EAAO/B,MAAQ3G,GAAuB2G,GACtC+B,EAAOhC,OAAS1G,GAAuB0G,GACvCkC,EAAQW,UAAY1B,EACpBe,EAAQY,SAAS,EAAG,EAAG7C,EAAOD,GAC9BkC,EAAQa,OACRb,EAAQc,UAAU/C,EAAQ,EAAGD,EAAS,GACtCkC,EAAQxD,OAAOA,EAASjF,KAAKwJ,GAAK,KAClCf,EAAQgB,MAAMvE,EAAQC,GACtBsD,EAAQb,sBAAwBA,EAChCa,EAAQX,sBAAwBA,EAChCW,EAAQiB,UAAU9T,MAAM6S,EAAS,CAAC5B,GAAO1M,OAAO1C,EAAmB0R,EAAOQ,KAAI,SAAUC,GACtF,OAAO5J,KAAK6J,MAAMhK,GAAuB+J,GAC3C,OACAnB,EAAQhM,UACD8L,CACT,CACA,IAAIuB,GAAeC,OAAOD,aAmB1B,IAAIE,GAAuB,YA6C3B,SAASC,GAAuBC,GAC9B,IACIC,EADAC,EAAW,IAAIC,SAASH,GAG5B,IACE,IAAII,EACAC,EACAC,EAEJ,GAA6B,MAAzBJ,EAASK,SAAS,IAAwC,MAAzBL,EAASK,SAAS,GAIrD,IAHA,IAAIxU,EAASmU,EAASM,WAClBC,EAAS,EAENA,EAAS,EAAI1U,GAAQ,CAC1B,GAAkC,MAA9BmU,EAASK,SAASE,IAAsD,MAAlCP,EAASK,SAASE,EAAS,GAAa,CAChFJ,EAAYI,EACZ,KACF,CAEAA,GAAU,CACZ,CAGF,GAAIJ,EAAW,CACb,IACIK,EAAaL,EAAY,GAE7B,GAAuD,SAlF7D,SAA+BH,EAAUS,EAAO5U,GAC9C,IAAI6U,EAAM,GACV7U,GAAU4U,EAEV,IAAK,IAAI9U,EAAI8U,EAAO9U,EAAIE,EAAQF,GAAK,EACnC+U,GAAOhB,GAAaM,EAASK,SAAS1U,IAGxC,OAAO+U,CACT,CAyEUC,CAAsBX,EAHTG,EAAY,EAGmB,GAAe,CAC7D,IAAIS,EAAaZ,EAASa,UAAUL,GAGpC,KAFAN,EAA8B,QAAfU,IAEoB,QAAfA,IAGyC,KAArDZ,EAASa,UAAUL,EAAa,EAAGN,GAA0B,CAC/D,IAAIY,EAAiBd,EAASe,UAAUP,EAAa,EAAGN,GAEpDY,GAAkB,IACpBV,EAAWI,EAAaM,EAE5B,CAEN,CACF,CAEA,GAAIV,EAAU,CACZ,IAEIY,EAEArV,EAJAsV,EAAUjB,EAASa,UAAUT,EAAUF,GAM3C,IAAKvU,EAAI,EAAGA,EAAIsV,EAAStV,GAAK,EAG5B,GAFAqV,EAAUZ,EAAe,GAAJzU,EAAS,EAEoB,MAA9CqU,EAASa,UAAUG,EAASd,GAE9B,CAEEc,GAAW,EAEXjB,EAAcC,EAASa,UAAUG,EAASd,GAE1CF,EAASkB,UAAUF,EAAS,EAAGd,GAC/B,KACF,CAEN,CAGF,CAFE,MAAOnL,GACPgL,EAAc,CAChB,CAEA,OAAOA,CACT,CA0DA,IAAIoB,GAAS,CACXA,OAAQ,WACNxW,KAAKyW,gBACLzW,KAAK0W,aACL1W,KAAK2W,cACL3W,KAAK4W,eAED5W,KAAK6W,SACP7W,KAAK8W,eAET,EACAL,cAAe,WACb,IAAIpL,EAAUrL,KAAKqL,QACf6B,EAAUlN,KAAKkN,QACf6J,EAAY/W,KAAK+W,UACjBC,EAAUhX,KAAKgX,QACf3D,EAAW1J,OAAOuD,EAAQhE,mBAC1BqK,EAAY5J,OAAOuD,EAAQ/D,oBAC/BsC,GAASuL,EAAS1R,GAClB0G,GAAYX,EAAS/F,GACrB,IAAI2R,EAAgB,CAClBxF,MAAOxG,KAAK8I,IAAIgD,EAAUG,YAAa7D,GAAY,EAAIA,EAhhCnC,KAihCpB7B,OAAQvG,KAAK8I,IAAIgD,EAAUI,aAAc5D,GAAa,EAAIA,EAhhCrC,MAkhCvBvT,KAAKiX,cAAgBA,EACrB7L,GAAS4L,EAAS,CAChBvF,MAAOwF,EAAcxF,MACrBD,OAAQyF,EAAczF,SAExB/F,GAASJ,EAAS/F,GAClB0G,GAAYgL,EAAS1R,EACvB,EAEAoR,WAAY,WACV,IAAIO,EAAgBjX,KAAKiX,cACrBG,EAAYpX,KAAKoX,UACjBlQ,EAAWlH,KAAKkN,QAAQhG,SACxBmQ,EAAUpM,KAAKqM,IAAIF,EAAUlH,QAAU,KAAQ,GAC/CkC,EAAeiF,EAAUD,EAAU9E,cAAgB8E,EAAUhF,aAC7DE,EAAgB+E,EAAUD,EAAUhF,aAAegF,EAAU9E,cAC7DhL,EAAc8K,EAAeE,EAC7BiF,EAAcN,EAAcxF,MAC5B+F,EAAeP,EAAczF,OAE7ByF,EAAczF,OAASlK,EAAc2P,EAAcxF,MACpC,IAAbvK,EACFqQ,EAAcN,EAAczF,OAASlK,EAErCkQ,EAAeP,EAAcxF,MAAQnK,EAEjB,IAAbJ,EACTsQ,EAAeP,EAAcxF,MAAQnK,EAErCiQ,EAAcN,EAAczF,OAASlK,EAGvC,IAAImQ,EAAa,CACfnQ,YAAaA,EACb8K,aAAcA,EACdE,cAAeA,EACfb,MAAO8F,EACP/F,OAAQgG,GAEVxX,KAAKyX,WAAaA,EAClBzX,KAAK0X,QAAuB,IAAbxQ,GAA+B,IAAbA,EACjClH,KAAK2X,aAAY,GAAM,GACvBF,EAAWhG,MAAQxG,KAAK6I,IAAI7I,KAAK8I,IAAI0D,EAAWhG,MAAOgG,EAAWpE,UAAWoE,EAAWxE,UACxFwE,EAAWjG,OAASvG,KAAK6I,IAAI7I,KAAK8I,IAAI0D,EAAWjG,OAAQiG,EAAWlE,WAAYkE,EAAWtE,WAC3FsE,EAAW5I,MAAQoI,EAAcxF,MAAQgG,EAAWhG,OAAS,EAC7DgG,EAAWzI,KAAOiI,EAAczF,OAASiG,EAAWjG,QAAU,EAC9DiG,EAAWG,QAAUH,EAAW5I,KAChC4I,EAAWI,OAASJ,EAAWzI,IAC/BhP,KAAK8X,kBAAoBtN,GAAO,CAAC,EAAGiN,EACtC,EACAE,YAAa,SAAqBI,EAAaC,GAC7C,IAAI9K,EAAUlN,KAAKkN,QACf+J,EAAgBjX,KAAKiX,cACrBQ,EAAazX,KAAKyX,WAClBQ,EAAcjY,KAAKiY,YACnB/Q,EAAWgG,EAAQhG,SACnBI,EAAcmQ,EAAWnQ,YACzBuP,EAAU7W,KAAK6W,SAAWoB,EAE9B,GAAIF,EAAa,CACf,IAAIjP,EAAiBa,OAAOuD,EAAQpE,iBAAmB,EACnDC,EAAkBY,OAAOuD,EAAQnE,kBAAoB,EAErD7B,EAAW,GACb4B,EAAiBmC,KAAK8I,IAAIjL,EAAgBmO,EAAcxF,OACxD1I,EAAkBkC,KAAK8I,IAAIhL,EAAiBkO,EAAczF,QAEzC,IAAbtK,IACE6B,EAAkBzB,EAAcwB,EAClCA,EAAiBC,EAAkBzB,EAEnCyB,EAAkBD,EAAiBxB,IAG9BJ,EAAW,IAChB4B,EACFA,EAAiBmC,KAAK8I,IAAIjL,EAAgB+N,EAAUoB,EAAYxG,MAAQ,GAC/D1I,EACTA,EAAkBkC,KAAK8I,IAAIhL,EAAiB8N,EAAUoB,EAAYzG,OAAS,GAClEqF,IACT/N,EAAiBmP,EAAYxG,OAC7B1I,EAAkBkP,EAAYzG,QAERlK,EAAcwB,EAClCA,EAAiBC,EAAkBzB,EAEnCyB,EAAkBD,EAAiBxB,IAKzC,IAAI4Q,EAAoB5G,GAAiB,CACvChK,YAAaA,EACbmK,MAAO3I,EACP0I,OAAQzI,IAGVD,EAAiBoP,EAAkBzG,MACnC1I,EAAkBmP,EAAkB1G,OACpCiG,EAAWpE,SAAWvK,EACtB2O,EAAWlE,UAAYxK,EACvB0O,EAAWxE,SAAWnJ,IACtB2N,EAAWtE,UAAYrJ,GACzB,CAEA,GAAIkO,EACF,GAAI9Q,GAAY2P,EAAU,EAAI,GAAI,CAChC,IAAIsB,EAAgBlB,EAAcxF,MAAQgG,EAAWhG,MACjD2G,EAAenB,EAAczF,OAASiG,EAAWjG,OACrDiG,EAAWY,QAAUpN,KAAK6I,IAAI,EAAGqE,GACjCV,EAAWa,OAASrN,KAAK6I,IAAI,EAAGsE,GAChCX,EAAWc,QAAUtN,KAAK8I,IAAI,EAAGoE,GACjCV,EAAWe,OAASvN,KAAK8I,IAAI,EAAGqE,GAE5BvB,GAAW7W,KAAK0X,UAClBD,EAAWY,QAAUpN,KAAK6I,IAAImE,EAAYpJ,KAAMoJ,EAAYpJ,MAAQoJ,EAAYxG,MAAQgG,EAAWhG,QACnGgG,EAAWa,OAASrN,KAAK6I,IAAImE,EAAYjJ,IAAKiJ,EAAYjJ,KAAOiJ,EAAYzG,OAASiG,EAAWjG,SACjGiG,EAAWc,QAAUN,EAAYpJ,KACjC4I,EAAWe,OAASP,EAAYjJ,IAEf,IAAb9H,IACEuQ,EAAWhG,OAASwF,EAAcxF,QACpCgG,EAAWY,QAAUpN,KAAK6I,IAAI,EAAGqE,GACjCV,EAAWc,QAAUtN,KAAK8I,IAAI,EAAGoE,IAG/BV,EAAWjG,QAAUyF,EAAczF,SACrCiG,EAAWa,OAASrN,KAAK6I,IAAI,EAAGsE,GAChCX,EAAWe,OAASvN,KAAK8I,IAAI,EAAGqE,KAIxC,MACEX,EAAWY,SAAWZ,EAAWhG,MACjCgG,EAAWa,QAAUb,EAAWjG,OAChCiG,EAAWc,QAAUtB,EAAcxF,MACnCgG,EAAWe,OAASvB,EAAczF,MAGxC,EACAoF,aAAc,SAAsB6B,EAASC,GAC3C,IAAIjB,EAAazX,KAAKyX,WAClBL,EAAYpX,KAAKoX,UAErB,GAAIsB,EAAa,CACf,IAAIC,EAvdV,SAAyBC,GACvB,IAAInH,EAAQmH,EAAMnH,MACdD,EAASoH,EAAMpH,OACfqH,EAASD,EAAMC,OAGnB,GAAe,KAFfA,EAAS5N,KAAKqM,IAAIuB,GAAU,KAG1B,MAAO,CACLpH,MAAOD,EACPA,OAAQC,GAIZ,IAAIqH,EAAMD,EAAS,GAAK5N,KAAKwJ,GAAK,IAC9BsE,EAAS9N,KAAK+N,IAAIF,GAClBG,EAAShO,KAAKiO,IAAIJ,GAClBK,EAAW1H,EAAQwH,EAASzH,EAASuH,EACrCK,EAAY3H,EAAQsH,EAASvH,EAASyH,EAC1C,OAAOJ,EAAS,GAAK,CACnBpH,MAAO2H,EACP5H,OAAQ2H,GACN,CACF1H,MAAO0H,EACP3H,OAAQ4H,EAEZ,CA8b6BC,CAAgB,CACrC5H,MAAO2F,EAAUhF,aAAenH,KAAKqM,IAAIF,EAAUjH,QAAU,GAC7DqB,OAAQ4F,EAAU9E,cAAgBrH,KAAKqM,IAAIF,EAAUhH,QAAU,GAC/DyI,OAAQzB,EAAUlH,QAAU,IAE1BkC,EAAeuG,EAAiBlH,MAChCa,EAAgBqG,EAAiBnH,OAEjCC,EAAQgG,EAAWhG,OAASW,EAAeqF,EAAWrF,cACtDZ,EAASiG,EAAWjG,QAAUc,EAAgBmF,EAAWnF,eAC7DmF,EAAW5I,OAAS4C,EAAQgG,EAAWhG,OAAS,EAChDgG,EAAWzI,MAAQwC,EAASiG,EAAWjG,QAAU,EACjDiG,EAAWhG,MAAQA,EACnBgG,EAAWjG,OAASA,EACpBiG,EAAWnQ,YAAc8K,EAAeE,EACxCmF,EAAWrF,aAAeA,EAC1BqF,EAAWnF,cAAgBA,EAC3BtS,KAAK2X,aAAY,GAAM,EACzB,EAEIF,EAAWhG,MAAQgG,EAAWxE,UAAYwE,EAAWhG,MAAQgG,EAAWpE,YAC1EoE,EAAW5I,KAAO4I,EAAWG,UAG3BH,EAAWjG,OAASiG,EAAWtE,WAAasE,EAAWjG,OAASiG,EAAWlE,aAC7EkE,EAAWzI,IAAMyI,EAAWI,QAG9BJ,EAAWhG,MAAQxG,KAAK6I,IAAI7I,KAAK8I,IAAI0D,EAAWhG,MAAOgG,EAAWpE,UAAWoE,EAAWxE,UACxFwE,EAAWjG,OAASvG,KAAK6I,IAAI7I,KAAK8I,IAAI0D,EAAWjG,OAAQiG,EAAWlE,WAAYkE,EAAWtE,WAC3FnT,KAAK2X,aAAY,GAAO,GACxBF,EAAW5I,KAAO5D,KAAK6I,IAAI7I,KAAK8I,IAAI0D,EAAW5I,KAAM4I,EAAWY,SAAUZ,EAAWc,SACrFd,EAAWzI,IAAM/D,KAAK6I,IAAI7I,KAAK8I,IAAI0D,EAAWzI,IAAKyI,EAAWa,QAASb,EAAWe,QAClFf,EAAWG,QAAUH,EAAW5I,KAChC4I,EAAWI,OAASJ,EAAWzI,IAC/B5D,GAASpL,KAAKwT,OAAQhJ,GAAO,CAC3BiH,MAAOgG,EAAWhG,MAClBD,OAAQiG,EAAWjG,QAClBxB,GAAc,CACfK,WAAYoH,EAAW5I,KACvByB,WAAYmH,EAAWzI,QAEzBhP,KAAKsZ,YAAYb,GAEbzY,KAAK6W,SAAW7W,KAAK0X,SACvB1X,KAAKuZ,cAAa,GAAM,EAE5B,EACAD,YAAa,SAAqBb,GAChC,IAAIhB,EAAazX,KAAKyX,WAClBL,EAAYpX,KAAKoX,UACjB3F,EAAQ2F,EAAUhF,cAAgBqF,EAAWhG,MAAQgG,EAAWrF,cAChEZ,EAAS4F,EAAU9E,eAAiBmF,EAAWjG,OAASiG,EAAWnF,eACvE9H,GAAO4M,EAAW,CAChB3F,MAAOA,EACPD,OAAQA,EACR3C,MAAO4I,EAAWhG,MAAQA,GAAS,EACnCzC,KAAMyI,EAAWjG,OAASA,GAAU,IAEtCpG,GAASpL,KAAK8R,MAAOtH,GAAO,CAC1BiH,MAAO2F,EAAU3F,MACjBD,OAAQ4F,EAAU5F,QACjBxB,GAAcxF,GAAO,CACtB6F,WAAY+G,EAAUvI,KACtByB,WAAY8G,EAAUpI,KACrBoI,MAECqB,GACFzY,KAAKwZ,QAET,EACA7C,YAAa,WACX,IAAIzJ,EAAUlN,KAAKkN,QACfuK,EAAazX,KAAKyX,WAClBnQ,EAAc4F,EAAQ5F,aAAe4F,EAAQ9F,mBAC7Ce,EAAewB,OAAOuD,EAAQ/E,eAAiB,GAC/C8P,EAAc,CAChBxG,MAAOgG,EAAWhG,MAClBD,OAAQiG,EAAWjG,QAGjBlK,IACEmQ,EAAWjG,OAASlK,EAAcmQ,EAAWhG,MAC/CwG,EAAYzG,OAASyG,EAAYxG,MAAQnK,EAEzC2Q,EAAYxG,MAAQwG,EAAYzG,OAASlK,GAI7CtH,KAAKiY,YAAcA,EACnBjY,KAAKuZ,cAAa,GAAM,GAExBtB,EAAYxG,MAAQxG,KAAK6I,IAAI7I,KAAK8I,IAAIkE,EAAYxG,MAAOwG,EAAY5E,UAAW4E,EAAYhF,UAC5FgF,EAAYzG,OAASvG,KAAK6I,IAAI7I,KAAK8I,IAAIkE,EAAYzG,OAAQyG,EAAY1E,WAAY0E,EAAY9E,WAE/F8E,EAAYxG,MAAQxG,KAAK8I,IAAIkE,EAAY5E,SAAU4E,EAAYxG,MAAQtJ,GACvE8P,EAAYzG,OAASvG,KAAK8I,IAAIkE,EAAY1E,UAAW0E,EAAYzG,OAASrJ,GAC1E8P,EAAYpJ,KAAO4I,EAAW5I,MAAQ4I,EAAWhG,MAAQwG,EAAYxG,OAAS,EAC9EwG,EAAYjJ,IAAMyI,EAAWzI,KAAOyI,EAAWjG,OAASyG,EAAYzG,QAAU,EAC9EyG,EAAYL,QAAUK,EAAYpJ,KAClCoJ,EAAYJ,OAASI,EAAYjJ,IACjChP,KAAKyZ,mBAAqBjP,GAAO,CAAC,EAAGyN,EACvC,EACAsB,aAAc,SAAsBxB,EAAaC,GAC/C,IAAI9K,EAAUlN,KAAKkN,QACf+J,EAAgBjX,KAAKiX,cACrBQ,EAAazX,KAAKyX,WAClBQ,EAAcjY,KAAKiY,YACnBP,EAAU1X,KAAK0X,QACfpQ,EAAc4F,EAAQ5F,YAE1B,GAAIyQ,EAAa,CACf,IAAI/O,EAAkBW,OAAOuD,EAAQlE,kBAAoB,EACrDC,EAAmBU,OAAOuD,EAAQjE,mBAAqB,EACvDyQ,EAAkBhC,EAAUzM,KAAK6I,IAAImD,EAAcxF,MAAOgG,EAAWhG,MAAOgG,EAAWhG,MAAQgG,EAAW5I,KAAMoI,EAAcxF,MAAQgG,EAAW5I,MAAQoI,EAAcxF,MACvKkI,EAAmBjC,EAAUzM,KAAK6I,IAAImD,EAAczF,OAAQiG,EAAWjG,OAAQiG,EAAWjG,OAASiG,EAAWzI,IAAKiI,EAAczF,OAASiG,EAAWzI,KAAOiI,EAAczF,OAE9KxI,EAAkBiC,KAAK6I,IAAI9K,EAAiBiO,EAAcxF,OAC1DxI,EAAmBgC,KAAK6I,IAAI7K,EAAkBgO,EAAczF,QAExDlK,IACE0B,GAAmBC,EACjBA,EAAmB3B,EAAc0B,EACnCC,EAAmBD,EAAkB1B,EAErC0B,EAAkBC,EAAmB3B,EAE9B0B,EACTC,EAAmBD,EAAkB1B,EAC5B2B,IACTD,EAAkBC,EAAmB3B,GAGnCqS,EAAmBrS,EAAcoS,EACnCC,EAAmBD,EAAkBpS,EAErCoS,EAAkBC,EAAmBrS,GAKzC2Q,EAAY5E,SAAWpI,KAAK6I,IAAI9K,EAAiB0Q,GACjDzB,EAAY1E,UAAYtI,KAAK6I,IAAI7K,EAAkB0Q,GACnD1B,EAAYhF,SAAWyG,EACvBzB,EAAY9E,UAAYwG,CAC1B,CAEI3B,IACEN,GACFO,EAAYI,QAAUpN,KAAK8I,IAAI,EAAG0D,EAAW5I,MAC7CoJ,EAAYK,OAASrN,KAAK8I,IAAI,EAAG0D,EAAWzI,KAC5CiJ,EAAYM,QAAUtN,KAAK6I,IAAImD,EAAcxF,MAAOgG,EAAW5I,KAAO4I,EAAWhG,OAASwG,EAAYxG,MACtGwG,EAAYO,OAASvN,KAAK6I,IAAImD,EAAczF,OAAQiG,EAAWzI,IAAMyI,EAAWjG,QAAUyG,EAAYzG,SAEtGyG,EAAYI,QAAU,EACtBJ,EAAYK,OAAS,EACrBL,EAAYM,QAAUtB,EAAcxF,MAAQwG,EAAYxG,MACxDwG,EAAYO,OAASvB,EAAczF,OAASyG,EAAYzG,QAG9D,EACAsF,cAAe,WACb,IAAI5J,EAAUlN,KAAKkN,QACf+J,EAAgBjX,KAAKiX,cACrBgB,EAAcjY,KAAKiY,aAEnBA,EAAYxG,MAAQwG,EAAYhF,UAAYgF,EAAYxG,MAAQwG,EAAY5E,YAC9E4E,EAAYpJ,KAAOoJ,EAAYL,UAG7BK,EAAYzG,OAASyG,EAAY9E,WAAa8E,EAAYzG,OAASyG,EAAY1E,aACjF0E,EAAYjJ,IAAMiJ,EAAYJ,QAGhCI,EAAYxG,MAAQxG,KAAK6I,IAAI7I,KAAK8I,IAAIkE,EAAYxG,MAAOwG,EAAY5E,UAAW4E,EAAYhF,UAC5FgF,EAAYzG,OAASvG,KAAK6I,IAAI7I,KAAK8I,IAAIkE,EAAYzG,OAAQyG,EAAY1E,WAAY0E,EAAY9E,WAC/FnT,KAAKuZ,cAAa,GAAO,GACzBtB,EAAYpJ,KAAO5D,KAAK6I,IAAI7I,KAAK8I,IAAIkE,EAAYpJ,KAAMoJ,EAAYI,SAAUJ,EAAYM,SACzFN,EAAYjJ,IAAM/D,KAAK6I,IAAI7I,KAAK8I,IAAIkE,EAAYjJ,IAAKiJ,EAAYK,QAASL,EAAYO,QACtFP,EAAYL,QAAUK,EAAYpJ,KAClCoJ,EAAYJ,OAASI,EAAYjJ,IAE7B9B,EAAQ9E,SAAW8E,EAAQvE,gBAE7BgE,GAAQ3M,KAAK4Z,KAAMjU,EAAasS,EAAYxG,OAASwF,EAAcxF,OAASwG,EAAYzG,QAAUyF,EAAczF,OAAS/M,EAAcF,GAGzI6G,GAASpL,KAAK6Z,QAASrP,GAAO,CAC5BiH,MAAOwG,EAAYxG,MACnBD,OAAQyG,EAAYzG,QACnBxB,GAAc,CACfK,WAAY4H,EAAYpJ,KACxByB,WAAY2H,EAAYjJ,QAGtBhP,KAAK6W,SAAW7W,KAAK0X,SACvB1X,KAAK2X,aAAY,GAAM,GAGpB3X,KAAK8Z,UACR9Z,KAAKwZ,QAET,EACAA,OAAQ,WACNxZ,KAAKwH,UACL0G,GAAclO,KAAKqL,QAASrF,EAAYhG,KAAKwM,UAC/C,GAGEhF,GAAU,CACZuS,YAAa,WACX,IAAI1O,EAAUrL,KAAKqL,QACf2O,EAAcha,KAAKga,YACnBxS,EAAUxH,KAAKkN,QAAQ1F,QACvB8H,EAAM0K,EAAcha,KAAKia,eAAiBja,KAAKsP,IAC/C4K,EAAM7O,EAAQ6O,KAAO,uBACrBpI,EAAQ7N,SAASwP,cAAc,OAWnC,GATIuG,IACFlI,EAAMkI,YAAcA,GAGtBlI,EAAMqI,IAAM7K,EACZwC,EAAMoI,IAAMA,EACZla,KAAKoa,QAAQC,YAAYvI,GACzB9R,KAAKsa,aAAexI,EAEftK,EAAL,CAIA,IAAI+S,EAAW/S,EAEQ,iBAAZA,EACT+S,EAAWlP,EAAQmP,cAAcC,iBAAiBjT,GACzCA,EAAQkT,gBACjBH,EAAW,CAAC/S,IAGdxH,KAAKua,SAAWA,EAChBnZ,GAAQmZ,GAAU,SAAUI,GAC1B,IAAIC,EAAM3W,SAASwP,cAAc,OAEjC9G,GAAQgO,EAAI/U,EAAc,CACxB6L,MAAOkJ,EAAGzD,YACV1F,OAAQmJ,EAAGxD,aACX0D,KAAMF,EAAGG,YAGPd,IACFY,EAAIZ,YAAcA,GAGpBY,EAAIT,IAAM7K,EACVsL,EAAIV,IAAMA,EAQVU,EAAIrP,MAAMwP,QAAU,0KACpBJ,EAAGG,UAAY,GACfH,EAAGN,YAAYO,EACjB,GApCA,CAqCF,EACAI,aAAc,WACZ5Z,GAAQpB,KAAKua,UAAU,SAAUlP,GAC/B,IAAI9D,EAAOiF,GAAQnB,EAASzF,GAC5BwF,GAASC,EAAS,CAChBoG,MAAOlK,EAAKkK,MACZD,OAAQjK,EAAKiK,SAEfnG,EAAQyP,UAAYvT,EAAKsT,KA1jC/B,SAAoBxP,EAAS5H,GAC3B,GAAIuG,GAASqB,EAAQ5H,IACnB,WACS4H,EAAQ5H,EAGjB,CAFE,MAAO2G,GACPiB,EAAQ5H,QAAQuH,CAClB,MACK,GAAIK,EAAQoB,QAEjB,WACSpB,EAAQoB,QAAQhJ,EAGzB,CAFE,MAAO2G,GACPiB,EAAQoB,QAAQhJ,QAAQuH,CAC1B,MAEAK,EAAQ4P,gBAAgB,QAAQ7V,OAAOkH,GAAY7I,IAEvD,CA0iCMyX,CAAW7P,EAASzF,EACtB,GACF,EACA4B,QAAS,WACP,IAAI4P,EAAYpX,KAAKoX,UACjBK,EAAazX,KAAKyX,WAClBQ,EAAcjY,KAAKiY,YACnBkD,EAAelD,EAAYxG,MAC3B2J,EAAgBnD,EAAYzG,OAC5BC,EAAQ2F,EAAU3F,MAClBD,EAAS4F,EAAU5F,OACnB3C,EAAOoJ,EAAYpJ,KAAO4I,EAAW5I,KAAOuI,EAAUvI,KACtDG,EAAMiJ,EAAYjJ,IAAMyI,EAAWzI,IAAMoI,EAAUpI,IAElDhP,KAAK6W,UAAW7W,KAAK8Z,WAI1B1O,GAASpL,KAAKsa,aAAc9P,GAAO,CACjCiH,MAAOA,EACPD,OAAQA,GACPxB,GAAcxF,GAAO,CACtB6F,YAAaxB,EACbyB,YAAatB,GACZoI,MACHhW,GAAQpB,KAAKua,UAAU,SAAUlP,GAC/B,IAAI9D,EAAOiF,GAAQnB,EAASzF,GACxByV,EAAgB9T,EAAKkK,MACrB6J,EAAiB/T,EAAKiK,OACtB2H,EAAWkC,EACXjC,EAAYkC,EACZC,EAAQ,EAERJ,IAEF/B,EAAYgC,GADZG,EAAQF,EAAgBF,IAItBC,GAAiBhC,EAAYkC,IAE/BnC,EAAWgC,GADXI,EAAQD,EAAiBF,GAEzBhC,EAAYkC,GAGdlQ,GAASC,EAAS,CAChBoG,MAAO0H,EACP3H,OAAQ4H,IAEVhO,GAASC,EAAQmQ,qBAAqB,OAAO,GAAIhR,GAAO,CACtDiH,MAAOA,EAAQ8J,EACf/J,OAAQA,EAAS+J,GAChBvL,GAAcxF,GAAO,CACtB6F,YAAaxB,EAAO0M,EACpBjL,YAAatB,EAAMuM,GAClBnE,KACL,IACF,GAGEqE,GAAS,CACXC,KAAM,WACJ,IAAIrQ,EAAUrL,KAAKqL,QACf6B,EAAUlN,KAAKkN,QACf8J,EAAUhX,KAAKgX,QAEf3M,GAAW6C,EAAQ7D,YACrBwE,GAAYxC,EAASlF,EAAkB+G,EAAQ7D,WAG7CgB,GAAW6C,EAAQ5D,WACrBuE,GAAYxC,EAASnF,EAAiBgH,EAAQ5D,UAG5Ce,GAAW6C,EAAQ3D,UACrBsE,GAAYxC,EAASpF,EAAgBiH,EAAQ3D,SAG3Cc,GAAW6C,EAAQ1D,OACrBqE,GAAYxC,EAASrF,EAAYkH,EAAQ1D,MAGvCa,GAAW6C,EAAQzD,OACrBoE,GAAYxC,EAAS1E,EAAYuG,EAAQzD,MAG3CoE,GAAYmJ,EAAS3Q,EAAoBrG,KAAK2b,YAAc3b,KAAK4b,UAAUF,KAAK1b,OAE5EkN,EAAQ3E,UAAY2E,EAAQzE,aAC9BoF,GAAYmJ,EAAStQ,EAAa1G,KAAK6b,QAAU7b,KAAK8b,MAAMJ,KAAK1b,MAAO,CACtE+b,SAAS,EACTC,SAAS,IAIT9O,EAAQrE,0BACVgF,GAAYmJ,EAAS5Q,EAAgBpG,KAAKic,WAAajc,KAAKkc,SAASR,KAAK1b,OAG5E6N,GAAYxC,EAAQmP,cAAelU,EAAoBtG,KAAKmc,WAAanc,KAAKoc,SAASV,KAAK1b,OAC5F6N,GAAYxC,EAAQmP,cAAejU,EAAkBvG,KAAKqc,UAAYrc,KAAKsc,QAAQZ,KAAK1b,OAEpFkN,EAAQzF,YACVoG,GAAY7J,OAAQyC,EAAczG,KAAKuc,SAAWvc,KAAKwc,OAAOd,KAAK1b,MAEvE,EACAyc,OAAQ,WACN,IAAIpR,EAAUrL,KAAKqL,QACf6B,EAAUlN,KAAKkN,QACf8J,EAAUhX,KAAKgX,QAEf3M,GAAW6C,EAAQ7D,YACrBkE,GAAelC,EAASlF,EAAkB+G,EAAQ7D,WAGhDgB,GAAW6C,EAAQ5D,WACrBiE,GAAelC,EAASnF,EAAiBgH,EAAQ5D,UAG/Ce,GAAW6C,EAAQ3D,UACrBgE,GAAelC,EAASpF,EAAgBiH,EAAQ3D,SAG9Cc,GAAW6C,EAAQ1D,OACrB+D,GAAelC,EAASrF,EAAYkH,EAAQ1D,MAG1Ca,GAAW6C,EAAQzD,OACrB8D,GAAelC,EAAS1E,EAAYuG,EAAQzD,MAG9C8D,GAAeyJ,EAAS3Q,EAAoBrG,KAAK2b,aAE7CzO,EAAQ3E,UAAY2E,EAAQzE,aAC9B8E,GAAeyJ,EAAStQ,EAAa1G,KAAK6b,QAAS,CACjDE,SAAS,EACTC,SAAS,IAIT9O,EAAQrE,0BACV0E,GAAeyJ,EAAS5Q,EAAgBpG,KAAKic,YAG/C1O,GAAelC,EAAQmP,cAAelU,EAAoBtG,KAAKmc,YAC/D5O,GAAelC,EAAQmP,cAAejU,EAAkBvG,KAAKqc,WAEzDnP,EAAQzF,YACV8F,GAAevJ,OAAQyC,EAAczG,KAAKuc,SAE9C,GAGEG,GAAW,CACbF,OAAQ,WACN,IAAIxc,KAAK8Z,SAAT,CAIA,IAQMrC,EACAQ,EATF/K,EAAUlN,KAAKkN,QACf6J,EAAY/W,KAAK+W,UACjBE,EAAgBjX,KAAKiX,cACrB0F,EAAS5F,EAAUG,YAAcD,EAAcxF,MAC/CmL,EAAS7F,EAAUI,aAAeF,EAAczF,OAChD+J,EAAQtQ,KAAKqM,IAAIqF,EAAS,GAAK1R,KAAKqM,IAAIsF,EAAS,GAAKD,EAASC,EAEnE,GAAc,IAAVrB,EAIErO,EAAQxF,UACV+P,EAAazX,KAAK6c,gBAClB5E,EAAcjY,KAAK8c,kBAGrB9c,KAAKwW,SAEDtJ,EAAQxF,UACV1H,KAAK+c,cAAc3b,GAAQqW,GAAY,SAAUpU,EAAGrC,GAClDyW,EAAWzW,GAAKqC,EAAIkY,CACtB,KACAvb,KAAKgd,eAAe5b,GAAQ6W,GAAa,SAAU5U,EAAGrC,GACpDiX,EAAYjX,GAAKqC,EAAIkY,CACvB,KA1BJ,CA6BF,EACAW,SAAU,WA93CZ,IAAkB7Q,EAAS5I,EA+3CnBzC,KAAK8Z,UAAY9Z,KAAKkN,QAAQ/F,WAAapB,GAI/C/F,KAAKid,aAn4CS5R,EAm4CYrL,KAAKkd,QAn4CRza,EAm4CiB0C,GAl4CnCkG,EAAQM,UAAYN,EAAQM,UAAUwR,SAAS1a,GAAS4I,EAAQQ,UAAUE,QAAQtJ,IAAU,GAk4C3CqD,EAAiBD,GACzE,EACAiW,MAAO,SAAenO,GACpB,IAAIyP,EAAQpd,KAERub,EAAQ5R,OAAO3J,KAAKkN,QAAQxE,iBAAmB,GAC/C2U,EAAQ,EAERrd,KAAK8Z,WAITnM,EAAM2P,iBAEFtd,KAAKud,WAITvd,KAAKud,UAAW,EAChBC,YAAW,WACTJ,EAAMG,UAAW,CACnB,GAAG,IAEC5P,EAAM8P,OACRJ,EAAQ1P,EAAM8P,OAAS,EAAI,GAAK,EACvB9P,EAAM+P,WACfL,GAAS1P,EAAM+P,WAAa,IACnB/P,EAAMU,SACfgP,EAAQ1P,EAAMU,OAAS,EAAI,GAAK,GAGlCrO,KAAKyJ,MAAM4T,EAAQ9B,EAAO5N,IAC5B,EACAiO,UAAW,SAAmBjO,GAC5B,IAAIgQ,EAAUhQ,EAAMgQ,QAChBC,EAASjQ,EAAMiQ,OAEnB,KAAI5d,KAAK8Z,WACU,cAAfnM,EAAMH,MAAuC,gBAAfG,EAAMH,MAAgD,UAAtBG,EAAMkQ,eACxEjU,GAAS+T,IAAwB,IAAZA,GAAiB/T,GAASgU,IAAsB,IAAXA,GACvDjQ,EAAMmQ,UAHT,CAOA,IAEIC,EAFA7Q,EAAUlN,KAAKkN,QACf8Q,EAAWhe,KAAKge,SAGhBrQ,EAAMsQ,eAER7c,GAAQuM,EAAMsQ,gBAAgB,SAAUC,GACtCF,EAASE,EAAMC,YAAcvN,GAAWsN,EAC1C,IAGAF,EAASrQ,EAAMyQ,WAAa,GAAKxN,GAAWjD,GAI5CoQ,EADE1d,OAAOD,KAAK4d,GAAU9c,OAAS,GAAKgM,EAAQ3E,UAAY2E,EAAQ1E,YACzD9D,EAEA8H,GAAQmB,EAAM5M,OAAQ4E,GAG5BkB,EAAenD,KAAKqa,KAOlB,IAHH7P,GAAclO,KAAKqL,QAASlF,EAAkB,CAChDkY,cAAe1Q,EACfoQ,OAAQA,MAMVpQ,EAAM2P,iBACNtd,KAAK+d,OAASA,EACd/d,KAAKse,UAAW,EAEZP,IAAWvZ,IACbxE,KAAKse,UAAW,EAChB7S,GAASzL,KAAKkd,QAASzX,IAxCzB,CA0CF,EACA2W,SAAU,SAAkBzO,GAC1B,IAAIoQ,EAAS/d,KAAK+d,OAElB,IAAI/d,KAAK8Z,UAAaiE,EAAtB,CAIA,IAAIC,EAAWhe,KAAKge,SACpBrQ,EAAM2P,kBAKC,IAHHpP,GAAclO,KAAKqL,QAASnF,EAAiB,CAC/CmY,cAAe1Q,EACfoQ,OAAQA,MAKNpQ,EAAMsQ,eACR7c,GAAQuM,EAAMsQ,gBAAgB,SAAUC,GAEtC1T,GAAOwT,EAASE,EAAMC,aAAe,CAAC,EAAGvN,GAAWsN,GAAO,GAC7D,IAEA1T,GAAOwT,EAASrQ,EAAMyQ,WAAa,IAAM,CAAC,EAAGxN,GAAWjD,GAAO,IAGjE3N,KAAKue,OAAO5Q,GArBZ,CAsBF,EACA2O,QAAS,SAAiB3O,GACxB,IAAI3N,KAAK8Z,SAAT,CAIA,IAAIiE,EAAS/d,KAAK+d,OACdC,EAAWhe,KAAKge,SAEhBrQ,EAAMsQ,eACR7c,GAAQuM,EAAMsQ,gBAAgB,SAAUC,UAC/BF,EAASE,EAAMC,WACxB,WAEOH,EAASrQ,EAAMyQ,WAAa,GAGhCL,IAILpQ,EAAM2P,iBAEDjd,OAAOD,KAAK4d,GAAU9c,SACzBlB,KAAK+d,OAAS,IAGZ/d,KAAKse,WACPte,KAAKse,UAAW,EAChBnS,GAAYnM,KAAKkd,QAASzX,EAAazF,KAAK6W,SAAW7W,KAAKkN,QAAQrF,QAGtEqG,GAAclO,KAAKqL,QAASpF,EAAgB,CAC1CoY,cAAe1Q,EACfoQ,OAAQA,IA9BV,CAgCF,GAGEQ,GAAS,CACXA,OAAQ,SAAgB5Q,GACtB,IAkBIiI,EAlBA1I,EAAUlN,KAAKkN,QACfuK,EAAazX,KAAKyX,WAClBR,EAAgBjX,KAAKiX,cACrBgB,EAAcjY,KAAKiY,YACnB+F,EAAWhe,KAAKge,SAChBD,EAAS/d,KAAK+d,OACdzW,EAAc4F,EAAQ5F,YACtBuH,EAAOoJ,EAAYpJ,KACnBG,EAAMiJ,EAAYjJ,IAClByC,EAAQwG,EAAYxG,MACpBD,EAASyG,EAAYzG,OACrBgN,EAAQ3P,EAAO4C,EACfgN,EAASzP,EAAMwC,EACf6G,EAAU,EACVC,EAAS,EACTrF,EAAWgE,EAAcxF,MACzB0B,EAAY8D,EAAczF,OAC1BkN,GAAa,GAGZpX,GAAeqG,EAAMgR,WACxBrX,EAAcmK,GAASD,EAASC,EAAQD,EAAS,GAG/CxR,KAAK0X,UACPW,EAAUJ,EAAYI,QACtBC,EAASL,EAAYK,OACrBrF,EAAWoF,EAAUpN,KAAK6I,IAAImD,EAAcxF,MAAOgG,EAAWhG,MAAOgG,EAAW5I,KAAO4I,EAAWhG,OAClG0B,EAAYmF,EAASrN,KAAK6I,IAAImD,EAAczF,OAAQiG,EAAWjG,OAAQiG,EAAWzI,IAAMyI,EAAWjG,SAGrG,IAAIoN,EAAUZ,EAAS3d,OAAOD,KAAK4d,GAAU,IACzCa,EAAQ,CACVC,EAAGF,EAAQ1N,KAAO0N,EAAQxN,OAC1B2N,EAAGH,EAAQzN,KAAOyN,EAAQvN,QAGxB2N,EAAQ,SAAeC,GACzB,OAAQA,GACN,KAAKta,EACC6Z,EAAQK,EAAMC,EAAI7L,IACpB4L,EAAMC,EAAI7L,EAAWuL,GAGvB,MAEF,KAAK5Z,EACCiK,EAAOgQ,EAAMC,EAAIzG,IACnBwG,EAAMC,EAAIzG,EAAUxJ,GAGtB,MAEF,KAAK/J,EACCkK,EAAM6P,EAAME,EAAIzG,IAClBuG,EAAME,EAAIzG,EAAStJ,GAGrB,MAEF,KAAKnK,EACC4Z,EAASI,EAAME,EAAI5L,IACrB0L,EAAME,EAAI5L,EAAYsL,GAK9B,EAEA,OAAQV,GAEN,KAAKxZ,EACHsK,GAAQgQ,EAAMC,EACd9P,GAAO6P,EAAME,EACb,MAGF,KAAKpa,EACH,GAAIka,EAAMC,GAAK,IAAMN,GAASvL,GAAY3L,IAAgB0H,GAAOsJ,GAAUmG,GAAUtL,IAAa,CAChGuL,GAAa,EACb,KACF,CAEAM,EAAMra,IACN8M,GAASoN,EAAMC,GAEH,IACVf,EAASnZ,EAETiK,GADA4C,GAASA,GAIPnK,IACFkK,EAASC,EAAQnK,EACjB0H,IAAQiJ,EAAYzG,OAASA,GAAU,GAGzC,MAEF,KAAK1M,EACH,GAAI+Z,EAAME,GAAK,IAAM/P,GAAOsJ,GAAUhR,IAAgBuH,GAAQwJ,GAAWmG,GAASvL,IAAY,CAC5FyL,GAAa,EACb,KACF,CAEAM,EAAMla,GACN0M,GAAUqN,EAAME,EAChB/P,GAAO6P,EAAME,EAETvN,EAAS,IACXuM,EAASlZ,EAETmK,GADAwC,GAAUA,GAIRlK,IACFmK,EAAQD,EAASlK,EACjBuH,IAASoJ,EAAYxG,MAAQA,GAAS,GAGxC,MAEF,KAAK7M,EACH,GAAIia,EAAMC,GAAK,IAAMjQ,GAAQwJ,GAAW/Q,IAAgB0H,GAAOsJ,GAAUmG,GAAUtL,IAAa,CAC9FuL,GAAa,EACb,KACF,CAEAM,EAAMpa,GACN6M,GAASoN,EAAMC,EACfjQ,GAAQgQ,EAAMC,EAEVrN,EAAQ,IACVsM,EAASpZ,EAETkK,GADA4C,GAASA,GAIPnK,IACFkK,EAASC,EAAQnK,EACjB0H,IAAQiJ,EAAYzG,OAASA,GAAU,GAGzC,MAEF,KAAK3M,EACH,GAAIga,EAAME,GAAK,IAAMN,GAAUtL,GAAa7L,IAAgBuH,GAAQwJ,GAAWmG,GAASvL,IAAY,CAClGyL,GAAa,EACb,KACF,CAEAM,EAAMna,IACN2M,GAAUqN,EAAME,GAEH,IACXhB,EAASjZ,EAETkK,GADAwC,GAAUA,GAIRlK,IACFmK,EAAQD,EAASlK,EACjBuH,IAASoJ,EAAYxG,MAAQA,GAAS,GAGxC,MAEF,KAAK1M,EACH,GAAIuC,EAAa,CACf,GAAIuX,EAAME,GAAK,IAAM/P,GAAOsJ,GAAUkG,GAASvL,GAAW,CACxDyL,GAAa,EACb,KACF,CAEAM,EAAMla,GACN0M,GAAUqN,EAAME,EAChB/P,GAAO6P,EAAME,EACbtN,EAAQD,EAASlK,CACnB,MACE0X,EAAMla,GACNka,EAAMra,GAEFka,EAAMC,GAAK,EACTN,EAAQvL,EACVxB,GAASoN,EAAMC,EACND,EAAME,GAAK,GAAK/P,GAAOsJ,IAChCoG,GAAa,GAGfjN,GAASoN,EAAMC,EAGbD,EAAME,GAAK,EACT/P,EAAMsJ,IACR9G,GAAUqN,EAAME,EAChB/P,GAAO6P,EAAME,IAGfvN,GAAUqN,EAAME,EAChB/P,GAAO6P,EAAME,GAIbtN,EAAQ,GAAKD,EAAS,GACxBuM,EAAS7Y,EAGT8J,GAFAwC,GAAUA,EAGV3C,GAFA4C,GAASA,GAGAA,EAAQ,GACjBsM,EAAS/Y,EAET6J,GADA4C,GAASA,GAEAD,EAAS,IAClBuM,EAAS9Y,EAET+J,GADAwC,GAAUA,GAIZ,MAEF,KAAKxM,EACH,GAAIsC,EAAa,CACf,GAAIuX,EAAME,GAAK,IAAM/P,GAAOsJ,GAAUzJ,GAAQwJ,GAAU,CACtDqG,GAAa,EACb,KACF,CAEAM,EAAMla,GACN0M,GAAUqN,EAAME,EAChB/P,GAAO6P,EAAME,EACbtN,EAAQD,EAASlK,EACjBuH,GAAQoJ,EAAYxG,MAAQA,CAC9B,MACEuN,EAAMla,GACNka,EAAMpa,GAEFia,EAAMC,GAAK,EACTjQ,EAAOwJ,GACT5G,GAASoN,EAAMC,EACfjQ,GAAQgQ,EAAMC,GACLD,EAAME,GAAK,GAAK/P,GAAOsJ,IAChCoG,GAAa,IAGfjN,GAASoN,EAAMC,EACfjQ,GAAQgQ,EAAMC,GAGZD,EAAME,GAAK,EACT/P,EAAMsJ,IACR9G,GAAUqN,EAAME,EAChB/P,GAAO6P,EAAME,IAGfvN,GAAUqN,EAAME,EAChB/P,GAAO6P,EAAME,GAIbtN,EAAQ,GAAKD,EAAS,GACxBuM,EAAS9Y,EAGT+J,GAFAwC,GAAUA,EAGV3C,GAFA4C,GAASA,GAGAA,EAAQ,GACjBsM,EAAShZ,EAET8J,GADA4C,GAASA,GAEAD,EAAS,IAClBuM,EAAS7Y,EAET8J,GADAwC,GAAUA,GAIZ,MAEF,KAAKtM,EACH,GAAIoC,EAAa,CACf,GAAIuX,EAAMC,GAAK,IAAMjQ,GAAQwJ,GAAWoG,GAAUtL,GAAY,CAC5DuL,GAAa,EACb,KACF,CAEAM,EAAMpa,GACN6M,GAASoN,EAAMC,EACfjQ,GAAQgQ,EAAMC,EACdtN,EAASC,EAAQnK,CACnB,MACE0X,EAAMna,GACNma,EAAMpa,GAEFia,EAAMC,GAAK,EACTjQ,EAAOwJ,GACT5G,GAASoN,EAAMC,EACfjQ,GAAQgQ,EAAMC,GACLD,EAAME,GAAK,GAAKN,GAAUtL,IACnCuL,GAAa,IAGfjN,GAASoN,EAAMC,EACfjQ,GAAQgQ,EAAMC,GAGZD,EAAME,GAAK,EACTN,EAAStL,IACX3B,GAAUqN,EAAME,GAGlBvN,GAAUqN,EAAME,EAIhBtN,EAAQ,GAAKD,EAAS,GACxBuM,EAAShZ,EAGTiK,GAFAwC,GAAUA,EAGV3C,GAFA4C,GAASA,GAGAA,EAAQ,GACjBsM,EAAS9Y,EAET4J,GADA4C,GAASA,GAEAD,EAAS,IAClBuM,EAAS/Y,EAETgK,GADAwC,GAAUA,GAIZ,MAEF,KAAKvM,EACH,GAAIqC,EAAa,CACf,GAAIuX,EAAMC,GAAK,IAAMN,GAASvL,GAAYwL,GAAUtL,GAAY,CAC9DuL,GAAa,EACb,KACF,CAEAM,EAAMra,GAEN6M,GADAC,GAASoN,EAAMC,GACExX,CACnB,MACE0X,EAAMna,GACNma,EAAMra,GAEFka,EAAMC,GAAK,EACTN,EAAQvL,EACVxB,GAASoN,EAAMC,EACND,EAAME,GAAK,GAAKN,GAAUtL,IACnCuL,GAAa,GAGfjN,GAASoN,EAAMC,EAGbD,EAAME,GAAK,EACTN,EAAStL,IACX3B,GAAUqN,EAAME,GAGlBvN,GAAUqN,EAAME,EAIhBtN,EAAQ,GAAKD,EAAS,GACxBuM,EAAS/Y,EAGTgK,GAFAwC,GAAUA,EAGV3C,GAFA4C,GAASA,GAGAA,EAAQ,GACjBsM,EAAS7Y,EAET2J,GADA4C,GAASA,GAEAD,EAAS,IAClBuM,EAAShZ,EAETiK,GADAwC,GAAUA,GAIZ,MAGF,KAAK/M,EACHzE,KAAKkf,KAAKL,EAAMC,EAAGD,EAAME,GACzBL,GAAa,EACb,MAGF,KAAKha,EACH1E,KAAKyJ,KAnjDb,SAAyBuU,GACvB,IAAImB,EAAYre,EAAe,CAAC,EAAGkd,GAE/BoB,EAAW,EAiBf,OAhBAhe,GAAQ4c,GAAU,SAAUY,EAASR,UAC5Be,EAAUf,GACjBhd,GAAQ+d,GAAW,SAAUE,GAC3B,IAAIC,EAAKrU,KAAKqM,IAAIsH,EAAQxN,OAASiO,EAASjO,QACxCmO,EAAKtU,KAAKqM,IAAIsH,EAAQvN,OAASgO,EAAShO,QACxCmO,EAAKvU,KAAKqM,IAAIsH,EAAQ1N,KAAOmO,EAASnO,MACtCuO,EAAKxU,KAAKqM,IAAIsH,EAAQzN,KAAOkO,EAASlO,MACtCuO,EAAKzU,KAAK0U,KAAKL,EAAKA,EAAKC,EAAKA,GAE9BhE,GADKtQ,KAAK0U,KAAKH,EAAKA,EAAKC,EAAKA,GAChBC,GAAMA,EAEpBzU,KAAKqM,IAAIiE,GAAStQ,KAAKqM,IAAI8H,KAC7BA,EAAW7D,EAEf,GACF,IACO6D,CACT,CA8hDkBQ,CAAgB5B,GAAWrQ,GACrC+Q,GAAa,EACb,MAGF,KAAKla,EACH,IAAKqa,EAAMC,IAAMD,EAAME,EAAG,CACxBL,GAAa,EACb,KACF,CAEA9I,EAASlH,GAAU1O,KAAKgX,SACxBnI,EAAO+P,EAAQxN,OAASwE,EAAO/G,KAC/BG,EAAM4P,EAAQvN,OAASuE,EAAO5G,IAC9ByC,EAAQwG,EAAY5E,SACpB7B,EAASyG,EAAY1E,UAEjBsL,EAAMC,EAAI,EACZf,EAASc,EAAME,EAAI,EAAI9Z,EAAoBF,EAClC8Z,EAAMC,EAAI,IACnBjQ,GAAQ4C,EACRsM,EAASc,EAAME,EAAI,EAAI7Z,EAAoBF,GAGzC6Z,EAAME,EAAI,IACZ/P,GAAOwC,GAIJxR,KAAK6W,UACR7K,GAAYhM,KAAK6Z,QAASvU,GAC1BtF,KAAK6W,SAAU,EAEX7W,KAAK0X,SACP1X,KAAKuZ,cAAa,GAAM,IAO5BmF,IACFzG,EAAYxG,MAAQA,EACpBwG,EAAYzG,OAASA,EACrByG,EAAYpJ,KAAOA,EACnBoJ,EAAYjJ,IAAMA,EAClBhP,KAAK+d,OAASA,EACd/d,KAAK8W,iBAIP1V,GAAQ4c,GAAU,SAAU6B,GAC1BA,EAAEzO,OAASyO,EAAE3O,KACb2O,EAAExO,OAASwO,EAAE1O,IACf,GACF,GAGE2O,GAAU,CAEZtW,KAAM,WAaJ,OAZIxJ,KAAKoJ,OAAUpJ,KAAK6W,SAAY7W,KAAK8Z,WACvC9Z,KAAK6W,SAAU,EACf7W,KAAKuZ,cAAa,GAAM,GAEpBvZ,KAAKkN,QAAQrF,OACf4D,GAASzL,KAAKkd,QAASzX,GAGzBuG,GAAYhM,KAAK6Z,QAASvU,GAC1BtF,KAAKgd,eAAehd,KAAKyZ,qBAGpBzZ,IACT,EAEA+f,MAAO,WAYL,OAXI/f,KAAKoJ,QAAUpJ,KAAK8Z,WACtB9Z,KAAKoX,UAAY5M,GAAO,CAAC,EAAGxK,KAAKggB,kBACjChgB,KAAKyX,WAAajN,GAAO,CAAC,EAAGxK,KAAK8X,mBAClC9X,KAAKiY,YAAczN,GAAO,CAAC,EAAGxK,KAAKyZ,oBACnCzZ,KAAK4W,eAED5W,KAAK6W,SACP7W,KAAK8W,iBAIF9W,IACT,EAEAigB,MAAO,WAiBL,OAhBIjgB,KAAK6W,UAAY7W,KAAK8Z,WACxBtP,GAAOxK,KAAKiY,YAAa,CACvBpJ,KAAM,EACNG,IAAK,EACLyC,MAAO,EACPD,OAAQ,IAEVxR,KAAK6W,SAAU,EACf7W,KAAK8W,gBACL9W,KAAK2X,aAAY,GAAM,GAEvB3X,KAAK4W,eACL5K,GAAYhM,KAAKkd,QAASzX,GAC1BgG,GAASzL,KAAK6Z,QAASvU,IAGlBtF,IACT,EAQAkM,QAAS,SAAiBoD,GACxB,IAAI4Q,EAAcjf,UAAUC,OAAS,QAAsB8J,IAAjB/J,UAAU,IAAmBA,UAAU,GA4BjF,OA1BKjB,KAAK8Z,UAAYxK,IAChBtP,KAAKmgB,QACPngB,KAAKqL,QAAQ8O,IAAM7K,GAGjB4Q,GACFlgB,KAAKsP,IAAMA,EACXtP,KAAK8R,MAAMqI,IAAM7K,EAEbtP,KAAKoJ,QACPpJ,KAAKsa,aAAaH,IAAM7K,EACxBlO,GAAQpB,KAAKua,UAAU,SAAUlP,GAC/BA,EAAQmQ,qBAAqB,OAAO,GAAGrB,IAAM7K,CAC/C,OAGEtP,KAAKmgB,QACPngB,KAAKogB,UAAW,GAGlBpgB,KAAKkN,QAAQ3F,KAAO,KACpBvH,KAAKqgB,WACLrgB,KAAKsgB,KAAKhR,KAIPtP,IACT,EAEAugB,OAAQ,WAMN,OALIvgB,KAAKoJ,OAASpJ,KAAK8Z,WACrB9Z,KAAK8Z,UAAW,EAChB9N,GAAYhM,KAAKgX,QAAS3R,IAGrBrF,IACT,EAEAwgB,QAAS,WAMP,OALIxgB,KAAKoJ,QAAUpJ,KAAK8Z,WACtB9Z,KAAK8Z,UAAW,EAChBrO,GAASzL,KAAKgX,QAAS3R,IAGlBrF,IACT,EAMAygB,QAAS,WACP,IAAIpV,EAAUrL,KAAKqL,QAEnB,OAAKA,EAAiB,SAItBA,EAAiB,aAAIL,EAEjBhL,KAAKmgB,OAASngB,KAAKogB,WACrB/U,EAAQ8O,IAAMna,KAAK0gB,aAGrB1gB,KAAKqgB,WACErgB,MAVEA,IAWX,EAQAkf,KAAM,SAAcyB,GAClB,IAAIC,EAAU3f,UAAUC,OAAS,QAAsB8J,IAAjB/J,UAAU,GAAmBA,UAAU,GAAK0f,EAC9EE,EAAmB7gB,KAAKyX,WACxB5I,EAAOgS,EAAiBhS,KACxBG,EAAM6R,EAAiB7R,IAC3B,OAAOhP,KAAK8gB,OAAO/W,GAAY4W,GAAWA,EAAU9R,EAAOlF,OAAOgX,GAAU5W,GAAY6W,GAAWA,EAAU5R,EAAMrF,OAAOiX,GAC5H,EAQAE,OAAQ,SAAgBhC,GACtB,IAAIC,EAAI9d,UAAUC,OAAS,QAAsB8J,IAAjB/J,UAAU,GAAmBA,UAAU,GAAK6d,EACxErH,EAAazX,KAAKyX,WAClBgB,GAAU,EAoBd,OAnBAqG,EAAInV,OAAOmV,GACXC,EAAIpV,OAAOoV,GAEP/e,KAAKoJ,QAAUpJ,KAAK8Z,UAAY9Z,KAAKkN,QAAQ9E,UAC3CwB,GAASkV,KACXrH,EAAW5I,KAAOiQ,EAClBrG,GAAU,GAGR7O,GAASmV,KACXtH,EAAWzI,IAAM+P,EACjBtG,GAAU,GAGRA,GACFzY,KAAK4W,cAAa,IAIf5W,IACT,EAQAyJ,KAAM,SAAc8R,EAAOwF,GACzB,IAAItJ,EAAazX,KAAKyX,WAStB,OALE8D,GAHFA,EAAQ5R,OAAO4R,IAEH,EACF,GAAK,EAAIA,GAET,EAAIA,EAGPvb,KAAKghB,OAAOvJ,EAAWhG,MAAQ8J,EAAQ9D,EAAWrF,aAAc,KAAM2O,EAC/E,EASAC,OAAQ,SAAgBzF,EAAO0F,EAAOF,GACpC,IAAI7T,EAAUlN,KAAKkN,QACfuK,EAAazX,KAAKyX,WAClBhG,EAAQgG,EAAWhG,MACnBD,EAASiG,EAAWjG,OACpBY,EAAeqF,EAAWrF,aAC1BE,EAAgBmF,EAAWnF,cAG/B,IAFAiJ,EAAQ5R,OAAO4R,KAEF,GAAKvb,KAAKoJ,QAAUpJ,KAAK8Z,UAAY5M,EAAQ3E,SAAU,CAClE,IAAI4Q,EAAW/G,EAAemJ,EAC1BnC,EAAY9G,EAAgBiJ,EAEhC,IAIO,IAJHrN,GAAclO,KAAKqL,QAAS1E,EAAY,CAC1C4U,MAAOA,EACP2F,SAAUzP,EAAQW,EAClBiM,cAAe0C,IAEf,OAAO/gB,KAGT,GAAI+gB,EAAgB,CAClB,IAAI/C,EAAWhe,KAAKge,SAChBpI,EAASlH,GAAU1O,KAAKgX,SACxBjP,EAASiW,GAAY3d,OAAOD,KAAK4d,GAAU9c,OAhyDvD,SAA2B8c,GACzB,IAAIjN,EAAQ,EACRC,EAAQ,EACRmQ,EAAQ,EAUZ,OATA/f,GAAQ4c,GAAU,SAAUoD,GAC1B,IAAIhQ,EAASgQ,EAAMhQ,OACfC,EAAS+P,EAAM/P,OACnBN,GAASK,EACTJ,GAASK,EACT8P,GAAS,CACX,IAGO,CACLpQ,MAHFA,GAASoQ,EAIPnQ,MAHFA,GAASmQ,EAKX,CA+wDgEE,CAAkBrD,GAAY,CACpFjN,MAAOgQ,EAAehQ,MACtBC,MAAO+P,EAAe/P,OAGxByG,EAAW5I,OAASsK,EAAW1H,KAAW1J,EAAOgJ,MAAQ6E,EAAO/G,KAAO4I,EAAW5I,MAAQ4C,GAC1FgG,EAAWzI,MAAQoK,EAAY5H,KAAYzJ,EAAOiJ,MAAQ4E,EAAO5G,IAAMyI,EAAWzI,KAAOwC,EAC3F,MAAWtH,GAAc+W,IAAUrX,GAASqX,EAAMnC,IAAMlV,GAASqX,EAAMlC,IACrEtH,EAAW5I,OAASsK,EAAW1H,KAAWwP,EAAMnC,EAAIrH,EAAW5I,MAAQ4C,GACvEgG,EAAWzI,MAAQoK,EAAY5H,KAAYyP,EAAMlC,EAAItH,EAAWzI,KAAOwC,KAGvEiG,EAAW5I,OAASsK,EAAW1H,GAAS,EACxCgG,EAAWzI,MAAQoK,EAAY5H,GAAU,GAG3CiG,EAAWhG,MAAQ0H,EACnB1B,EAAWjG,OAAS4H,EACpBpZ,KAAK4W,cAAa,EACpB,CAEA,OAAO5W,IACT,EAOAkQ,OAAQ,SAAgB2I,GACtB,OAAO7Y,KAAKshB,UAAUthB,KAAKoX,UAAUlH,QAAU,GAAKvG,OAAOkP,GAC7D,EAOAyI,SAAU,SAAkBzI,GAQ1B,OALIjP,GAFJiP,EAASlP,OAAOkP,KAEQ7Y,KAAKoJ,QAAUpJ,KAAK8Z,UAAY9Z,KAAKkN,QAAQ7E,YACnErI,KAAKoX,UAAUlH,OAAS2I,EAAS,IACjC7Y,KAAK4W,cAAa,GAAM,IAGnB5W,IACT,EAOAmQ,OAAQ,SAAgBoR,GACtB,IAAInR,EAASpQ,KAAKoX,UAAUhH,OAC5B,OAAOpQ,KAAK0U,MAAM6M,EAAS3X,GAASwG,GAAUA,EAAS,EACzD,EAOAA,OAAQ,SAAgBoR,GACtB,IAAIrR,EAASnQ,KAAKoX,UAAUjH,OAC5B,OAAOnQ,KAAK0U,MAAM9K,GAASuG,GAAUA,EAAS,EAAGqR,EACnD,EAQA9M,MAAO,SAAevE,GACpB,IAAIC,EAASnP,UAAUC,OAAS,QAAsB8J,IAAjB/J,UAAU,GAAmBA,UAAU,GAAKkP,EAC7EiH,EAAYpX,KAAKoX,UACjBsB,GAAc,EAoBlB,OAnBAvI,EAASxG,OAAOwG,GAChBC,EAASzG,OAAOyG,GAEZpQ,KAAKoJ,QAAUpJ,KAAK8Z,UAAY9Z,KAAKkN,QAAQ5E,WAC3CsB,GAASuG,KACXiH,EAAUjH,OAASA,EACnBuI,GAAc,GAGZ9O,GAASwG,KACXgH,EAAUhH,OAASA,EACnBsI,GAAc,GAGZA,GACF1Y,KAAK4W,cAAa,GAAM,IAIrB5W,IACT,EAOAwM,QAAS,WACP,IAKIjF,EALAka,EAAUxgB,UAAUC,OAAS,QAAsB8J,IAAjB/J,UAAU,IAAmBA,UAAU,GACzEiM,EAAUlN,KAAKkN,QACfkK,EAAYpX,KAAKoX,UACjBK,EAAazX,KAAKyX,WAClBQ,EAAcjY,KAAKiY,YAGvB,GAAIjY,KAAKoJ,OAASpJ,KAAK6W,QAAS,CAC9BtP,EAAO,CACLuX,EAAG7G,EAAYpJ,KAAO4I,EAAW5I,KACjCkQ,EAAG9G,EAAYjJ,IAAMyI,EAAWzI,IAChCyC,MAAOwG,EAAYxG,MACnBD,OAAQyG,EAAYzG,QAEtB,IAAI+J,EAAQnE,EAAU3F,MAAQ2F,EAAUhF,aAKxC,GAJAhR,GAAQmG,GAAM,SAAUlE,EAAGrC,GACzBuG,EAAKvG,GAAKqC,EAAIkY,CAChB,IAEIkG,EAAS,CAGX,IAAIhD,EAASxT,KAAKC,MAAM3D,EAAKwX,EAAIxX,EAAKiK,QAClCgN,EAAQvT,KAAKC,MAAM3D,EAAKuX,EAAIvX,EAAKkK,OACrClK,EAAKuX,EAAI7T,KAAKC,MAAM3D,EAAKuX,GACzBvX,EAAKwX,EAAI9T,KAAKC,MAAM3D,EAAKwX,GACzBxX,EAAKkK,MAAQ+M,EAAQjX,EAAKuX,EAC1BvX,EAAKiK,OAASiN,EAASlX,EAAKwX,CAC9B,CACF,MACExX,EAAO,CACLuX,EAAG,EACHC,EAAG,EACHtN,MAAO,EACPD,OAAQ,GAaZ,OATItE,EAAQ7E,YACVd,EAAK2I,OAASkH,EAAUlH,QAAU,GAGhChD,EAAQ5E,WACVf,EAAK4I,OAASiH,EAAUjH,QAAU,EAClC5I,EAAK6I,OAASgH,EAAUhH,QAAU,GAG7B7I,CACT,EAOAoF,QAAS,SAAiBpF,GACxB,IAAI2F,EAAUlN,KAAKkN,QACfkK,EAAYpX,KAAKoX,UACjBK,EAAazX,KAAKyX,WAClBQ,EAAc,CAAC,EAEnB,GAAIjY,KAAKoJ,QAAUpJ,KAAK8Z,UAAY5P,GAAc3C,GAAO,CACvD,IAAImR,GAAc,EAEdxL,EAAQ7E,WACNuB,GAASrC,EAAK2I,SAAW3I,EAAK2I,SAAWkH,EAAUlH,SACrDkH,EAAUlH,OAAS3I,EAAK2I,OACxBwI,GAAc,GAIdxL,EAAQ5E,WACNsB,GAASrC,EAAK4I,SAAW5I,EAAK4I,SAAWiH,EAAUjH,SACrDiH,EAAUjH,OAAS5I,EAAK4I,OACxBuI,GAAc,GAGZ9O,GAASrC,EAAK6I,SAAW7I,EAAK6I,SAAWgH,EAAUhH,SACrDgH,EAAUhH,OAAS7I,EAAK6I,OACxBsI,GAAc,IAIdA,GACF1Y,KAAK4W,cAAa,GAAM,GAG1B,IAAI2E,EAAQnE,EAAU3F,MAAQ2F,EAAUhF,aAEpCxI,GAASrC,EAAKuX,KAChB7G,EAAYpJ,KAAOtH,EAAKuX,EAAIvD,EAAQ9D,EAAW5I,MAG7CjF,GAASrC,EAAKwX,KAChB9G,EAAYjJ,IAAMzH,EAAKwX,EAAIxD,EAAQ9D,EAAWzI,KAG5CpF,GAASrC,EAAKkK,SAChBwG,EAAYxG,MAAQlK,EAAKkK,MAAQ8J,GAG/B3R,GAASrC,EAAKiK,UAChByG,EAAYzG,OAASjK,EAAKiK,OAAS+J,GAGrCvb,KAAKgd,eAAe/E,EACtB,CAEA,OAAOjY,IACT,EAMA0hB,iBAAkB,WAChB,OAAO1hB,KAAKoJ,MAAQoB,GAAO,CAAC,EAAGxK,KAAKiX,eAAiB,CAAC,CACxD,EAMA0K,aAAc,WACZ,OAAO3hB,KAAK4hB,MAAQpX,GAAO,CAAC,EAAGxK,KAAKoX,WAAa,CAAC,CACpD,EAMAyF,cAAe,WACb,IAAIpF,EAAazX,KAAKyX,WAClBlQ,EAAO,CAAC,EAQZ,OANIvH,KAAKoJ,OACPhI,GAAQ,CAAC,OAAQ,MAAO,QAAS,SAAU,eAAgB,kBAAkB,SAAUiC,GACrFkE,EAAKlE,GAAKoU,EAAWpU,EACvB,IAGKkE,CACT,EAOAwV,cAAe,SAAuBxV,GACpC,IAAIkQ,EAAazX,KAAKyX,WAClBnQ,EAAcmQ,EAAWnQ,YAsB7B,OApBItH,KAAKoJ,QAAUpJ,KAAK8Z,UAAY5P,GAAc3C,KAC5CqC,GAASrC,EAAKsH,QAChB4I,EAAW5I,KAAOtH,EAAKsH,MAGrBjF,GAASrC,EAAKyH,OAChByI,EAAWzI,IAAMzH,EAAKyH,KAGpBpF,GAASrC,EAAKkK,QAChBgG,EAAWhG,MAAQlK,EAAKkK,MACxBgG,EAAWjG,OAASjK,EAAKkK,MAAQnK,GACxBsC,GAASrC,EAAKiK,UACvBiG,EAAWjG,OAASjK,EAAKiK,OACzBiG,EAAWhG,MAAQlK,EAAKiK,OAASlK,GAGnCtH,KAAK4W,cAAa,IAGb5W,IACT,EAMA8c,eAAgB,WACd,IACIvV,EADA0Q,EAAcjY,KAAKiY,YAYvB,OATIjY,KAAKoJ,OAASpJ,KAAK6W,UACrBtP,EAAO,CACLsH,KAAMoJ,EAAYpJ,KAClBG,IAAKiJ,EAAYjJ,IACjByC,MAAOwG,EAAYxG,MACnBD,OAAQyG,EAAYzG,SAIjBjK,GAAQ,CAAC,CAClB,EAOAyV,eAAgB,SAAwBzV,GACtC,IAEIsa,EACAC,EAHA7J,EAAcjY,KAAKiY,YACnB3Q,EAActH,KAAKkN,QAAQ5F,YAkC/B,OA9BItH,KAAKoJ,OAASpJ,KAAK6W,UAAY7W,KAAK8Z,UAAY5P,GAAc3C,KAC5DqC,GAASrC,EAAKsH,QAChBoJ,EAAYpJ,KAAOtH,EAAKsH,MAGtBjF,GAASrC,EAAKyH,OAChBiJ,EAAYjJ,IAAMzH,EAAKyH,KAGrBpF,GAASrC,EAAKkK,QAAUlK,EAAKkK,QAAUwG,EAAYxG,QACrDoQ,GAAe,EACf5J,EAAYxG,MAAQlK,EAAKkK,OAGvB7H,GAASrC,EAAKiK,SAAWjK,EAAKiK,SAAWyG,EAAYzG,SACvDsQ,GAAgB,EAChB7J,EAAYzG,OAASjK,EAAKiK,QAGxBlK,IACEua,EACF5J,EAAYzG,OAASyG,EAAYxG,MAAQnK,EAChCwa,IACT7J,EAAYxG,MAAQwG,EAAYzG,OAASlK,IAI7CtH,KAAK8W,iBAGA9W,IACT,EAOA+hB,iBAAkB,WAChB,IAAI7U,EAAUjM,UAAUC,OAAS,QAAsB8J,IAAjB/J,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAEnF,IAAKjB,KAAKoJ,QAAUpF,OAAOge,kBACzB,OAAO,KAGT,IAAIvK,EAAazX,KAAKyX,WAClBtW,EAAS0Q,GAAgB7R,KAAK8R,MAAO9R,KAAKoX,UAAWK,EAAYvK,GAErE,IAAKlN,KAAK6W,QACR,OAAO1V,EAGT,IAAI8gB,EAAgBjiB,KAAKwM,UACrB0V,EAAWD,EAAcnD,EACzBqD,EAAWF,EAAclD,EACzBqD,EAAeH,EAAcxQ,MAC7B4Q,EAAgBJ,EAAczQ,OAE9B+J,EAAQpa,EAAOsQ,MAAQxG,KAAK6J,MAAM2C,EAAWrF,cAEnC,IAAVmJ,IACF2G,GAAY3G,EACZ4G,GAAY5G,EACZ6G,GAAgB7G,EAChB8G,GAAiB9G,GAGnB,IAAIjU,EAAc8a,EAAeC,EAC7BzO,EAAWtC,GAAiB,CAC9BhK,YAAaA,EACbmK,MAAOvE,EAAQ+F,UAAYnJ,IAC3B0H,OAAQtE,EAAQiG,WAAarJ,MAE3B+J,EAAWvC,GAAiB,CAC9BhK,YAAaA,EACbmK,MAAOvE,EAAQmG,UAAY,EAC3B7B,OAAQtE,EAAQqG,WAAa,GAC5B,SAEC2E,EAAoB5G,GAAiB,CACvChK,YAAaA,EACbmK,MAAOvE,EAAQuE,QAAoB,IAAV8J,EAAcpa,EAAOsQ,MAAQ2Q,GACtD5Q,OAAQtE,EAAQsE,SAAqB,IAAV+J,EAAcpa,EAAOqQ,OAAS6Q,KAEvD5Q,EAAQyG,EAAkBzG,MAC1BD,EAAS0G,EAAkB1G,OAE/BC,EAAQxG,KAAK6I,IAAIF,EAASnC,MAAOxG,KAAK8I,IAAIF,EAASpC,MAAOA,IAC1DD,EAASvG,KAAK6I,IAAIF,EAASpC,OAAQvG,KAAK8I,IAAIF,EAASrC,OAAQA,IAC7D,IAAIgC,EAASvP,SAASwP,cAAc,UAChCC,EAAUF,EAAOG,WAAW,MAChCH,EAAO/B,MAAQ3G,GAAuB2G,GACtC+B,EAAOhC,OAAS1G,GAAuB0G,GACvCkC,EAAQW,UAAYnH,EAAQyF,WAAa,cACzCe,EAAQY,SAAS,EAAG,EAAG7C,EAAOD,GAC9B,IAAI8Q,EAAwBpV,EAAQ2F,sBAChCA,OAAkD,IAA1ByP,GAA0CA,EAClEvP,EAAwB7F,EAAQ6F,sBACpCW,EAAQb,sBAAwBA,EAE5BE,IACFW,EAAQX,sBAAwBA,GAIlC,IAKIwP,EACAC,EAEAC,EACAC,EACAC,EACAC,EAXAC,EAAc1hB,EAAOsQ,MACrBqR,EAAe3hB,EAAOqQ,OAEtBuR,EAAOb,EACPc,EAAOb,EASPY,IAASX,GAAgBW,EAAOF,GAClCE,EAAO,EACPR,EAAW,EACXE,EAAO,EACPE,EAAW,GACFI,GAAQ,GACjBN,GAAQM,EACRA,EAAO,EAEPJ,EADAJ,EAAWtX,KAAK6I,IAAI+O,EAAaT,EAAeW,IAEvCA,GAAQF,IACjBJ,EAAO,EAEPE,EADAJ,EAAWtX,KAAK6I,IAAIsO,EAAcS,EAAcE,IAI9CR,GAAY,GAAKS,IAASX,GAAiBW,EAAOF,GACpDE,EAAO,EACPR,EAAY,EACZE,EAAO,EACPE,EAAY,GACHI,GAAQ,GACjBN,GAAQM,EACRA,EAAO,EAEPJ,EADAJ,EAAYvX,KAAK6I,IAAIgP,EAAcT,EAAgBW,IAE1CA,GAAQF,IACjBJ,EAAO,EAEPE,EADAJ,EAAYvX,KAAK6I,IAAIuO,EAAeS,EAAeE,IAIrD,IAAI5O,EAAS,CAAC2O,EAAMC,EAAMT,EAAUC,GAEpC,GAAIG,EAAW,GAAKC,EAAY,EAAG,CACjC,IAAIlO,EAAQjD,EAAQ2Q,EACpBhO,EAAOxT,KAAK6hB,EAAO/N,EAAOgO,EAAOhO,EAAOiO,EAAWjO,EAAOkO,EAAYlO,EACxE,CAOA,OAHAhB,EAAQiB,UAAU9T,MAAM6S,EAAS,CAACvS,GAAQiE,OAAO1C,EAAmB0R,EAAOQ,KAAI,SAAUC,GACvF,OAAO5J,KAAK6J,MAAMhK,GAAuB+J,GAC3C,OACOrB,CACT,EAOAyP,eAAgB,SAAwB3b,GACtC,IAAI4F,EAAUlN,KAAKkN,QAenB,OAbKlN,KAAK8Z,UAAa/P,GAAYzC,KAEjC4F,EAAQ5F,YAAc2D,KAAK8I,IAAI,EAAGzM,IAAgBD,IAE9CrH,KAAKoJ,QACPpJ,KAAK2W,cAED3W,KAAK6W,SACP7W,KAAK8W,kBAKJ9W,IACT,EAOAid,YAAa,SAAqBiG,GAChC,IAAIhW,EAAUlN,KAAKkN,QACfgQ,EAAUld,KAAKkd,QACftD,EAAO5Z,KAAK4Z,KAEhB,GAAI5Z,KAAKoJ,QAAUpJ,KAAK8Z,SAAU,CAChC,IAAIqJ,EAAYD,IAASrd,EACrBuC,EAAU8E,EAAQ9E,SAAW8a,IAASpd,EAC1Cod,EAAOC,GAAa/a,EAAU8a,EAAOnd,EACrCmH,EAAQ/F,SAAW+b,EACnBvW,GAAQuQ,EAASvX,EAAaud,GAC9B/W,GAAY+Q,EAAS/X,EAAYge,GACjChX,GAAY+Q,EAASxX,EAAY0C,GAE5B8E,EAAQvE,iBAEXgE,GAAQiN,EAAMjU,EAAaud,GAC3B/W,GAAYyN,EAAMzU,EAAYge,GAC9BhX,GAAYyN,EAAMlU,EAAY0C,GAElC,CAEA,OAAOpI,IACT,GAGEojB,GAAiBlf,EAAOnE,QAExBA,GAAuB,WAMzB,SAASA,EAAQsL,GACf,IAAI6B,EAAUjM,UAAUC,OAAS,QAAsB8J,IAAjB/J,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAInF,GAFAe,EAAgBhC,KAAMD,IAEjBsL,IAAYrE,EAAgBtD,KAAK2H,EAAQgY,SAC5C,MAAM,IAAIC,MAAM,4EAGlBtjB,KAAKqL,QAAUA,EACfrL,KAAKkN,QAAU1C,GAAO,CAAC,EAAGvD,GAAUiD,GAAcgD,IAAYA,GAC9DlN,KAAK6W,SAAU,EACf7W,KAAK8Z,UAAW,EAChB9Z,KAAKge,SAAW,CAAC,EACjBhe,KAAKoJ,OAAQ,EACbpJ,KAAKujB,WAAY,EACjBvjB,KAAKogB,UAAW,EAChBpgB,KAAK4hB,OAAQ,EACb5hB,KAAKwjB,QAAS,EACdxjB,KAAKyjB,MACP,CAplGF,IAAsBvhB,EAAawhB,EAAYC,EAi9G7C,OAj9GoBzhB,EAslGPnC,EAtlGgC4jB,EA+7GzC,CAAC,CACHtiB,IAAK,aACLoB,MAAO,WAEL,OADAuB,OAAOjE,QAAUqjB,GACVrjB,CACT,GAMC,CACDsB,IAAK,cACLoB,MAAO,SAAqByK,GAC1B1C,GAAOvD,GAAUiD,GAAcgD,IAAYA,EAC7C,KA98G+BwW,EAslGX,CAAC,CACrBriB,IAAK,OACLoB,MAAO,WACL,IAEI6M,EAFAjE,EAAUrL,KAAKqL,QACfgY,EAAUhY,EAAQgY,QAAQ9W,cAG9B,IAAIlB,EAAiB,QAArB,CAMA,GAFAA,EAAiB,QAAIrL,KAEL,QAAZqjB,EAAmB,CAMrB,GALArjB,KAAKmgB,OAAQ,EAEb7Q,EAAMjE,EAAQqB,aAAa,QAAU,GACrC1M,KAAK0gB,YAAcpR,GAEdA,EACH,OAIFA,EAAMjE,EAAQ8O,GAChB,KAAuB,WAAZkJ,GAAwBrf,OAAOge,oBACxC1S,EAAMjE,EAAQuY,aAGhB5jB,KAAKsgB,KAAKhR,EApBV,CAqBF,GACC,CACDjO,IAAK,OACLoB,MAAO,SAAc6M,GACnB,IAAI8N,EAAQpd,KAEZ,GAAKsP,EAAL,CAIAtP,KAAKsP,IAAMA,EACXtP,KAAKoX,UAAY,CAAC,EAClB,IAAI/L,EAAUrL,KAAKqL,QACf6B,EAAUlN,KAAKkN,QAOnB,GALKA,EAAQ7E,WAAc6E,EAAQ5E,WACjC4E,EAAQtF,kBAAmB,GAIxBsF,EAAQtF,kBAAqB5D,OAAO6f,YAMzC,GAAI/c,EAAgBpD,KAAK4L,GAEnBvI,EAAqBrD,KAAK4L,GAC5BtP,KAAK8jB,MA9sETC,EA8sEmCzU,EA9sElBpD,QAAQ+I,GAAsB,IAC/C+O,EAASC,KAAKF,GACd5O,EAAc,IAAI0O,YAAYG,EAAO9iB,QAEzCE,GADI8iB,EAAQ,IAAIC,WAAWhP,IACZ,SAAU1S,EAAOzB,GAC9BkjB,EAAMljB,GAAKgjB,EAAOI,WAAWpjB,EAC/B,IACOmU,IA2sECnV,KAAKqkB,YAPT,CA5sEN,IACMN,EACAC,EACA7O,EACA+O,EAutEII,EAAM,IAAIC,eACVF,EAAQrkB,KAAKqkB,MAAM3I,KAAK1b,MAC5BA,KAAKujB,WAAY,EACjBvjB,KAAKskB,IAAMA,EAKXA,EAAIE,QAAUH,EACdC,EAAIG,QAAUJ,EACdC,EAAII,UAAYL,EAEhBC,EAAIK,WAAa,WAEXL,EAAIM,kBAAkB,kBAAoBhe,GAC5C0d,EAAIO,OAER,EAEAP,EAAIQ,OAAS,WACX1H,EAAM0G,KAAKQ,EAAIS,SACjB,EAEAT,EAAIU,UAAY,WACd5H,EAAMmG,WAAY,EAClBnG,EAAMkH,IAAM,IACd,EAGIpX,EAAQvF,kBAAoB0H,GAAiBC,IAAQjE,EAAQ2O,cAC/D1K,EAAMM,GAAaN,IAIrBgV,EAAIW,KAAK,MAAO3V,GAAK,GACrBgV,EAAIY,aAAe,cACnBZ,EAAIa,gBAA0C,oBAAxB9Z,EAAQ2O,YAC9BsK,EAAIc,MAzCJ,MAhBEplB,KAAKqkB,OAbP,CAuEF,GACC,CACDhjB,IAAK,OACLoB,MAAO,SAAc0S,GACnB,IAAIjI,EAAUlN,KAAKkN,QACfkK,EAAYpX,KAAKoX,UAGjBhC,EAAcF,GAAuBC,GACrCjF,EAAS,EACTC,EAAS,EACTC,EAAS,EAEb,GAAIgF,EAAc,EAAG,CAEnBpV,KAAKsP,IA/vEb,SAA8B6F,EAAakQ,GAMzC,IALA,IAAIC,EAAS,GAGTpB,EAAQ,IAAIC,WAAWhP,GAEpB+O,EAAMhjB,OAAS,GAGpBokB,EAAO1kB,KAAKmU,GAAalU,MAAM,KAAMyJ,GAAQ4Z,EAAMqB,SAAS,EAN9C,SAOdrB,EAAQA,EAAMqB,SAPA,MAUhB,MAAO,QAAQngB,OAAOigB,EAAU,YAAYjgB,OAAOogB,KAAKF,EAAO7U,KAAK,KACtE,CAivEmBgV,CAAqBtQ,EAAavO,GAE7C,IAAI8e,EA5pEZ,SAA0BtQ,GACxB,IAAIlF,EAAS,EACTC,EAAS,EACTC,EAAS,EAEb,OAAQgF,GAEN,KAAK,EACHjF,GAAU,EACV,MAGF,KAAK,EACHD,GAAU,IACV,MAGF,KAAK,EACHE,GAAU,EACV,MAGF,KAAK,EACHF,EAAS,GACTE,GAAU,EACV,MAGF,KAAK,EACHF,EAAS,GACT,MAGF,KAAK,EACHA,EAAS,GACTC,GAAU,EACV,MAGF,KAAK,EACHD,GAAU,GAId,MAAO,CACLA,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EAEZ,CA2mEgCuV,CAAiBvQ,GAEzClF,EAASwV,EAAkBxV,OAC3BC,EAASuV,EAAkBvV,OAC3BC,EAASsV,EAAkBtV,MAC7B,CAEIlD,EAAQ7E,YACV+O,EAAUlH,OAASA,GAGjBhD,EAAQ5E,WACV8O,EAAUjH,OAASA,EACnBiH,EAAUhH,OAASA,GAGrBpQ,KAAKqkB,OACP,GACC,CACDhjB,IAAK,QACLoB,MAAO,WACL,IAAI4I,EAAUrL,KAAKqL,QACfiE,EAAMtP,KAAKsP,IACX0K,EAAc3O,EAAQ2O,YACtBC,EAAiB3K,EAEjBtP,KAAKkN,QAAQvF,kBAAoB0H,GAAiBC,KAC/C0K,IACHA,EAAc,aAIhBC,EAAiBrK,GAAaN,IAGhCtP,KAAKga,YAAcA,EACnBha,KAAKia,eAAiBA,EACtB,IAAInI,EAAQ7N,SAASwP,cAAc,OAE/BuG,IACFlI,EAAMkI,YAAcA,GAGtBlI,EAAMqI,IAAMF,GAAkB3K,EAC9BwC,EAAMoI,IAAM7O,EAAQ6O,KAAO,oBAC3Bla,KAAK8R,MAAQA,EACbA,EAAMgT,OAAS9kB,KAAK8V,MAAM4F,KAAK1b,MAC/B8R,EAAM2S,QAAUzkB,KAAK4lB,KAAKlK,KAAK1b,MAC/ByL,GAASqG,EAAOvM,GAChB8F,EAAQwa,WAAWC,aAAahU,EAAOzG,EAAQ0a,YACjD,GACC,CACD1kB,IAAK,QACLoB,MAAO,WACL,IAAIujB,EAAShmB,KAET8R,EAAQ9R,KAAK8R,MACjBA,EAAMgT,OAAS,KACfhT,EAAM2S,QAAU,KAChBzkB,KAAKwjB,QAAS,EAGd,IAAIyC,EAAc/hB,EAAOgiB,WAAa,sCAAsCxiB,KAAKQ,EAAOgiB,UAAUC,WAE9FC,EAAO,SAAchU,EAAcE,GACrC9H,GAAOwb,EAAO5O,UAAW,CACvBhF,aAAcA,EACdE,cAAeA,EACfhL,YAAa8K,EAAeE,IAE9B0T,EAAOhG,iBAAmBxV,GAAO,CAAC,EAAGwb,EAAO5O,WAC5C4O,EAAOxC,QAAS,EAChBwC,EAAOpE,OAAQ,EAEfoE,EAAOK,OACT,EAGA,IAAIvU,EAAMM,cAAiB6T,EAA3B,CAKA,IAAIK,EAAcriB,SAASwP,cAAc,OACrC8S,EAAOtiB,SAASsiB,MAAQtiB,SAASG,gBACrCpE,KAAKsmB,YAAcA,EAEnBA,EAAYxB,OAAS,WACnBsB,EAAKE,EAAY7U,MAAO6U,EAAY9U,QAE/ByU,GACHM,EAAKC,YAAYF,EAErB,EAEAA,EAAYnM,IAAMrI,EAAMqI,IAGnB8L,IACHK,EAAY/a,MAAMwP,QAAU,uJAC5BwL,EAAKlM,YAAYiM,GAnBnB,MAFEF,EAAKtU,EAAMM,aAAcN,EAAMQ,cAuBnC,GACC,CACDjR,IAAK,OACLoB,MAAO,WACL,IAAIqP,EAAQ9R,KAAK8R,MACjBA,EAAMgT,OAAS,KACfhT,EAAM2S,QAAU,KAChB3S,EAAM+T,WAAWW,YAAY1U,GAC7B9R,KAAK8R,MAAQ,IACf,GACC,CACDzQ,IAAK,QACLoB,MAAO,WACL,GAAKzC,KAAK4hB,QAAS5hB,KAAKoJ,MAAxB,CAIA,IAAIiC,EAAUrL,KAAKqL,QACf6B,EAAUlN,KAAKkN,QACf4E,EAAQ9R,KAAK8R,MAEbiF,EAAY1L,EAAQwa,WACpBY,EAAWxiB,SAASwP,cAAc,OACtCgT,EAAS3L,UArpGA,orCAspGT,IAAI9D,EAAUyP,EAAS/L,cAAc,IAAItV,OAAOd,EAAW,eACvDkP,EAASwD,EAAQ0D,cAAc,IAAItV,OAAOd,EAAW,YACrD4Y,EAAUlG,EAAQ0D,cAAc,IAAItV,OAAOd,EAAW,cACtDuV,EAAU7C,EAAQ0D,cAAc,IAAItV,OAAOd,EAAW,cACtDsV,EAAOC,EAAQa,cAAc,IAAItV,OAAOd,EAAW,UACvDtE,KAAK+W,UAAYA,EACjB/W,KAAKgX,QAAUA,EACfhX,KAAKwT,OAASA,EACdxT,KAAKkd,QAAUA,EACfld,KAAK6Z,QAAUA,EACf7Z,KAAKoa,QAAUpD,EAAQ0D,cAAc,IAAItV,OAAOd,EAAW,cAC3DtE,KAAK4Z,KAAOA,EACZpG,EAAO6G,YAAYvI,GAEnBrG,GAASJ,EAAS/F,GAElByR,EAAU+O,aAAa9O,EAAS3L,EAAQ0a,aAEnC/lB,KAAKmgB,OACRnU,GAAY8F,EAAOvM,GAGrBvF,KAAK+Z,cACL/Z,KAAK0b,OACLxO,EAAQ9F,mBAAqB6D,KAAK8I,IAAI,EAAG7G,EAAQ9F,qBAAuBC,IACxE6F,EAAQ5F,YAAc2D,KAAK8I,IAAI,EAAG7G,EAAQ5F,cAAgBD,IAC1D6F,EAAQhG,SAAW+D,KAAK8I,IAAI,EAAG9I,KAAK6I,IAAI,EAAG7I,KAAKC,MAAMgC,EAAQhG,aAAe,EAC7EuE,GAASoO,EAASvU,GAEb4H,EAAQpF,QACX2D,GAASoO,EAAQ6M,uBAAuB,GAAGthB,OAAOd,EAAW,YAAagB,GAGvE4H,EAAQnF,QACX0D,GAASoO,EAAQ6M,uBAAuB,GAAGthB,OAAOd,EAAW,YAAagB,GAGxE4H,EAAQjF,YACVwD,GAASuL,EAAS,GAAG5R,OAAOd,EAAW,QAGpC4I,EAAQlF,WACXyD,GAASmO,EAAMpU,GAGb0H,EAAQvE,iBACV8C,GAASmO,EAAMlU,GACfiH,GAAQiN,EAAMjU,EAAapB,IAGxB2I,EAAQtE,mBACX6C,GAASoO,EAAQ6M,uBAAuB,GAAGthB,OAAOd,EAAW,UAAWgB,GACxEmG,GAASoO,EAAQ6M,uBAAuB,GAAGthB,OAAOd,EAAW,WAAYgB,IAG3EtF,KAAKwW,SACLxW,KAAKoJ,OAAQ,EACbpJ,KAAKid,YAAY/P,EAAQ/F,UAErB+F,EAAQhF,UACVlI,KAAKwJ,OAGPxJ,KAAK2M,QAAQO,EAAQ3F,MAEjB8C,GAAW6C,EAAQ9D,QACrByE,GAAYxC,EAAS7E,EAAa0G,EAAQ9D,MAAO,CAC/C4D,MAAM,IAIVkB,GAAc7C,EAAS7E,EAhFvB,CAiFF,GACC,CACDnF,IAAK,UACLoB,MAAO,WACAzC,KAAKoJ,QAIVpJ,KAAKoJ,OAAQ,EACbpJ,KAAKyc,SACLzc,KAAKgb,eACLhb,KAAKgX,QAAQ6O,WAAWW,YAAYxmB,KAAKgX,SACzChL,GAAYhM,KAAKqL,QAAS/F,GAC5B,GACC,CACDjE,IAAK,WACLoB,MAAO,WACDzC,KAAKoJ,OACPpJ,KAAK2mB,UACL3mB,KAAKoJ,OAAQ,EACbpJ,KAAK6W,SAAU,GACN7W,KAAKwjB,QACdxjB,KAAKsmB,YAAYxB,OAAS,KAC1B9kB,KAAKwjB,QAAS,EACdxjB,KAAK4hB,OAAQ,GACJ5hB,KAAKujB,WACdvjB,KAAKskB,IAAIE,QAAU,KACnBxkB,KAAKskB,IAAIO,SACA7kB,KAAK8R,OACd9R,KAAK4lB,MAET,MAx7GcxjB,EAAkBF,EAAYH,UAAW2hB,GACrDC,GAAavhB,EAAkBF,EAAayhB,GA+8GzC5jB,CACT,CAxZ2B,GA4Z3B,OAFAyK,GAAOzK,GAAQgC,UAAWyU,GAAQhP,GAASiU,GAAQiB,GAAU6B,GAAQuB,IAE9D/f,EAER","sourcesContent":["/*!\n * Cropper.js v1.5.12\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2021-06-12T08:00:17.411Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Cropper = factory());\n}(this, (function () { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: MIN_CONTAINER_WIDTH,\n    minContainerHeight: MIN_CONTAINER_HEIGHT,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n\n    var maxRatio = 0;\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n\n        if (Math.abs(ratio) > Math.abs(maxRatio)) {\n          maxRatio = ratio;\n        }\n      });\n    });\n    return maxRatio;\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      var minWidth = Number(options.minContainerWidth);\n      var minHeight = Number(options.minContainerHeight);\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH),\n        height: Math.max(container.offsetHeight, minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      canvasData.left = (containerData.width - canvasData.width) / 2;\n      canvasData.top = (containerData.height - canvasData.height) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      if (this.disabled) {\n        return;\n      }\n\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var ratioX = container.offsetWidth / containerData.width;\n      var ratioY = container.offsetHeight / containerData.height;\n      var ratio = Math.abs(ratioX - 1) > Math.abs(ratioY - 1) ? ratioX : ratioY; // Resize when width changed or height changed\n\n      if (ratio !== 1) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && ( // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper = /*#__PURE__*/function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"https://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        } // The third parameter is required for avoiding side-effect (#682)\n\n\n        xhr.open('GET', url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.initialImageData = assign({}, _this2.imageData);\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n})));\n"]}