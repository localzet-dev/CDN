{"version":3,"file":"cropper.js","names":["global","factory","exports","module","define","amd","globalThis","self","Cropper","this","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","props","descriptor","configurable","writable","value","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","o","minLen","n","toString","call","slice","name","test","_unsupportedIterableToArray","TypeError","_nonIterableSpread","len","arr2","IS_BROWSER","window","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","isNaN","Number","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","toArray","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","addClass","elem","classList","add","className","trim","indexOf","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","dataset","getAttribute","setData","setAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","fromCharCode","String","REGEXP_DATA_URL_HEAD","resetAndGetOrientation","arrayBuffer","orientation","dataView","DataView","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","minWidth","minHeight","containerData","max","offsetWidth","offsetHeight","imageData","rotated","abs","naturalWidth","naturalHeight","canvasWidth","canvasHeight","canvasData","limited","limitCanvas","min","maxWidth","maxHeight","oldLeft","oldTop","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","canvas","renderImage","limitCropBox","image","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","createElement","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","removeAttribute","removeData","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","ratioX","ratioY","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","pointers","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","maxRatio","pointer2","x1","y1","x2","y2","z1","sqrt","getMaxZoomRatio","p","methods","reset","initialImageData","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","getPointersCenter","rotateTo","_scaleX","scale","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","imageNaturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","_ref8$minHeight","context","getContext","maxSizes","minSizes","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","map","param","floor","getSourceCanvas","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","instance","Constructor","_classCallCheck","tagName","Error","reloading","sizing","init","protoProps","staticProps","toDataURL","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","clone","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","mimeType","chunks","subarray","btoa","arrayBufferToDataURL","_parseOrientation","parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild"],"sources":["cropper.js"],"mappings":"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","sourcesContent":["/*!\n * Cropper.js v1.5.13\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2022-11-20T05:30:46.114Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Cropper = factory());\n})(this, (function () { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = null != arguments[i] ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n    return target;\n  }\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n  }\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper';\n\n  // Actions\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw';\n\n  // Classes\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\");\n\n  // Data keys\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\");\n\n  // Drag modes\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none';\n\n  // Events\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom';\n\n  // Mime types\n  var MIME_TYPE_JPEG = 'image/jpeg';\n\n  // RegExps\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i;\n\n  // Misc\n  // Inspired by the default width and height of a canvas element.\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: MIN_CONTAINER_WIDTH,\n    minContainerHeight: MIN_CONTAINER_HEIGHT,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length) /* array-like */) {\n        toArray(data).forEach(function (value, key) {\n          callback.call(data, value, key, data);\n        });\n      } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n      style[property] = value;\n    });\n  }\n\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n    var className = element.className.trim();\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    }\n\n    // IE10-11 doesn't support the second parameter of `classList.toggle`\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n  var onceSupported = function () {\n    var supported = false;\n    if (IS_BROWSER) {\n      var once = false;\n      var listener = function listener() {};\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n    return supported;\n  }();\n\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n      element.removeEventListener(event, handler, options);\n    });\n  }\n\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n          listeners = _element$listeners === void 0 ? {} : _element$listeners;\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n          listener.apply(element, args);\n        };\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n      element.addEventListener(event, _handler, options);\n    });\n  }\n\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n  function dispatchEvent(element, type, data) {\n    var event;\n\n    // Event and CustomEvent on IE9-11 are global objects, not constructors\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n    return element.dispatchEvent(event);\n  }\n\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n    var values = [];\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    }\n\n    // Rotate should come first before scale to match orientation transform\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n    var maxRatio = 0;\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        if (Math.abs(ratio) > Math.abs(maxRatio)) {\n          maxRatio = ratio;\n        }\n      });\n    });\n    return maxRatio;\n  }\n\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n        startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n  function getAdjustedSizes(_ref4) {\n    var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n      imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\n\n    // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = [];\n\n    // Chunk Typed Array for better performance (#435)\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation;\n\n    // Ignores range error when the image does not have correct Exif information\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart;\n\n      // Only handle JPEG image (start by 0xFFD8)\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n          offset += 1;\n        }\n      }\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n          if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n        }\n      }\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n        var _offset;\n        var i;\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n            // 8 is the offset of the current tag's value\n            _offset += 8;\n\n            // Get the original orientation value\n            orientation = dataView.getUint16(_offset, littleEndian);\n\n            // Override the orientation with its default value\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n    return orientation;\n  }\n\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n\n      // Rotate left 180°\n      case 3:\n        rotate = -180;\n        break;\n\n      // Flip vertical\n      case 4:\n        scaleY = -1;\n        break;\n\n      // Flip vertical and rotate right 90°\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n\n      // Rotate right 90°\n      case 6:\n        rotate = 90;\n        break;\n\n      // Flip horizontal and rotate right 90°\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n\n      // Rotate left 90°\n      case 8:\n        rotate = -90;\n        break;\n    }\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n      var minWidth = Number(options.minContainerWidth);\n      var minHeight = Number(options.minContainerHeight);\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH),\n        height: Math.max(container.offsetHeight, minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n        imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      canvasData.left = (containerData.width - canvasData.width) / 2;\n      canvasData.top = (containerData.height - canvasData.height) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n        imageData = this.imageData;\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n            width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n            height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n            degree: imageData.rotate || 0\n          }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n        imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n        canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true);\n\n      // Initialize auto crop area\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n      // The width/height of auto crop area must large than \"minWidth/Height\"\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height;\n\n        // The min/maxCropBoxWidth/Height must be less than container's width/height\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        }\n\n        // The minWidth/Height must be less than maxWidth/Height\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n        crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n      if (!preview) {\n        return;\n      }\n      var previews = preview;\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img');\n\n        // Save the original size for recover\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n        img.src = url;\n        img.alt = alt;\n\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n        height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      if (this.disabled) {\n        return;\n      }\n      var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n      var ratioX = container.offsetWidth / containerData.width;\n      var ratioY = container.offsetHeight / containerData.height;\n      var ratio = Math.abs(ratioX - 1) > Math.abs(ratioY - 1) ? ratioX : ratioY;\n\n      // Resize when width changed or height changed\n      if (ratio !== 1) {\n        var canvasData;\n        var cropBoxData;\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n        this.render();\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n      if (this.disabled) {\n        return;\n      }\n      event.preventDefault();\n\n      // Limit wheel speed to prevent zoom too fast (#21)\n      if (this.wheeling) {\n        return;\n      }\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n        button = event.button;\n      if (this.disabled\n\n      // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && (\n      // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0\n\n      // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n      var options = this.options,\n        pointers = this.pointers;\n      var action;\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      // This line is required for preventing page zooming in iOS browsers\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n      if (this.disabled || !action) {\n        return;\n      }\n      var pointers = this.pointers;\n      event.preventDefault();\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n      var action = this.action,\n        pointers = this.pointers;\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n      if (!action) {\n        return;\n      }\n      event.preventDefault();\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset;\n\n      // Locking aspect ratio in \"free mode\" by holding shift key\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n            break;\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n            break;\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n            break;\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n            break;\n        }\n      };\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n\n        // Resize crop box\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_EAST);\n          width += range.x;\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n          break;\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n          break;\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n          break;\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_SOUTH);\n          height += range.y;\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n          break;\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n          break;\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n          break;\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n          break;\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n          break;\n\n        // Move canvas\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n\n        // Zoom canvas\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n\n        // Create crop box\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n          if (range.y < 0) {\n            top -= height;\n          }\n\n          // Show the crop box if is hidden\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n          break;\n      }\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      }\n\n      // Override\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true);\n\n        // Render canvas after crop box rendered\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n      return this;\n    },\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n      return this;\n    },\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n      element[NAMESPACE] = undefined;\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n      this.uncreate();\n      return this;\n    },\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n        left = _this$canvasData.left,\n        top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n      return this;\n    },\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n        canvasData = this.canvasData;\n      var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          };\n\n          // Zoom from the triggering point of the event\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n      return this;\n    },\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n      return this;\n    },\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n      return this;\n    },\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n      var data;\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n      return data;\n    },\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n      var cropBoxData = {};\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n        var ratio = imageData.width / imageData.naturalWidth;\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n        this.setCropBoxData(cropBoxData);\n      }\n      return this;\n    },\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n      return data;\n    },\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n        this.renderCanvas(true);\n      }\n      return this;\n    },\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n      return data || {};\n    },\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n        this.renderCropBox();\n      }\n      return this;\n    },\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options);\n\n      // Returns the source canvas if it is not cropped.\n      if (!this.cropped) {\n        return source;\n      }\n      var _this$getData = this.getData(),\n        initialX = _this$getData.x,\n        initialY = _this$getData.y,\n        initialWidth = _this$getData.width,\n        initialHeight = _this$getData.height;\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n      var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: options.width || (ratio !== 1 ? source.width : initialWidth),\n          height: options.height || (ratio !== 1 ? source.height : initialHeight)\n        }),\n        width = _getAdjustedSizes.width,\n        height = _getAdjustedSizes.height;\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      }\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n      var sourceWidth = source.width;\n      var sourceHeight = source.height;\n\n      // Source canvas parameters\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight;\n\n      // Destination canvas parameters\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n      var params = [srcX, srcY, srcWidth, srcHeight];\n\n      // Avoid \"IndexSizeError\"\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      }\n\n      // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n        if (this.ready) {\n          this.initCropBox();\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n      return this;\n    },\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n  var Cropper = /*#__PURE__*/function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      _classCallCheck(this, Cropper);\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n        if (element[NAMESPACE]) {\n          return;\n        }\n        element[NAMESPACE] = this;\n        if (tagName === 'img') {\n          this.isImg = true;\n\n          // e.g.: \"img/picture.jpg\"\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url;\n\n          // Stop when it's a blank image\n          if (!url) {\n            return;\n          }\n\n          // e.g.: \"https://example.com/img/picture.jpg\"\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n        if (!url) {\n          return;\n        }\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n          options = this.options;\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        }\n\n        // Only IE10+ supports Typed Arrays\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        }\n\n        // Detect the mime type of the image directly if it is a Data URL\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n          return;\n        }\n\n        // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr;\n\n        // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        };\n\n        // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        // The third parameter is required for avoiding side-effect (#682)\n        xhr.open('GET', url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n          imageData = this.imageData;\n\n        // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n          var _parseOrientation = parseOrientation(orientation);\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n          url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          }\n\n          // Bust cache when there is not a \"crossOrigin\" property (#519)\n          crossOriginUrl = addTimestamp(url);\n        }\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true;\n\n        // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.initialImageData = assign({}, _this2.imageData);\n          _this2.sizing = false;\n          _this2.sized = true;\n          _this2.build();\n        };\n\n        // Most modern browsers (excepts iOS WebKit)\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n        sizingImage.src = image.src;\n\n        // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n        var element = this.element,\n          options = this.options,\n          image = this.image;\n\n        // Create cropper elements\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image);\n\n        // Hide the original image\n        addClass(element, CLASS_HIDDEN);\n\n        // Inserts the cropper after to the current image\n        container.insertBefore(cropper, element.nextSibling);\n\n        // Show the hidden image\n        removeClass(image, CLASS_HIDE);\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n        if (options.autoCrop) {\n          this.crop();\n        }\n        this.setData(options.data);\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        var parentNode = this.cropper.parentNode;\n        if (parentNode) {\n          parentNode.removeChild(this.cropper);\n        }\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n    return Cropper;\n  }();\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n"]}